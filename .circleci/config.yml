# Yext Answers CircleCI configuration
version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.9
jobs:
  # generate bundles
  build:
    docker:
      - image: circleci/node:7.10
    working_directory: ~/answers
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - .circleci
  # deploy to S3
  deploy:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/answers
    steps:
      - attach_workspace:
          at: ~/answers
      - run:
          name: Configure AWS
          command: |
            mkdir ~/.aws
            cp .circleci/aws_config ~/.aws/config
            echo -e $AWS_PROD_PROFILE >> ~/.aws/config
      - aws-s3/copy:
          from: dist
          to: '${AWS_DEPLOY_BUCKET}'
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --recursive \
            --profile production \
  # dryrun version of the deploy job, used for all non-master branches
  deploy_dryrun:
    docker:
      - image: circleci/python:2.7
    working_directory: ~/answers
    steps:
      - attach_workspace:
          at: ~/answers
      - run:
          name: Configure AWS
          command: |
            mkdir ~/.aws
            cp .circleci/aws_config ~/.aws/config
            echo -e $AWS_PROD_PROFILE >> ~/.aws/config
      - aws-s3/copy:
          from: dist
          to: '${AWS_DEPLOY_BUCKET}'
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400" \
            --recursive \
            --dryrun \
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - hold:
          type: approval
          requires:
            - build
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - hold
      - deploy_dryrun:
          filters:
            branches:
              ignore: master
          requires:
            - hold
