(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.TemplateBundle = {}));
}(this, function (exports) { 'use strict';

  function _typeof(obj) {
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function (obj) {
        return typeof obj;
      };
    } else {
      _typeof = function (obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }

    return _typeof(obj);
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) {
      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

      return arr2;
    }
  }

  function _iterableToArray(iter) {
    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance");
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function unwrapExports (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  function getCjsExportFromNamespace (n) {
  	return n && n['default'] || n;
  }

  var handlebars_min = createCommonjsModule(function (module, exports) {
    /**!
    
     @license
     handlebars v4.1.2
    
    Copyright (C) 2011-2017 by Yehuda Katz
    
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
    
    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.
    
    */
    !function (a, b) {
       module.exports = b() ;
    }(commonjsGlobal, function () {
      return function (a) {
        function b(d) {
          if (c[d]) return c[d].exports;
          var e = c[d] = {
            exports: {},
            id: d,
            loaded: !1
          };
          return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports;
        }

        var c = {};
        return b.m = a, b.c = c, b.p = "", b(0);
      }([function (a, b, c) {

        function d() {
          var a = r();
          return a.compile = function (b, c) {
            return k.compile(b, c, a);
          }, a.precompile = function (b, c) {
            return k.precompile(b, c, a);
          }, a.AST = i["default"], a.Compiler = k.Compiler, a.JavaScriptCompiler = m["default"], a.Parser = j.parser, a.parse = j.parse, a;
        }

        var e = c(1)["default"];
        b.__esModule = !0;
        var f = c(2),
            g = e(f),
            h = c(35),
            i = e(h),
            j = c(36),
            k = c(41),
            l = c(42),
            m = e(l),
            n = c(39),
            o = e(n),
            p = c(34),
            q = e(p),
            r = g["default"].create,
            s = d();
        s.create = d, q["default"](s), s.Visitor = o["default"], s["default"] = s, b["default"] = s, a.exports = b["default"];
      }, function (a, b) {

        b["default"] = function (a) {
          return a && a.__esModule ? a : {
            "default": a
          };
        }, b.__esModule = !0;
      }, function (a, b, c) {

        function d() {
          var a = new h.HandlebarsEnvironment();
          return n.extend(a, h), a.SafeString = j["default"], a.Exception = l["default"], a.Utils = n, a.escapeExpression = n.escapeExpression, a.VM = p, a.template = function (b) {
            return p.template(b, a);
          }, a;
        }

        var e = c(3)["default"],
            f = c(1)["default"];
        b.__esModule = !0;
        var g = c(4),
            h = e(g),
            i = c(21),
            j = f(i),
            k = c(6),
            l = f(k),
            m = c(5),
            n = e(m),
            o = c(22),
            p = e(o),
            q = c(34),
            r = f(q),
            s = d();
        s.create = d, r["default"](s), s["default"] = s, b["default"] = s, a.exports = b["default"];
      }, function (a, b) {

        b["default"] = function (a) {
          if (a && a.__esModule) return a;
          var b = {};
          if (null != a) for (var c in a) {
            Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
          }
          return b["default"] = a, b;
        }, b.__esModule = !0;
      }, function (a, b, c) {

        function d(a, b, c) {
          this.helpers = a || {}, this.partials = b || {}, this.decorators = c || {}, i.registerDefaultHelpers(this), j.registerDefaultDecorators(this);
        }

        var e = c(1)["default"];
        b.__esModule = !0, b.HandlebarsEnvironment = d;
        var f = c(5),
            g = c(6),
            h = e(g),
            i = c(10),
            j = c(18),
            k = c(20),
            l = e(k),
            m = "4.1.2";
        b.VERSION = m;
        var n = 7;
        b.COMPILER_REVISION = n;
        var o = {
          1: "<= 1.0.rc.2",
          2: "== 1.0.0-rc.3",
          3: "== 1.0.0-rc.4",
          4: "== 1.x.x",
          5: "== 2.0.0-alpha.x",
          6: ">= 2.0.0-beta.1",
          7: ">= 4.0.0"
        };
        b.REVISION_CHANGES = o;
        var p = "[object Object]";
        d.prototype = {
          constructor: d,
          logger: l["default"],
          log: l["default"].log,
          registerHelper: function registerHelper(a, b) {
            if (f.toString.call(a) === p) {
              if (b) throw new h["default"]("Arg not supported with multiple helpers");
              f.extend(this.helpers, a);
            } else this.helpers[a] = b;
          },
          unregisterHelper: function unregisterHelper(a) {
            delete this.helpers[a];
          },
          registerPartial: function registerPartial(a, b) {
            if (f.toString.call(a) === p) f.extend(this.partials, a);else {
              if ("undefined" == typeof b) throw new h["default"]('Attempting to register a partial called "' + a + '" as undefined');
              this.partials[a] = b;
            }
          },
          unregisterPartial: function unregisterPartial(a) {
            delete this.partials[a];
          },
          registerDecorator: function registerDecorator(a, b) {
            if (f.toString.call(a) === p) {
              if (b) throw new h["default"]("Arg not supported with multiple decorators");
              f.extend(this.decorators, a);
            } else this.decorators[a] = b;
          },
          unregisterDecorator: function unregisterDecorator(a) {
            delete this.decorators[a];
          }
        };
        var q = l["default"].log;
        b.log = q, b.createFrame = f.createFrame, b.logger = l["default"];
      }, function (a, b) {

        function c(a) {
          return k[a];
        }

        function d(a) {
          for (var b = 1; b < arguments.length; b++) {
            for (var c in arguments[b]) {
              Object.prototype.hasOwnProperty.call(arguments[b], c) && (a[c] = arguments[b][c]);
            }
          }

          return a;
        }

        function e(a, b) {
          for (var c = 0, d = a.length; c < d; c++) {
            if (a[c] === b) return c;
          }

          return -1;
        }

        function f(a) {
          if ("string" != typeof a) {
            if (a && a.toHTML) return a.toHTML();
            if (null == a) return "";
            if (!a) return a + "";
            a = "" + a;
          }

          return m.test(a) ? a.replace(l, c) : a;
        }

        function g(a) {
          return !a && 0 !== a || !(!p(a) || 0 !== a.length);
        }

        function h(a) {
          var b = d({}, a);
          return b._parent = a, b;
        }

        function i(a, b) {
          return a.path = b, a;
        }

        function j(a, b) {
          return (a ? a + "." : "") + b;
        }

        b.__esModule = !0, b.extend = d, b.indexOf = e, b.escapeExpression = f, b.isEmpty = g, b.createFrame = h, b.blockParams = i, b.appendContextPath = j;
        var k = {
          "&": "&amp;",
          "<": "&lt;",
          ">": "&gt;",
          '"': "&quot;",
          "'": "&#x27;",
          "`": "&#x60;",
          "=": "&#x3D;"
        },
            l = /[&<>"'`=]/g,
            m = /[&<>"'`=]/,
            n = Object.prototype.toString;
        b.toString = n;

        var o = function o(a) {
          return "function" == typeof a;
        };

        o(/x/) && (b.isFunction = o = function o(a) {
          return "function" == typeof a && "[object Function]" === n.call(a);
        }), b.isFunction = o;

        var p = Array.isArray || function (a) {
          return !(!a || "object" != _typeof(a)) && "[object Array]" === n.call(a);
        };

        b.isArray = p;
      }, function (a, b, c) {

        function d(a, b) {
          var c = b && b.loc,
              g = void 0,
              h = void 0;
          c && (g = c.start.line, h = c.start.column, a += " - " + g + ":" + h);

          for (var i = Error.prototype.constructor.call(this, a), j = 0; j < f.length; j++) {
            this[f[j]] = i[f[j]];
          }

          Error.captureStackTrace && Error.captureStackTrace(this, d);

          try {
            c && (this.lineNumber = g, e ? Object.defineProperty(this, "column", {
              value: h,
              enumerable: !0
            }) : this.column = h);
          } catch (k) {}
        }

        var e = c(7)["default"];
        b.__esModule = !0;
        var f = ["description", "fileName", "lineNumber", "message", "name", "number", "stack"];
        d.prototype = new Error(), b["default"] = d, a.exports = b["default"];
      }, function (a, b, c) {
        a.exports = {
          "default": c(8),
          __esModule: !0
        };
      }, function (a, b, c) {
        var d = c(9);

        a.exports = function (a, b, c) {
          return d.setDesc(a, b, c);
        };
      }, function (a, b) {
        var c = Object;
        a.exports = {
          create: c.create,
          getProto: c.getPrototypeOf,
          isEnum: {}.propertyIsEnumerable,
          getDesc: c.getOwnPropertyDescriptor,
          setDesc: c.defineProperty,
          setDescs: c.defineProperties,
          getKeys: c.keys,
          getNames: c.getOwnPropertyNames,
          getSymbols: c.getOwnPropertySymbols,
          each: [].forEach
        };
      }, function (a, b, c) {

        function d(a) {
          g["default"](a), i["default"](a), k["default"](a), m["default"](a), o["default"](a), q["default"](a), s["default"](a);
        }

        var e = c(1)["default"];
        b.__esModule = !0, b.registerDefaultHelpers = d;
        var f = c(11),
            g = e(f),
            h = c(12),
            i = e(h),
            j = c(13),
            k = e(j),
            l = c(14),
            m = e(l),
            n = c(15),
            o = e(n),
            p = c(16),
            q = e(p),
            r = c(17),
            s = e(r);
      }, function (a, b, c) {

        b.__esModule = !0;
        var d = c(5);
        b["default"] = function (a) {
          a.registerHelper("blockHelperMissing", function (b, c) {
            var e = c.inverse,
                f = c.fn;
            if (b === !0) return f(this);
            if (b === !1 || null == b) return e(this);
            if (d.isArray(b)) return b.length > 0 ? (c.ids && (c.ids = [c.name]), a.helpers.each(b, c)) : e(this);

            if (c.data && c.ids) {
              var g = d.createFrame(c.data);
              g.contextPath = d.appendContextPath(c.data.contextPath, c.name), c = {
                data: g
              };
            }

            return f(b, c);
          });
        }, a.exports = b["default"];
      }, function (a, b, c) {

        var d = c(1)["default"];
        b.__esModule = !0;
        var e = c(5),
            f = c(6),
            g = d(f);
        b["default"] = function (a) {
          a.registerHelper("each", function (a, b) {
            function c(b, c, f) {
              j && (j.key = b, j.index = c, j.first = 0 === c, j.last = !!f, k && (j.contextPath = k + b)), i += d(a[b], {
                data: j,
                blockParams: e.blockParams([a[b], b], [k + b, null])
              });
            }

            if (!b) throw new g["default"]("Must pass iterator to #each");
            var d = b.fn,
                f = b.inverse,
                h = 0,
                i = "",
                j = void 0,
                k = void 0;
            if (b.data && b.ids && (k = e.appendContextPath(b.data.contextPath, b.ids[0]) + "."), e.isFunction(a) && (a = a.call(this)), b.data && (j = e.createFrame(b.data)), a && "object" == _typeof(a)) if (e.isArray(a)) for (var l = a.length; h < l; h++) {
              h in a && c(h, h, h === a.length - 1);
            } else {
              var m = void 0;

              for (var n in a) {
                a.hasOwnProperty(n) && (void 0 !== m && c(m, h - 1), m = n, h++);
              }

              void 0 !== m && c(m, h - 1, !0);
            }
            return 0 === h && (i = f(this)), i;
          });
        }, a.exports = b["default"];
      }, function (a, b, c) {

        var d = c(1)["default"];
        b.__esModule = !0;
        var e = c(6),
            f = d(e);
        b["default"] = function (a) {
          a.registerHelper("helperMissing", function () {
            if (1 !== arguments.length) throw new f["default"]('Missing helper: "' + arguments[arguments.length - 1].name + '"');
          });
        }, a.exports = b["default"];
      }, function (a, b, c) {

        b.__esModule = !0;
        var d = c(5);
        b["default"] = function (a) {
          a.registerHelper("if", function (a, b) {
            return d.isFunction(a) && (a = a.call(this)), !b.hash.includeZero && !a || d.isEmpty(a) ? b.inverse(this) : b.fn(this);
          }), a.registerHelper("unless", function (b, c) {
            return a.helpers["if"].call(this, b, {
              fn: c.inverse,
              inverse: c.fn,
              hash: c.hash
            });
          });
        }, a.exports = b["default"];
      }, function (a, b) {

        b.__esModule = !0, b["default"] = function (a) {
          a.registerHelper("log", function () {
            for (var b = [void 0], c = arguments[arguments.length - 1], d = 0; d < arguments.length - 1; d++) {
              b.push(arguments[d]);
            }

            var e = 1;
            null != c.hash.level ? e = c.hash.level : c.data && null != c.data.level && (e = c.data.level), b[0] = e, a.log.apply(a, b);
          });
        }, a.exports = b["default"];
      }, function (a, b) {

        b.__esModule = !0, b["default"] = function (a) {
          a.registerHelper("lookup", function (a, b) {
            if (!a) return a;
            if ("constructor" !== b || a.propertyIsEnumerable(b)) return a[b];
          });
        }, a.exports = b["default"];
      }, function (a, b, c) {

        b.__esModule = !0;
        var d = c(5);
        b["default"] = function (a) {
          a.registerHelper("with", function (a, b) {
            d.isFunction(a) && (a = a.call(this));
            var c = b.fn;
            if (d.isEmpty(a)) return b.inverse(this);
            var e = b.data;
            return b.data && b.ids && (e = d.createFrame(b.data), e.contextPath = d.appendContextPath(b.data.contextPath, b.ids[0])), c(a, {
              data: e,
              blockParams: d.blockParams([a], [e && e.contextPath])
            });
          });
        }, a.exports = b["default"];
      }, function (a, b, c) {

        function d(a) {
          g["default"](a);
        }

        var e = c(1)["default"];
        b.__esModule = !0, b.registerDefaultDecorators = d;
        var f = c(19),
            g = e(f);
      }, function (a, b, c) {

        b.__esModule = !0;
        var d = c(5);
        b["default"] = function (a) {
          a.registerDecorator("inline", function (a, b, c, e) {
            var f = a;
            return b.partials || (b.partials = {}, f = function f(e, _f) {
              var g = c.partials;
              c.partials = d.extend({}, g, b.partials);
              var h = a(e, _f);
              return c.partials = g, h;
            }), b.partials[e.args[0]] = e.fn, f;
          });
        }, a.exports = b["default"];
      }, function (a, b, c) {

        b.__esModule = !0;
        var d = c(5),
            e = {
          methodMap: ["debug", "info", "warn", "error"],
          level: "info",
          lookupLevel: function lookupLevel(a) {
            if ("string" == typeof a) {
              var b = d.indexOf(e.methodMap, a.toLowerCase());
              a = b >= 0 ? b : parseInt(a, 10);
            }

            return a;
          },
          log: function log(a) {
            if (a = e.lookupLevel(a), "undefined" != typeof console && e.lookupLevel(e.level) <= a) {
              var b = e.methodMap[a];
              console[b] || (b = "log");

              for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), f = 1; f < c; f++) {
                d[f - 1] = arguments[f];
              }

              console[b].apply(console, d);
            }
          }
        };
        b["default"] = e, a.exports = b["default"];
      }, function (a, b) {

        function c(a) {
          this.string = a;
        }

        b.__esModule = !0, c.prototype.toString = c.prototype.toHTML = function () {
          return "" + this.string;
        }, b["default"] = c, a.exports = b["default"];
      }, function (a, b, c) {

        function d(a) {
          var b = a && a[0] || 1,
              c = s.COMPILER_REVISION;

          if (b !== c) {
            if (b < c) {
              var d = s.REVISION_CHANGES[c],
                  e = s.REVISION_CHANGES[b];
              throw new r["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version (" + d + ") or downgrade your runtime to an older version (" + e + ").");
            }

            throw new r["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version (" + a[1] + ").");
          }
        }

        function e(a, b) {
          function c(c, d, e) {
            e.hash && (d = p.extend({}, d, e.hash), e.ids && (e.ids[0] = !0)), c = b.VM.resolvePartial.call(this, c, d, e);
            var f = b.VM.invokePartial.call(this, c, d, e);

            if (null == f && b.compile && (e.partials[e.name] = b.compile(c, a.compilerOptions, b), f = e.partials[e.name](d, e)), null != f) {
              if (e.indent) {
                for (var g = f.split("\n"), h = 0, i = g.length; h < i && (g[h] || h + 1 !== i); h++) {
                  g[h] = e.indent + g[h];
                }

                f = g.join("\n");
              }

              return f;
            }

            throw new r["default"]("The partial " + e.name + " could not be compiled when running in runtime-only mode");
          }

          function d(b) {
            function c(b) {
              return "" + a.main(e, b, e.helpers, e.partials, g, i, h);
            }

            var f = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                g = f.data;
            d._setup(f), !f.partial && a.useData && (g = j(b, g));
            var h = void 0,
                i = a.useBlockParams ? [] : void 0;
            return a.useDepths && (h = f.depths ? b != f.depths[0] ? [b].concat(f.depths) : f.depths : [b]), (c = k(a.main, c, e, f.depths || [], g, i))(b, f);
          }

          if (!b) throw new r["default"]("No environment passed to template");
          if (!a || !a.main) throw new r["default"]("Unknown template object: " + _typeof(a));
          a.main.decorator = a.main_d, b.VM.checkRevision(a.compiler);
          var e = {
            strict: function strict(a, b) {
              if (!(b in a)) throw new r["default"]('"' + b + '" not defined in ' + a);
              return a[b];
            },
            lookup: function lookup(a, b) {
              for (var c = a.length, d = 0; d < c; d++) {
                if (a[d] && null != a[d][b]) return a[d][b];
              }
            },
            lambda: function lambda(a, b) {
              return "function" == typeof a ? a.call(b) : a;
            },
            escapeExpression: p.escapeExpression,
            invokePartial: c,
            fn: function fn(b) {
              var c = a[b];
              return c.decorator = a[b + "_d"], c;
            },
            programs: [],
            program: function program(a, b, c, d, e) {
              var g = this.programs[a],
                  h = this.fn(a);
              return b || e || d || c ? g = f(this, a, h, b, c, d, e) : g || (g = this.programs[a] = f(this, a, h)), g;
            },
            data: function data(a, b) {
              for (; a && b--;) {
                a = a._parent;
              }

              return a;
            },
            merge: function merge(a, b) {
              var c = a || b;
              return a && b && a !== b && (c = p.extend({}, b, a)), c;
            },
            nullContext: l({}),
            noop: b.VM.noop,
            compilerInfo: a.compiler
          };
          return d.isTop = !0, d._setup = function (c) {
            c.partial ? (e.helpers = c.helpers, e.partials = c.partials, e.decorators = c.decorators) : (e.helpers = e.merge(c.helpers, b.helpers), a.usePartial && (e.partials = e.merge(c.partials, b.partials)), (a.usePartial || a.useDecorators) && (e.decorators = e.merge(c.decorators, b.decorators)));
          }, d._child = function (b, c, d, g) {
            if (a.useBlockParams && !d) throw new r["default"]("must pass block params");
            if (a.useDepths && !g) throw new r["default"]("must pass parent depths");
            return f(e, b, a[b], c, 0, d, g);
          }, d;
        }

        function f(a, b, c, d, e, f, g) {
          function h(b) {
            var e = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                h = g;
            return !g || b == g[0] || b === a.nullContext && null === g[0] || (h = [b].concat(g)), c(a, b, a.helpers, a.partials, e.data || d, f && [e.blockParams].concat(f), h);
          }

          return h = k(c, h, a, g, d, f), h.program = b, h.depth = g ? g.length : 0, h.blockParams = e || 0, h;
        }

        function g(a, b, c) {
          return a ? a.call || c.name || (c.name = a, a = c.partials[a]) : a = "@partial-block" === c.name ? c.data["partial-block"] : c.partials[c.name], a;
        }

        function h(a, b, c) {
          var d = c.data && c.data["partial-block"];
          c.partial = !0, c.ids && (c.data.contextPath = c.ids[0] || c.data.contextPath);
          var e = void 0;
          if (c.fn && c.fn !== i && !function () {
            c.data = s.createFrame(c.data);
            var a = c.fn;
            e = c.data["partial-block"] = function (b) {
              var c = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1];
              return c.data = s.createFrame(c.data), c.data["partial-block"] = d, a(b, c);
            }, a.partials && (c.partials = p.extend({}, c.partials, a.partials));
          }(), void 0 === a && e && (a = e), void 0 === a) throw new r["default"]("The partial " + c.name + " could not be found");
          if (a instanceof Function) return a(b, c);
        }

        function i() {
          return "";
        }

        function j(a, b) {
          return b && "root" in b || (b = b ? s.createFrame(b) : {}, b.root = a), b;
        }

        function k(a, b, c, d, e, f) {
          if (a.decorator) {
            var g = {};
            b = a.decorator(b, g, c, d && d[0], e, f, d), p.extend(b, g);
          }

          return b;
        }

        var l = c(23)["default"],
            m = c(3)["default"],
            n = c(1)["default"];
        b.__esModule = !0, b.checkRevision = d, b.template = e, b.wrapProgram = f, b.resolvePartial = g, b.invokePartial = h, b.noop = i;
        var o = c(5),
            p = m(o),
            q = c(6),
            r = n(q),
            s = c(4);
      }, function (a, b, c) {
        a.exports = {
          "default": c(24),
          __esModule: !0
        };
      }, function (a, b, c) {
        c(25), a.exports = c(30).Object.seal;
      }, function (a, b, c) {
        var d = c(26);
        c(27)("seal", function (a) {
          return function (b) {
            return a && d(b) ? a(b) : b;
          };
        });
      }, function (a, b) {
        a.exports = function (a) {
          return "object" == _typeof(a) ? null !== a : "function" == typeof a;
        };
      }, function (a, b, c) {
        var d = c(28),
            e = c(30),
            f = c(33);

        a.exports = function (a, b) {
          var c = (e.Object || {})[a] || Object[a],
              g = {};
          g[a] = b(c), d(d.S + d.F * f(function () {
            c(1);
          }), "Object", g);
        };
      }, function (a, b, c) {
        var d = c(29),
            e = c(30),
            f = c(31),
            g = "prototype",
            h = function h(a, b, c) {
          var i,
              j,
              k,
              l = a & h.F,
              m = a & h.G,
              n = a & h.S,
              o = a & h.P,
              p = a & h.B,
              q = a & h.W,
              r = m ? e : e[b] || (e[b] = {}),
              s = m ? d : n ? d[b] : (d[b] || {})[g];
          m && (c = b);

          for (i in c) {
            j = !l && s && i in s, j && i in r || (k = j ? s[i] : c[i], r[i] = m && "function" != typeof s[i] ? c[i] : p && j ? f(k, d) : q && s[i] == k ? function (a) {
              var b = function b(_b) {
                return this instanceof a ? new a(_b) : a(_b);
              };

              return b[g] = a[g], b;
            }(k) : o && "function" == typeof k ? f(Function.call, k) : k, o && ((r[g] || (r[g] = {}))[i] = k));
          }
        };

        h.F = 1, h.G = 2, h.S = 4, h.P = 8, h.B = 16, h.W = 32, a.exports = h;
      }, function (a, b) {
        var c = a.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
        "number" == typeof __g && (__g = c);
      }, function (a, b) {
        var c = a.exports = {
          version: "1.2.6"
        };
        "number" == typeof __e && (__e = c);
      }, function (a, b, c) {
        var d = c(32);

        a.exports = function (a, b, c) {
          if (d(a), void 0 === b) return a;

          switch (c) {
            case 1:
              return function (c) {
                return a.call(b, c);
              };

            case 2:
              return function (c, d) {
                return a.call(b, c, d);
              };

            case 3:
              return function (c, d, e) {
                return a.call(b, c, d, e);
              };
          }

          return function () {
            return a.apply(b, arguments);
          };
        };
      }, function (a, b) {
        a.exports = function (a) {
          if ("function" != typeof a) throw TypeError(a + " is not a function!");
          return a;
        };
      }, function (a, b) {
        a.exports = function (a) {
          try {
            return !!a();
          } catch (b) {
            return !0;
          }
        };
      }, function (a, b) {
        (function (c) {

          b.__esModule = !0, b["default"] = function (a) {
            var b = "undefined" != typeof c ? c : window,
                d = b.Handlebars;

            a.noConflict = function () {
              return b.Handlebars === a && (b.Handlebars = d), a;
            };
          }, a.exports = b["default"];
        }).call(b, function () {
          return this;
        }());
      }, function (a, b) {

        b.__esModule = !0;
        var c = {
          helpers: {
            helperExpression: function helperExpression(a) {
              return "SubExpression" === a.type || ("MustacheStatement" === a.type || "BlockStatement" === a.type) && !!(a.params && a.params.length || a.hash);
            },
            scopedId: function scopedId(a) {
              return /^\.|this\b/.test(a.original);
            },
            simpleId: function simpleId(a) {
              return 1 === a.parts.length && !c.helpers.scopedId(a) && !a.depth;
            }
          }
        };
        b["default"] = c, a.exports = b["default"];
      }, function (a, b, c) {

        function d(a, b) {
          if ("Program" === a.type) return a;
          h["default"].yy = n, n.locInfo = function (a) {
            return new n.SourceLocation(b && b.srcName, a);
          };
          var c = new j["default"](b);
          return c.accept(h["default"].parse(a));
        }

        var e = c(1)["default"],
            f = c(3)["default"];
        b.__esModule = !0, b.parse = d;
        var g = c(37),
            h = e(g),
            i = c(38),
            j = e(i),
            k = c(40),
            l = f(k),
            m = c(5);
        b.parser = h["default"];
        var n = {};
        m.extend(n, l);
      }, function (a, b) {

        b.__esModule = !0;

        var c = function () {
          function a() {
            this.yy = {};
          }

          var b = {
            trace: function trace() {},
            yy: {},
            symbols_: {
              error: 2,
              root: 3,
              program: 4,
              EOF: 5,
              program_repetition0: 6,
              statement: 7,
              mustache: 8,
              block: 9,
              rawBlock: 10,
              partial: 11,
              partialBlock: 12,
              content: 13,
              COMMENT: 14,
              CONTENT: 15,
              openRawBlock: 16,
              rawBlock_repetition_plus0: 17,
              END_RAW_BLOCK: 18,
              OPEN_RAW_BLOCK: 19,
              helperName: 20,
              openRawBlock_repetition0: 21,
              openRawBlock_option0: 22,
              CLOSE_RAW_BLOCK: 23,
              openBlock: 24,
              block_option0: 25,
              closeBlock: 26,
              openInverse: 27,
              block_option1: 28,
              OPEN_BLOCK: 29,
              openBlock_repetition0: 30,
              openBlock_option0: 31,
              openBlock_option1: 32,
              CLOSE: 33,
              OPEN_INVERSE: 34,
              openInverse_repetition0: 35,
              openInverse_option0: 36,
              openInverse_option1: 37,
              openInverseChain: 38,
              OPEN_INVERSE_CHAIN: 39,
              openInverseChain_repetition0: 40,
              openInverseChain_option0: 41,
              openInverseChain_option1: 42,
              inverseAndProgram: 43,
              INVERSE: 44,
              inverseChain: 45,
              inverseChain_option0: 46,
              OPEN_ENDBLOCK: 47,
              OPEN: 48,
              mustache_repetition0: 49,
              mustache_option0: 50,
              OPEN_UNESCAPED: 51,
              mustache_repetition1: 52,
              mustache_option1: 53,
              CLOSE_UNESCAPED: 54,
              OPEN_PARTIAL: 55,
              partialName: 56,
              partial_repetition0: 57,
              partial_option0: 58,
              openPartialBlock: 59,
              OPEN_PARTIAL_BLOCK: 60,
              openPartialBlock_repetition0: 61,
              openPartialBlock_option0: 62,
              param: 63,
              sexpr: 64,
              OPEN_SEXPR: 65,
              sexpr_repetition0: 66,
              sexpr_option0: 67,
              CLOSE_SEXPR: 68,
              hash: 69,
              hash_repetition_plus0: 70,
              hashSegment: 71,
              ID: 72,
              EQUALS: 73,
              blockParams: 74,
              OPEN_BLOCK_PARAMS: 75,
              blockParams_repetition_plus0: 76,
              CLOSE_BLOCK_PARAMS: 77,
              path: 78,
              dataName: 79,
              STRING: 80,
              NUMBER: 81,
              BOOLEAN: 82,
              UNDEFINED: 83,
              NULL: 84,
              DATA: 85,
              pathSegments: 86,
              SEP: 87,
              $accept: 0,
              $end: 1
            },
            terminals_: {
              2: "error",
              5: "EOF",
              14: "COMMENT",
              15: "CONTENT",
              18: "END_RAW_BLOCK",
              19: "OPEN_RAW_BLOCK",
              23: "CLOSE_RAW_BLOCK",
              29: "OPEN_BLOCK",
              33: "CLOSE",
              34: "OPEN_INVERSE",
              39: "OPEN_INVERSE_CHAIN",
              44: "INVERSE",
              47: "OPEN_ENDBLOCK",
              48: "OPEN",
              51: "OPEN_UNESCAPED",
              54: "CLOSE_UNESCAPED",
              55: "OPEN_PARTIAL",
              60: "OPEN_PARTIAL_BLOCK",
              65: "OPEN_SEXPR",
              68: "CLOSE_SEXPR",
              72: "ID",
              73: "EQUALS",
              75: "OPEN_BLOCK_PARAMS",
              77: "CLOSE_BLOCK_PARAMS",
              80: "STRING",
              81: "NUMBER",
              82: "BOOLEAN",
              83: "UNDEFINED",
              84: "NULL",
              85: "DATA",
              87: "SEP"
            },
            productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 1], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],
            performAction: function performAction(a, b, c, d, e, f, g) {
              var h = f.length - 1;

              switch (e) {
                case 1:
                  return f[h - 1];

                case 2:
                  this.$ = d.prepareProgram(f[h]);
                  break;

                case 3:
                  this.$ = f[h];
                  break;

                case 4:
                  this.$ = f[h];
                  break;

                case 5:
                  this.$ = f[h];
                  break;

                case 6:
                  this.$ = f[h];
                  break;

                case 7:
                  this.$ = f[h];
                  break;

                case 8:
                  this.$ = f[h];
                  break;

                case 9:
                  this.$ = {
                    type: "CommentStatement",
                    value: d.stripComment(f[h]),
                    strip: d.stripFlags(f[h], f[h]),
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 10:
                  this.$ = {
                    type: "ContentStatement",
                    original: f[h],
                    value: f[h],
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 11:
                  this.$ = d.prepareRawBlock(f[h - 2], f[h - 1], f[h], this._$);
                  break;

                case 12:
                  this.$ = {
                    path: f[h - 3],
                    params: f[h - 2],
                    hash: f[h - 1]
                  };
                  break;

                case 13:
                  this.$ = d.prepareBlock(f[h - 3], f[h - 2], f[h - 1], f[h], !1, this._$);
                  break;

                case 14:
                  this.$ = d.prepareBlock(f[h - 3], f[h - 2], f[h - 1], f[h], !0, this._$);
                  break;

                case 15:
                  this.$ = {
                    open: f[h - 5],
                    path: f[h - 4],
                    params: f[h - 3],
                    hash: f[h - 2],
                    blockParams: f[h - 1],
                    strip: d.stripFlags(f[h - 5], f[h])
                  };
                  break;

                case 16:
                  this.$ = {
                    path: f[h - 4],
                    params: f[h - 3],
                    hash: f[h - 2],
                    blockParams: f[h - 1],
                    strip: d.stripFlags(f[h - 5], f[h])
                  };
                  break;

                case 17:
                  this.$ = {
                    path: f[h - 4],
                    params: f[h - 3],
                    hash: f[h - 2],
                    blockParams: f[h - 1],
                    strip: d.stripFlags(f[h - 5], f[h])
                  };
                  break;

                case 18:
                  this.$ = {
                    strip: d.stripFlags(f[h - 1], f[h - 1]),
                    program: f[h]
                  };
                  break;

                case 19:
                  var i = d.prepareBlock(f[h - 2], f[h - 1], f[h], f[h], !1, this._$),
                      j = d.prepareProgram([i], f[h - 1].loc);
                  j.chained = !0, this.$ = {
                    strip: f[h - 2].strip,
                    program: j,
                    chain: !0
                  };
                  break;

                case 20:
                  this.$ = f[h];
                  break;

                case 21:
                  this.$ = {
                    path: f[h - 1],
                    strip: d.stripFlags(f[h - 2], f[h])
                  };
                  break;

                case 22:
                  this.$ = d.prepareMustache(f[h - 3], f[h - 2], f[h - 1], f[h - 4], d.stripFlags(f[h - 4], f[h]), this._$);
                  break;

                case 23:
                  this.$ = d.prepareMustache(f[h - 3], f[h - 2], f[h - 1], f[h - 4], d.stripFlags(f[h - 4], f[h]), this._$);
                  break;

                case 24:
                  this.$ = {
                    type: "PartialStatement",
                    name: f[h - 3],
                    params: f[h - 2],
                    hash: f[h - 1],
                    indent: "",
                    strip: d.stripFlags(f[h - 4], f[h]),
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 25:
                  this.$ = d.preparePartialBlock(f[h - 2], f[h - 1], f[h], this._$);
                  break;

                case 26:
                  this.$ = {
                    path: f[h - 3],
                    params: f[h - 2],
                    hash: f[h - 1],
                    strip: d.stripFlags(f[h - 4], f[h])
                  };
                  break;

                case 27:
                  this.$ = f[h];
                  break;

                case 28:
                  this.$ = f[h];
                  break;

                case 29:
                  this.$ = {
                    type: "SubExpression",
                    path: f[h - 3],
                    params: f[h - 2],
                    hash: f[h - 1],
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 30:
                  this.$ = {
                    type: "Hash",
                    pairs: f[h],
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 31:
                  this.$ = {
                    type: "HashPair",
                    key: d.id(f[h - 2]),
                    value: f[h],
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 32:
                  this.$ = d.id(f[h - 1]);
                  break;

                case 33:
                  this.$ = f[h];
                  break;

                case 34:
                  this.$ = f[h];
                  break;

                case 35:
                  this.$ = {
                    type: "StringLiteral",
                    value: f[h],
                    original: f[h],
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 36:
                  this.$ = {
                    type: "NumberLiteral",
                    value: Number(f[h]),
                    original: Number(f[h]),
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 37:
                  this.$ = {
                    type: "BooleanLiteral",
                    value: "true" === f[h],
                    original: "true" === f[h],
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 38:
                  this.$ = {
                    type: "UndefinedLiteral",
                    original: void 0,
                    value: void 0,
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 39:
                  this.$ = {
                    type: "NullLiteral",
                    original: null,
                    value: null,
                    loc: d.locInfo(this._$)
                  };
                  break;

                case 40:
                  this.$ = f[h];
                  break;

                case 41:
                  this.$ = f[h];
                  break;

                case 42:
                  this.$ = d.preparePath(!0, f[h], this._$);
                  break;

                case 43:
                  this.$ = d.preparePath(!1, f[h], this._$);
                  break;

                case 44:
                  f[h - 2].push({
                    part: d.id(f[h]),
                    original: f[h],
                    separator: f[h - 1]
                  }), this.$ = f[h - 2];
                  break;

                case 45:
                  this.$ = [{
                    part: d.id(f[h]),
                    original: f[h]
                  }];
                  break;

                case 46:
                  this.$ = [];
                  break;

                case 47:
                  f[h - 1].push(f[h]);
                  break;

                case 48:
                  this.$ = [f[h]];
                  break;

                case 49:
                  f[h - 1].push(f[h]);
                  break;

                case 50:
                  this.$ = [];
                  break;

                case 51:
                  f[h - 1].push(f[h]);
                  break;

                case 58:
                  this.$ = [];
                  break;

                case 59:
                  f[h - 1].push(f[h]);
                  break;

                case 64:
                  this.$ = [];
                  break;

                case 65:
                  f[h - 1].push(f[h]);
                  break;

                case 70:
                  this.$ = [];
                  break;

                case 71:
                  f[h - 1].push(f[h]);
                  break;

                case 78:
                  this.$ = [];
                  break;

                case 79:
                  f[h - 1].push(f[h]);
                  break;

                case 82:
                  this.$ = [];
                  break;

                case 83:
                  f[h - 1].push(f[h]);
                  break;

                case 86:
                  this.$ = [];
                  break;

                case 87:
                  f[h - 1].push(f[h]);
                  break;

                case 90:
                  this.$ = [];
                  break;

                case 91:
                  f[h - 1].push(f[h]);
                  break;

                case 94:
                  this.$ = [];
                  break;

                case 95:
                  f[h - 1].push(f[h]);
                  break;

                case 98:
                  this.$ = [f[h]];
                  break;

                case 99:
                  f[h - 1].push(f[h]);
                  break;

                case 100:
                  this.$ = [f[h]];
                  break;

                case 101:
                  f[h - 1].push(f[h]);
              }
            },
            table: [{
              3: 1,
              4: 2,
              5: [2, 46],
              6: 3,
              14: [2, 46],
              15: [2, 46],
              19: [2, 46],
              29: [2, 46],
              34: [2, 46],
              48: [2, 46],
              51: [2, 46],
              55: [2, 46],
              60: [2, 46]
            }, {
              1: [3]
            }, {
              5: [1, 4]
            }, {
              5: [2, 2],
              7: 5,
              8: 6,
              9: 7,
              10: 8,
              11: 9,
              12: 10,
              13: 11,
              14: [1, 12],
              15: [1, 20],
              16: 17,
              19: [1, 23],
              24: 15,
              27: 16,
              29: [1, 21],
              34: [1, 22],
              39: [2, 2],
              44: [2, 2],
              47: [2, 2],
              48: [1, 13],
              51: [1, 14],
              55: [1, 18],
              59: 19,
              60: [1, 24]
            }, {
              1: [2, 1]
            }, {
              5: [2, 47],
              14: [2, 47],
              15: [2, 47],
              19: [2, 47],
              29: [2, 47],
              34: [2, 47],
              39: [2, 47],
              44: [2, 47],
              47: [2, 47],
              48: [2, 47],
              51: [2, 47],
              55: [2, 47],
              60: [2, 47]
            }, {
              5: [2, 3],
              14: [2, 3],
              15: [2, 3],
              19: [2, 3],
              29: [2, 3],
              34: [2, 3],
              39: [2, 3],
              44: [2, 3],
              47: [2, 3],
              48: [2, 3],
              51: [2, 3],
              55: [2, 3],
              60: [2, 3]
            }, {
              5: [2, 4],
              14: [2, 4],
              15: [2, 4],
              19: [2, 4],
              29: [2, 4],
              34: [2, 4],
              39: [2, 4],
              44: [2, 4],
              47: [2, 4],
              48: [2, 4],
              51: [2, 4],
              55: [2, 4],
              60: [2, 4]
            }, {
              5: [2, 5],
              14: [2, 5],
              15: [2, 5],
              19: [2, 5],
              29: [2, 5],
              34: [2, 5],
              39: [2, 5],
              44: [2, 5],
              47: [2, 5],
              48: [2, 5],
              51: [2, 5],
              55: [2, 5],
              60: [2, 5]
            }, {
              5: [2, 6],
              14: [2, 6],
              15: [2, 6],
              19: [2, 6],
              29: [2, 6],
              34: [2, 6],
              39: [2, 6],
              44: [2, 6],
              47: [2, 6],
              48: [2, 6],
              51: [2, 6],
              55: [2, 6],
              60: [2, 6]
            }, {
              5: [2, 7],
              14: [2, 7],
              15: [2, 7],
              19: [2, 7],
              29: [2, 7],
              34: [2, 7],
              39: [2, 7],
              44: [2, 7],
              47: [2, 7],
              48: [2, 7],
              51: [2, 7],
              55: [2, 7],
              60: [2, 7]
            }, {
              5: [2, 8],
              14: [2, 8],
              15: [2, 8],
              19: [2, 8],
              29: [2, 8],
              34: [2, 8],
              39: [2, 8],
              44: [2, 8],
              47: [2, 8],
              48: [2, 8],
              51: [2, 8],
              55: [2, 8],
              60: [2, 8]
            }, {
              5: [2, 9],
              14: [2, 9],
              15: [2, 9],
              19: [2, 9],
              29: [2, 9],
              34: [2, 9],
              39: [2, 9],
              44: [2, 9],
              47: [2, 9],
              48: [2, 9],
              51: [2, 9],
              55: [2, 9],
              60: [2, 9]
            }, {
              20: 25,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 36,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              4: 37,
              6: 3,
              14: [2, 46],
              15: [2, 46],
              19: [2, 46],
              29: [2, 46],
              34: [2, 46],
              39: [2, 46],
              44: [2, 46],
              47: [2, 46],
              48: [2, 46],
              51: [2, 46],
              55: [2, 46],
              60: [2, 46]
            }, {
              4: 38,
              6: 3,
              14: [2, 46],
              15: [2, 46],
              19: [2, 46],
              29: [2, 46],
              34: [2, 46],
              44: [2, 46],
              47: [2, 46],
              48: [2, 46],
              51: [2, 46],
              55: [2, 46],
              60: [2, 46]
            }, {
              13: 40,
              15: [1, 20],
              17: 39
            }, {
              20: 42,
              56: 41,
              64: 43,
              65: [1, 44],
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              4: 45,
              6: 3,
              14: [2, 46],
              15: [2, 46],
              19: [2, 46],
              29: [2, 46],
              34: [2, 46],
              47: [2, 46],
              48: [2, 46],
              51: [2, 46],
              55: [2, 46],
              60: [2, 46]
            }, {
              5: [2, 10],
              14: [2, 10],
              15: [2, 10],
              18: [2, 10],
              19: [2, 10],
              29: [2, 10],
              34: [2, 10],
              39: [2, 10],
              44: [2, 10],
              47: [2, 10],
              48: [2, 10],
              51: [2, 10],
              55: [2, 10],
              60: [2, 10]
            }, {
              20: 46,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 47,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 48,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 42,
              56: 49,
              64: 43,
              65: [1, 44],
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              33: [2, 78],
              49: 50,
              65: [2, 78],
              72: [2, 78],
              80: [2, 78],
              81: [2, 78],
              82: [2, 78],
              83: [2, 78],
              84: [2, 78],
              85: [2, 78]
            }, {
              23: [2, 33],
              33: [2, 33],
              54: [2, 33],
              65: [2, 33],
              68: [2, 33],
              72: [2, 33],
              75: [2, 33],
              80: [2, 33],
              81: [2, 33],
              82: [2, 33],
              83: [2, 33],
              84: [2, 33],
              85: [2, 33]
            }, {
              23: [2, 34],
              33: [2, 34],
              54: [2, 34],
              65: [2, 34],
              68: [2, 34],
              72: [2, 34],
              75: [2, 34],
              80: [2, 34],
              81: [2, 34],
              82: [2, 34],
              83: [2, 34],
              84: [2, 34],
              85: [2, 34]
            }, {
              23: [2, 35],
              33: [2, 35],
              54: [2, 35],
              65: [2, 35],
              68: [2, 35],
              72: [2, 35],
              75: [2, 35],
              80: [2, 35],
              81: [2, 35],
              82: [2, 35],
              83: [2, 35],
              84: [2, 35],
              85: [2, 35]
            }, {
              23: [2, 36],
              33: [2, 36],
              54: [2, 36],
              65: [2, 36],
              68: [2, 36],
              72: [2, 36],
              75: [2, 36],
              80: [2, 36],
              81: [2, 36],
              82: [2, 36],
              83: [2, 36],
              84: [2, 36],
              85: [2, 36]
            }, {
              23: [2, 37],
              33: [2, 37],
              54: [2, 37],
              65: [2, 37],
              68: [2, 37],
              72: [2, 37],
              75: [2, 37],
              80: [2, 37],
              81: [2, 37],
              82: [2, 37],
              83: [2, 37],
              84: [2, 37],
              85: [2, 37]
            }, {
              23: [2, 38],
              33: [2, 38],
              54: [2, 38],
              65: [2, 38],
              68: [2, 38],
              72: [2, 38],
              75: [2, 38],
              80: [2, 38],
              81: [2, 38],
              82: [2, 38],
              83: [2, 38],
              84: [2, 38],
              85: [2, 38]
            }, {
              23: [2, 39],
              33: [2, 39],
              54: [2, 39],
              65: [2, 39],
              68: [2, 39],
              72: [2, 39],
              75: [2, 39],
              80: [2, 39],
              81: [2, 39],
              82: [2, 39],
              83: [2, 39],
              84: [2, 39],
              85: [2, 39]
            }, {
              23: [2, 43],
              33: [2, 43],
              54: [2, 43],
              65: [2, 43],
              68: [2, 43],
              72: [2, 43],
              75: [2, 43],
              80: [2, 43],
              81: [2, 43],
              82: [2, 43],
              83: [2, 43],
              84: [2, 43],
              85: [2, 43],
              87: [1, 51]
            }, {
              72: [1, 35],
              86: 52
            }, {
              23: [2, 45],
              33: [2, 45],
              54: [2, 45],
              65: [2, 45],
              68: [2, 45],
              72: [2, 45],
              75: [2, 45],
              80: [2, 45],
              81: [2, 45],
              82: [2, 45],
              83: [2, 45],
              84: [2, 45],
              85: [2, 45],
              87: [2, 45]
            }, {
              52: 53,
              54: [2, 82],
              65: [2, 82],
              72: [2, 82],
              80: [2, 82],
              81: [2, 82],
              82: [2, 82],
              83: [2, 82],
              84: [2, 82],
              85: [2, 82]
            }, {
              25: 54,
              38: 56,
              39: [1, 58],
              43: 57,
              44: [1, 59],
              45: 55,
              47: [2, 54]
            }, {
              28: 60,
              43: 61,
              44: [1, 59],
              47: [2, 56]
            }, {
              13: 63,
              15: [1, 20],
              18: [1, 62]
            }, {
              15: [2, 48],
              18: [2, 48]
            }, {
              33: [2, 86],
              57: 64,
              65: [2, 86],
              72: [2, 86],
              80: [2, 86],
              81: [2, 86],
              82: [2, 86],
              83: [2, 86],
              84: [2, 86],
              85: [2, 86]
            }, {
              33: [2, 40],
              65: [2, 40],
              72: [2, 40],
              80: [2, 40],
              81: [2, 40],
              82: [2, 40],
              83: [2, 40],
              84: [2, 40],
              85: [2, 40]
            }, {
              33: [2, 41],
              65: [2, 41],
              72: [2, 41],
              80: [2, 41],
              81: [2, 41],
              82: [2, 41],
              83: [2, 41],
              84: [2, 41],
              85: [2, 41]
            }, {
              20: 65,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              26: 66,
              47: [1, 67]
            }, {
              30: 68,
              33: [2, 58],
              65: [2, 58],
              72: [2, 58],
              75: [2, 58],
              80: [2, 58],
              81: [2, 58],
              82: [2, 58],
              83: [2, 58],
              84: [2, 58],
              85: [2, 58]
            }, {
              33: [2, 64],
              35: 69,
              65: [2, 64],
              72: [2, 64],
              75: [2, 64],
              80: [2, 64],
              81: [2, 64],
              82: [2, 64],
              83: [2, 64],
              84: [2, 64],
              85: [2, 64]
            }, {
              21: 70,
              23: [2, 50],
              65: [2, 50],
              72: [2, 50],
              80: [2, 50],
              81: [2, 50],
              82: [2, 50],
              83: [2, 50],
              84: [2, 50],
              85: [2, 50]
            }, {
              33: [2, 90],
              61: 71,
              65: [2, 90],
              72: [2, 90],
              80: [2, 90],
              81: [2, 90],
              82: [2, 90],
              83: [2, 90],
              84: [2, 90],
              85: [2, 90]
            }, {
              20: 75,
              33: [2, 80],
              50: 72,
              63: 73,
              64: 76,
              65: [1, 44],
              69: 74,
              70: 77,
              71: 78,
              72: [1, 79],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              72: [1, 80]
            }, {
              23: [2, 42],
              33: [2, 42],
              54: [2, 42],
              65: [2, 42],
              68: [2, 42],
              72: [2, 42],
              75: [2, 42],
              80: [2, 42],
              81: [2, 42],
              82: [2, 42],
              83: [2, 42],
              84: [2, 42],
              85: [2, 42],
              87: [1, 51]
            }, {
              20: 75,
              53: 81,
              54: [2, 84],
              63: 82,
              64: 76,
              65: [1, 44],
              69: 83,
              70: 77,
              71: 78,
              72: [1, 79],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              26: 84,
              47: [1, 67]
            }, {
              47: [2, 55]
            }, {
              4: 85,
              6: 3,
              14: [2, 46],
              15: [2, 46],
              19: [2, 46],
              29: [2, 46],
              34: [2, 46],
              39: [2, 46],
              44: [2, 46],
              47: [2, 46],
              48: [2, 46],
              51: [2, 46],
              55: [2, 46],
              60: [2, 46]
            }, {
              47: [2, 20]
            }, {
              20: 86,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              4: 87,
              6: 3,
              14: [2, 46],
              15: [2, 46],
              19: [2, 46],
              29: [2, 46],
              34: [2, 46],
              47: [2, 46],
              48: [2, 46],
              51: [2, 46],
              55: [2, 46],
              60: [2, 46]
            }, {
              26: 88,
              47: [1, 67]
            }, {
              47: [2, 57]
            }, {
              5: [2, 11],
              14: [2, 11],
              15: [2, 11],
              19: [2, 11],
              29: [2, 11],
              34: [2, 11],
              39: [2, 11],
              44: [2, 11],
              47: [2, 11],
              48: [2, 11],
              51: [2, 11],
              55: [2, 11],
              60: [2, 11]
            }, {
              15: [2, 49],
              18: [2, 49]
            }, {
              20: 75,
              33: [2, 88],
              58: 89,
              63: 90,
              64: 76,
              65: [1, 44],
              69: 91,
              70: 77,
              71: 78,
              72: [1, 79],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              65: [2, 94],
              66: 92,
              68: [2, 94],
              72: [2, 94],
              80: [2, 94],
              81: [2, 94],
              82: [2, 94],
              83: [2, 94],
              84: [2, 94],
              85: [2, 94]
            }, {
              5: [2, 25],
              14: [2, 25],
              15: [2, 25],
              19: [2, 25],
              29: [2, 25],
              34: [2, 25],
              39: [2, 25],
              44: [2, 25],
              47: [2, 25],
              48: [2, 25],
              51: [2, 25],
              55: [2, 25],
              60: [2, 25]
            }, {
              20: 93,
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 75,
              31: 94,
              33: [2, 60],
              63: 95,
              64: 76,
              65: [1, 44],
              69: 96,
              70: 77,
              71: 78,
              72: [1, 79],
              75: [2, 60],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 75,
              33: [2, 66],
              36: 97,
              63: 98,
              64: 76,
              65: [1, 44],
              69: 99,
              70: 77,
              71: 78,
              72: [1, 79],
              75: [2, 66],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 75,
              22: 100,
              23: [2, 52],
              63: 101,
              64: 76,
              65: [1, 44],
              69: 102,
              70: 77,
              71: 78,
              72: [1, 79],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              20: 75,
              33: [2, 92],
              62: 103,
              63: 104,
              64: 76,
              65: [1, 44],
              69: 105,
              70: 77,
              71: 78,
              72: [1, 79],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              33: [1, 106]
            }, {
              33: [2, 79],
              65: [2, 79],
              72: [2, 79],
              80: [2, 79],
              81: [2, 79],
              82: [2, 79],
              83: [2, 79],
              84: [2, 79],
              85: [2, 79]
            }, {
              33: [2, 81]
            }, {
              23: [2, 27],
              33: [2, 27],
              54: [2, 27],
              65: [2, 27],
              68: [2, 27],
              72: [2, 27],
              75: [2, 27],
              80: [2, 27],
              81: [2, 27],
              82: [2, 27],
              83: [2, 27],
              84: [2, 27],
              85: [2, 27]
            }, {
              23: [2, 28],
              33: [2, 28],
              54: [2, 28],
              65: [2, 28],
              68: [2, 28],
              72: [2, 28],
              75: [2, 28],
              80: [2, 28],
              81: [2, 28],
              82: [2, 28],
              83: [2, 28],
              84: [2, 28],
              85: [2, 28]
            }, {
              23: [2, 30],
              33: [2, 30],
              54: [2, 30],
              68: [2, 30],
              71: 107,
              72: [1, 108],
              75: [2, 30]
            }, {
              23: [2, 98],
              33: [2, 98],
              54: [2, 98],
              68: [2, 98],
              72: [2, 98],
              75: [2, 98]
            }, {
              23: [2, 45],
              33: [2, 45],
              54: [2, 45],
              65: [2, 45],
              68: [2, 45],
              72: [2, 45],
              73: [1, 109],
              75: [2, 45],
              80: [2, 45],
              81: [2, 45],
              82: [2, 45],
              83: [2, 45],
              84: [2, 45],
              85: [2, 45],
              87: [2, 45]
            }, {
              23: [2, 44],
              33: [2, 44],
              54: [2, 44],
              65: [2, 44],
              68: [2, 44],
              72: [2, 44],
              75: [2, 44],
              80: [2, 44],
              81: [2, 44],
              82: [2, 44],
              83: [2, 44],
              84: [2, 44],
              85: [2, 44],
              87: [2, 44]
            }, {
              54: [1, 110]
            }, {
              54: [2, 83],
              65: [2, 83],
              72: [2, 83],
              80: [2, 83],
              81: [2, 83],
              82: [2, 83],
              83: [2, 83],
              84: [2, 83],
              85: [2, 83]
            }, {
              54: [2, 85]
            }, {
              5: [2, 13],
              14: [2, 13],
              15: [2, 13],
              19: [2, 13],
              29: [2, 13],
              34: [2, 13],
              39: [2, 13],
              44: [2, 13],
              47: [2, 13],
              48: [2, 13],
              51: [2, 13],
              55: [2, 13],
              60: [2, 13]
            }, {
              38: 56,
              39: [1, 58],
              43: 57,
              44: [1, 59],
              45: 112,
              46: 111,
              47: [2, 76]
            }, {
              33: [2, 70],
              40: 113,
              65: [2, 70],
              72: [2, 70],
              75: [2, 70],
              80: [2, 70],
              81: [2, 70],
              82: [2, 70],
              83: [2, 70],
              84: [2, 70],
              85: [2, 70]
            }, {
              47: [2, 18]
            }, {
              5: [2, 14],
              14: [2, 14],
              15: [2, 14],
              19: [2, 14],
              29: [2, 14],
              34: [2, 14],
              39: [2, 14],
              44: [2, 14],
              47: [2, 14],
              48: [2, 14],
              51: [2, 14],
              55: [2, 14],
              60: [2, 14]
            }, {
              33: [1, 114]
            }, {
              33: [2, 87],
              65: [2, 87],
              72: [2, 87],
              80: [2, 87],
              81: [2, 87],
              82: [2, 87],
              83: [2, 87],
              84: [2, 87],
              85: [2, 87]
            }, {
              33: [2, 89]
            }, {
              20: 75,
              63: 116,
              64: 76,
              65: [1, 44],
              67: 115,
              68: [2, 96],
              69: 117,
              70: 77,
              71: 78,
              72: [1, 79],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              33: [1, 118]
            }, {
              32: 119,
              33: [2, 62],
              74: 120,
              75: [1, 121]
            }, {
              33: [2, 59],
              65: [2, 59],
              72: [2, 59],
              75: [2, 59],
              80: [2, 59],
              81: [2, 59],
              82: [2, 59],
              83: [2, 59],
              84: [2, 59],
              85: [2, 59]
            }, {
              33: [2, 61],
              75: [2, 61]
            }, {
              33: [2, 68],
              37: 122,
              74: 123,
              75: [1, 121]
            }, {
              33: [2, 65],
              65: [2, 65],
              72: [2, 65],
              75: [2, 65],
              80: [2, 65],
              81: [2, 65],
              82: [2, 65],
              83: [2, 65],
              84: [2, 65],
              85: [2, 65]
            }, {
              33: [2, 67],
              75: [2, 67]
            }, {
              23: [1, 124]
            }, {
              23: [2, 51],
              65: [2, 51],
              72: [2, 51],
              80: [2, 51],
              81: [2, 51],
              82: [2, 51],
              83: [2, 51],
              84: [2, 51],
              85: [2, 51]
            }, {
              23: [2, 53]
            }, {
              33: [1, 125]
            }, {
              33: [2, 91],
              65: [2, 91],
              72: [2, 91],
              80: [2, 91],
              81: [2, 91],
              82: [2, 91],
              83: [2, 91],
              84: [2, 91],
              85: [2, 91]
            }, {
              33: [2, 93]
            }, {
              5: [2, 22],
              14: [2, 22],
              15: [2, 22],
              19: [2, 22],
              29: [2, 22],
              34: [2, 22],
              39: [2, 22],
              44: [2, 22],
              47: [2, 22],
              48: [2, 22],
              51: [2, 22],
              55: [2, 22],
              60: [2, 22]
            }, {
              23: [2, 99],
              33: [2, 99],
              54: [2, 99],
              68: [2, 99],
              72: [2, 99],
              75: [2, 99]
            }, {
              73: [1, 109]
            }, {
              20: 75,
              63: 126,
              64: 76,
              65: [1, 44],
              72: [1, 35],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              5: [2, 23],
              14: [2, 23],
              15: [2, 23],
              19: [2, 23],
              29: [2, 23],
              34: [2, 23],
              39: [2, 23],
              44: [2, 23],
              47: [2, 23],
              48: [2, 23],
              51: [2, 23],
              55: [2, 23],
              60: [2, 23]
            }, {
              47: [2, 19]
            }, {
              47: [2, 77]
            }, {
              20: 75,
              33: [2, 72],
              41: 127,
              63: 128,
              64: 76,
              65: [1, 44],
              69: 129,
              70: 77,
              71: 78,
              72: [1, 79],
              75: [2, 72],
              78: 26,
              79: 27,
              80: [1, 28],
              81: [1, 29],
              82: [1, 30],
              83: [1, 31],
              84: [1, 32],
              85: [1, 34],
              86: 33
            }, {
              5: [2, 24],
              14: [2, 24],
              15: [2, 24],
              19: [2, 24],
              29: [2, 24],
              34: [2, 24],
              39: [2, 24],
              44: [2, 24],
              47: [2, 24],
              48: [2, 24],
              51: [2, 24],
              55: [2, 24],
              60: [2, 24]
            }, {
              68: [1, 130]
            }, {
              65: [2, 95],
              68: [2, 95],
              72: [2, 95],
              80: [2, 95],
              81: [2, 95],
              82: [2, 95],
              83: [2, 95],
              84: [2, 95],
              85: [2, 95]
            }, {
              68: [2, 97]
            }, {
              5: [2, 21],
              14: [2, 21],
              15: [2, 21],
              19: [2, 21],
              29: [2, 21],
              34: [2, 21],
              39: [2, 21],
              44: [2, 21],
              47: [2, 21],
              48: [2, 21],
              51: [2, 21],
              55: [2, 21],
              60: [2, 21]
            }, {
              33: [1, 131]
            }, {
              33: [2, 63]
            }, {
              72: [1, 133],
              76: 132
            }, {
              33: [1, 134]
            }, {
              33: [2, 69]
            }, {
              15: [2, 12]
            }, {
              14: [2, 26],
              15: [2, 26],
              19: [2, 26],
              29: [2, 26],
              34: [2, 26],
              47: [2, 26],
              48: [2, 26],
              51: [2, 26],
              55: [2, 26],
              60: [2, 26]
            }, {
              23: [2, 31],
              33: [2, 31],
              54: [2, 31],
              68: [2, 31],
              72: [2, 31],
              75: [2, 31]
            }, {
              33: [2, 74],
              42: 135,
              74: 136,
              75: [1, 121]
            }, {
              33: [2, 71],
              65: [2, 71],
              72: [2, 71],
              75: [2, 71],
              80: [2, 71],
              81: [2, 71],
              82: [2, 71],
              83: [2, 71],
              84: [2, 71],
              85: [2, 71]
            }, {
              33: [2, 73],
              75: [2, 73]
            }, {
              23: [2, 29],
              33: [2, 29],
              54: [2, 29],
              65: [2, 29],
              68: [2, 29],
              72: [2, 29],
              75: [2, 29],
              80: [2, 29],
              81: [2, 29],
              82: [2, 29],
              83: [2, 29],
              84: [2, 29],
              85: [2, 29]
            }, {
              14: [2, 15],
              15: [2, 15],
              19: [2, 15],
              29: [2, 15],
              34: [2, 15],
              39: [2, 15],
              44: [2, 15],
              47: [2, 15],
              48: [2, 15],
              51: [2, 15],
              55: [2, 15],
              60: [2, 15]
            }, {
              72: [1, 138],
              77: [1, 137]
            }, {
              72: [2, 100],
              77: [2, 100]
            }, {
              14: [2, 16],
              15: [2, 16],
              19: [2, 16],
              29: [2, 16],
              34: [2, 16],
              44: [2, 16],
              47: [2, 16],
              48: [2, 16],
              51: [2, 16],
              55: [2, 16],
              60: [2, 16]
            }, {
              33: [1, 139]
            }, {
              33: [2, 75]
            }, {
              33: [2, 32]
            }, {
              72: [2, 101],
              77: [2, 101]
            }, {
              14: [2, 17],
              15: [2, 17],
              19: [2, 17],
              29: [2, 17],
              34: [2, 17],
              39: [2, 17],
              44: [2, 17],
              47: [2, 17],
              48: [2, 17],
              51: [2, 17],
              55: [2, 17],
              60: [2, 17]
            }],
            defaultActions: {
              4: [2, 1],
              55: [2, 55],
              57: [2, 20],
              61: [2, 57],
              74: [2, 81],
              83: [2, 85],
              87: [2, 18],
              91: [2, 89],
              102: [2, 53],
              105: [2, 93],
              111: [2, 19],
              112: [2, 77],
              117: [2, 97],
              120: [2, 63],
              123: [2, 69],
              124: [2, 12],
              136: [2, 75],
              137: [2, 32]
            },
            parseError: function parseError(a, b) {
              throw new Error(a);
            },
            parse: function parse(a) {
              function b() {
                var a;
                return a = c.lexer.lex() || 1, "number" != typeof a && (a = c.symbols_[a] || a), a;
              }

              var c = this,
                  d = [0],
                  e = [null],
                  f = [],
                  g = this.table,
                  h = "",
                  i = 0,
                  j = 0,
                  k = 0;
              this.lexer.setInput(a), this.lexer.yy = this.yy, this.yy.lexer = this.lexer, this.yy.parser = this, "undefined" == typeof this.lexer.yylloc && (this.lexer.yylloc = {});
              var l = this.lexer.yylloc;
              f.push(l);
              var m = this.lexer.options && this.lexer.options.ranges;
              "function" == typeof this.yy.parseError && (this.parseError = this.yy.parseError);

              for (var n, o, p, q, r, s, t, u, v, w = {};;) {
                if (p = d[d.length - 1], this.defaultActions[p] ? q = this.defaultActions[p] : (null !== n && "undefined" != typeof n || (n = b()), q = g[p] && g[p][n]), "undefined" == typeof q || !q.length || !q[0]) {
                  var x = "";

                  if (!k) {
                    v = [];

                    for (s in g[p]) {
                      this.terminals_[s] && s > 2 && v.push("'" + this.terminals_[s] + "'");
                    }

                    x = this.lexer.showPosition ? "Parse error on line " + (i + 1) + ":\n" + this.lexer.showPosition() + "\nExpecting " + v.join(", ") + ", got '" + (this.terminals_[n] || n) + "'" : "Parse error on line " + (i + 1) + ": Unexpected " + (1 == n ? "end of input" : "'" + (this.terminals_[n] || n) + "'"), this.parseError(x, {
                      text: this.lexer.match,
                      token: this.terminals_[n] || n,
                      line: this.lexer.yylineno,
                      loc: l,
                      expected: v
                    });
                  }
                }

                if (q[0] instanceof Array && q.length > 1) throw new Error("Parse Error: multiple actions possible at state: " + p + ", token: " + n);

                switch (q[0]) {
                  case 1:
                    d.push(n), e.push(this.lexer.yytext), f.push(this.lexer.yylloc), d.push(q[1]), n = null, o ? (n = o, o = null) : (j = this.lexer.yyleng, h = this.lexer.yytext, i = this.lexer.yylineno, l = this.lexer.yylloc, k > 0 && k--);
                    break;

                  case 2:
                    if (t = this.productions_[q[1]][1], w.$ = e[e.length - t], w._$ = {
                      first_line: f[f.length - (t || 1)].first_line,
                      last_line: f[f.length - 1].last_line,
                      first_column: f[f.length - (t || 1)].first_column,
                      last_column: f[f.length - 1].last_column
                    }, m && (w._$.range = [f[f.length - (t || 1)].range[0], f[f.length - 1].range[1]]), r = this.performAction.call(w, h, j, i, this.yy, q[1], e, f), "undefined" != typeof r) return r;
                    t && (d = d.slice(0, -1 * t * 2), e = e.slice(0, -1 * t), f = f.slice(0, -1 * t)), d.push(this.productions_[q[1]][0]), e.push(w.$), f.push(w._$), u = g[d[d.length - 2]][d[d.length - 1]], d.push(u);
                    break;

                  case 3:
                    return !0;
                }
              }

              return !0;
            }
          },
              c = function () {
            var a = {
              EOF: 1,
              parseError: function parseError(a, b) {
                if (!this.yy.parser) throw new Error(a);
                this.yy.parser.parseError(a, b);
              },
              setInput: function setInput(a) {
                return this._input = a, this._more = this._less = this.done = !1, this.yylineno = this.yyleng = 0, this.yytext = this.matched = this.match = "", this.conditionStack = ["INITIAL"], this.yylloc = {
                  first_line: 1,
                  first_column: 0,
                  last_line: 1,
                  last_column: 0
                }, this.options.ranges && (this.yylloc.range = [0, 0]), this.offset = 0, this;
              },
              input: function input() {
                var a = this._input[0];
                this.yytext += a, this.yyleng++, this.offset++, this.match += a, this.matched += a;
                var b = a.match(/(?:\r\n?|\n).*/g);
                return b ? (this.yylineno++, this.yylloc.last_line++) : this.yylloc.last_column++, this.options.ranges && this.yylloc.range[1]++, this._input = this._input.slice(1), a;
              },
              unput: function unput(a) {
                var b = a.length,
                    c = a.split(/(?:\r\n?|\n)/g);
                this._input = a + this._input, this.yytext = this.yytext.substr(0, this.yytext.length - b - 1), this.offset -= b;
                var d = this.match.split(/(?:\r\n?|\n)/g);
                this.match = this.match.substr(0, this.match.length - 1), this.matched = this.matched.substr(0, this.matched.length - 1), c.length - 1 && (this.yylineno -= c.length - 1);
                var e = this.yylloc.range;
                return this.yylloc = {
                  first_line: this.yylloc.first_line,
                  last_line: this.yylineno + 1,
                  first_column: this.yylloc.first_column,
                  last_column: c ? (c.length === d.length ? this.yylloc.first_column : 0) + d[d.length - c.length].length - c[0].length : this.yylloc.first_column - b
                }, this.options.ranges && (this.yylloc.range = [e[0], e[0] + this.yyleng - b]), this;
              },
              more: function more() {
                return this._more = !0, this;
              },
              less: function less(a) {
                this.unput(this.match.slice(a));
              },
              pastInput: function pastInput() {
                var a = this.matched.substr(0, this.matched.length - this.match.length);
                return (a.length > 20 ? "..." : "") + a.substr(-20).replace(/\n/g, "");
              },
              upcomingInput: function upcomingInput() {
                var a = this.match;
                return a.length < 20 && (a += this._input.substr(0, 20 - a.length)), (a.substr(0, 20) + (a.length > 20 ? "..." : "")).replace(/\n/g, "");
              },
              showPosition: function showPosition() {
                var a = this.pastInput(),
                    b = new Array(a.length + 1).join("-");
                return a + this.upcomingInput() + "\n" + b + "^";
              },
              next: function next() {
                if (this.done) return this.EOF;
                this._input || (this.done = !0);
                var a, b, c, d, e;
                this._more || (this.yytext = "", this.match = "");

                for (var f = this._currentRules(), g = 0; g < f.length && (c = this._input.match(this.rules[f[g]]), !c || b && !(c[0].length > b[0].length) || (b = c, d = g, this.options.flex)); g++) {
                }

                return b ? (e = b[0].match(/(?:\r\n?|\n).*/g), e && (this.yylineno += e.length), this.yylloc = {
                  first_line: this.yylloc.last_line,
                  last_line: this.yylineno + 1,
                  first_column: this.yylloc.last_column,
                  last_column: e ? e[e.length - 1].length - e[e.length - 1].match(/\r?\n?/)[0].length : this.yylloc.last_column + b[0].length
                }, this.yytext += b[0], this.match += b[0], this.matches = b, this.yyleng = this.yytext.length, this.options.ranges && (this.yylloc.range = [this.offset, this.offset += this.yyleng]), this._more = !1, this._input = this._input.slice(b[0].length), this.matched += b[0], a = this.performAction.call(this, this.yy, this, f[d], this.conditionStack[this.conditionStack.length - 1]), this.done && this._input && (this.done = !1), a ? a : void 0) : "" === this._input ? this.EOF : this.parseError("Lexical error on line " + (this.yylineno + 1) + ". Unrecognized text.\n" + this.showPosition(), {
                  text: "",
                  token: null,
                  line: this.yylineno
                });
              },
              lex: function lex() {
                var a = this.next();
                return "undefined" != typeof a ? a : this.lex();
              },
              begin: function begin(a) {
                this.conditionStack.push(a);
              },
              popState: function popState() {
                return this.conditionStack.pop();
              },
              _currentRules: function _currentRules() {
                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;
              },
              topState: function topState() {
                return this.conditionStack[this.conditionStack.length - 2];
              },
              pushState: function pushState(a) {
                this.begin(a);
              }
            };
            return a.options = {}, a.performAction = function (a, b, c, d) {
              function e(a, c) {
                return b.yytext = b.yytext.substring(a, b.yyleng - c + a);
              }

              switch (c) {
                case 0:
                  if ("\\\\" === b.yytext.slice(-2) ? (e(0, 1), this.begin("mu")) : "\\" === b.yytext.slice(-1) ? (e(0, 1), this.begin("emu")) : this.begin("mu"), b.yytext) return 15;
                  break;

                case 1:
                  return 15;

                case 2:
                  return this.popState(), 15;

                case 3:
                  return this.begin("raw"), 15;

                case 4:
                  return this.popState(), "raw" === this.conditionStack[this.conditionStack.length - 1] ? 15 : (e(5, 9), "END_RAW_BLOCK");

                case 5:
                  return 15;

                case 6:
                  return this.popState(), 14;

                case 7:
                  return 65;

                case 8:
                  return 68;

                case 9:
                  return 19;

                case 10:
                  return this.popState(), this.begin("raw"), 23;

                case 11:
                  return 55;

                case 12:
                  return 60;

                case 13:
                  return 29;

                case 14:
                  return 47;

                case 15:
                  return this.popState(), 44;

                case 16:
                  return this.popState(), 44;

                case 17:
                  return 34;

                case 18:
                  return 39;

                case 19:
                  return 51;

                case 20:
                  return 48;

                case 21:
                  this.unput(b.yytext), this.popState(), this.begin("com");
                  break;

                case 22:
                  return this.popState(), 14;

                case 23:
                  return 48;

                case 24:
                  return 73;

                case 25:
                  return 72;

                case 26:
                  return 72;

                case 27:
                  return 87;

                case 28:
                  break;

                case 29:
                  return this.popState(), 54;

                case 30:
                  return this.popState(), 33;

                case 31:
                  return b.yytext = e(1, 2).replace(/\\"/g, '"'), 80;

                case 32:
                  return b.yytext = e(1, 2).replace(/\\'/g, "'"), 80;

                case 33:
                  return 85;

                case 34:
                  return 82;

                case 35:
                  return 82;

                case 36:
                  return 83;

                case 37:
                  return 84;

                case 38:
                  return 81;

                case 39:
                  return 75;

                case 40:
                  return 77;

                case 41:
                  return 72;

                case 42:
                  return b.yytext = b.yytext.replace(/\\([\\\]])/g, "$1"), 72;

                case 43:
                  return "INVALID";

                case 44:
                  return 5;
              }
            }, a.rules = [/^(?:[^\x00]*?(?=(\{\{)))/, /^(?:[^\x00]+)/, /^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/, /^(?:\{\{\{\{(?=[^\/]))/, /^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/, /^(?:[^\x00]*?(?=(\{\{\{\{)))/, /^(?:[\s\S]*?--(~)?\}\})/, /^(?:\()/, /^(?:\))/, /^(?:\{\{\{\{)/, /^(?:\}\}\}\})/, /^(?:\{\{(~)?>)/, /^(?:\{\{(~)?#>)/, /^(?:\{\{(~)?#\*?)/, /^(?:\{\{(~)?\/)/, /^(?:\{\{(~)?\^\s*(~)?\}\})/, /^(?:\{\{(~)?\s*else\s*(~)?\}\})/, /^(?:\{\{(~)?\^)/, /^(?:\{\{(~)?\s*else\b)/, /^(?:\{\{(~)?\{)/, /^(?:\{\{(~)?&)/, /^(?:\{\{(~)?!--)/, /^(?:\{\{(~)?![\s\S]*?\}\})/, /^(?:\{\{(~)?\*?)/, /^(?:=)/, /^(?:\.\.)/, /^(?:\.(?=([=~}\s\/.)|])))/, /^(?:[\/.])/, /^(?:\s+)/, /^(?:\}(~)?\}\})/, /^(?:(~)?\}\})/, /^(?:"(\\["]|[^"])*")/, /^(?:'(\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\s)])))/, /^(?:false(?=([~}\s)])))/, /^(?:undefined(?=([~}\s)])))/, /^(?:null(?=([~}\s)])))/, /^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/, /^(?:as\s+\|)/, /^(?:\|)/, /^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/, /^(?:\[(\\\]|[^\]])*\])/, /^(?:.)/, /^(?:$)/], a.conditions = {
              mu: {
                rules: [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44],
                inclusive: !1
              },
              emu: {
                rules: [2],
                inclusive: !1
              },
              com: {
                rules: [6],
                inclusive: !1
              },
              raw: {
                rules: [3, 4, 5],
                inclusive: !1
              },
              INITIAL: {
                rules: [0, 1, 44],
                inclusive: !0
              }
            }, a;
          }();

          return b.lexer = c, a.prototype = b, b.Parser = a, new a();
        }();

        b["default"] = c, a.exports = b["default"];
      }, function (a, b, c) {

        function d() {
          var a = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0];
          this.options = a;
        }

        function e(a, b, c) {
          void 0 === b && (b = a.length);
          var d = a[b - 1],
              e = a[b - 2];
          return d ? "ContentStatement" === d.type ? (e || !c ? /\r?\n\s*?$/ : /(^|\r?\n)\s*?$/).test(d.original) : void 0 : c;
        }

        function f(a, b, c) {
          void 0 === b && (b = -1);
          var d = a[b + 1],
              e = a[b + 2];
          return d ? "ContentStatement" === d.type ? (e || !c ? /^\s*?\r?\n/ : /^\s*?(\r?\n|$)/).test(d.original) : void 0 : c;
        }

        function g(a, b, c) {
          var d = a[null == b ? 0 : b + 1];

          if (d && "ContentStatement" === d.type && (c || !d.rightStripped)) {
            var e = d.value;
            d.value = d.value.replace(c ? /^\s+/ : /^[ \t]*\r?\n?/, ""), d.rightStripped = d.value !== e;
          }
        }

        function h(a, b, c) {
          var d = a[null == b ? a.length - 1 : b - 1];

          if (d && "ContentStatement" === d.type && (c || !d.leftStripped)) {
            var e = d.value;
            return d.value = d.value.replace(c ? /\s+$/ : /[ \t]+$/, ""), d.leftStripped = d.value !== e, d.leftStripped;
          }
        }

        var i = c(1)["default"];
        b.__esModule = !0;
        var j = c(39),
            k = i(j);
        d.prototype = new k["default"](), d.prototype.Program = function (a) {
          var b = !this.options.ignoreStandalone,
              c = !this.isRootSeen;
          this.isRootSeen = !0;

          for (var d = a.body, i = 0, j = d.length; i < j; i++) {
            var k = d[i],
                l = this.accept(k);

            if (l) {
              var m = e(d, i, c),
                  n = f(d, i, c),
                  o = l.openStandalone && m,
                  p = l.closeStandalone && n,
                  q = l.inlineStandalone && m && n;
              l.close && g(d, i, !0), l.open && h(d, i, !0), b && q && (g(d, i), h(d, i) && "PartialStatement" === k.type && (k.indent = /([ \t]+$)/.exec(d[i - 1].original)[1])), b && o && (g((k.program || k.inverse).body), h(d, i)), b && p && (g(d, i), h((k.inverse || k.program).body));
            }
          }

          return a;
        }, d.prototype.BlockStatement = d.prototype.DecoratorBlock = d.prototype.PartialBlockStatement = function (a) {
          this.accept(a.program), this.accept(a.inverse);
          var b = a.program || a.inverse,
              c = a.program && a.inverse,
              d = c,
              i = c;
          if (c && c.chained) for (d = c.body[0].program; i.chained;) {
            i = i.body[i.body.length - 1].program;
          }
          var j = {
            open: a.openStrip.open,
            close: a.closeStrip.close,
            openStandalone: f(b.body),
            closeStandalone: e((d || b).body)
          };

          if (a.openStrip.close && g(b.body, null, !0), c) {
            var k = a.inverseStrip;
            k.open && h(b.body, null, !0), k.close && g(d.body, null, !0), a.closeStrip.open && h(i.body, null, !0), !this.options.ignoreStandalone && e(b.body) && f(d.body) && (h(b.body), g(d.body));
          } else a.closeStrip.open && h(b.body, null, !0);

          return j;
        }, d.prototype.Decorator = d.prototype.MustacheStatement = function (a) {
          return a.strip;
        }, d.prototype.PartialStatement = d.prototype.CommentStatement = function (a) {
          var b = a.strip || {};
          return {
            inlineStandalone: !0,
            open: b.open,
            close: b.close
          };
        }, b["default"] = d, a.exports = b["default"];
      }, function (a, b, c) {

        function d() {
          this.parents = [];
        }

        function e(a) {
          this.acceptRequired(a, "path"), this.acceptArray(a.params), this.acceptKey(a, "hash");
        }

        function f(a) {
          e.call(this, a), this.acceptKey(a, "program"), this.acceptKey(a, "inverse");
        }

        function g(a) {
          this.acceptRequired(a, "name"), this.acceptArray(a.params), this.acceptKey(a, "hash");
        }

        var h = c(1)["default"];
        b.__esModule = !0;
        var i = c(6),
            j = h(i);
        d.prototype = {
          constructor: d,
          mutating: !1,
          acceptKey: function acceptKey(a, b) {
            var c = this.accept(a[b]);

            if (this.mutating) {
              if (c && !d.prototype[c.type]) throw new j["default"]('Unexpected node type "' + c.type + '" found when accepting ' + b + " on " + a.type);
              a[b] = c;
            }
          },
          acceptRequired: function acceptRequired(a, b) {
            if (this.acceptKey(a, b), !a[b]) throw new j["default"](a.type + " requires " + b);
          },
          acceptArray: function acceptArray(a) {
            for (var b = 0, c = a.length; b < c; b++) {
              this.acceptKey(a, b), a[b] || (a.splice(b, 1), b--, c--);
            }
          },
          accept: function accept(a) {
            if (a) {
              if (!this[a.type]) throw new j["default"]("Unknown type: " + a.type, a);
              this.current && this.parents.unshift(this.current), this.current = a;
              var b = this[a.type](a);
              return this.current = this.parents.shift(), !this.mutating || b ? b : b !== !1 ? a : void 0;
            }
          },
          Program: function Program(a) {
            this.acceptArray(a.body);
          },
          MustacheStatement: e,
          Decorator: e,
          BlockStatement: f,
          DecoratorBlock: f,
          PartialStatement: g,
          PartialBlockStatement: function PartialBlockStatement(a) {
            g.call(this, a), this.acceptKey(a, "program");
          },
          ContentStatement: function ContentStatement() {},
          CommentStatement: function CommentStatement() {},
          SubExpression: e,
          PathExpression: function PathExpression() {},
          StringLiteral: function StringLiteral() {},
          NumberLiteral: function NumberLiteral() {},
          BooleanLiteral: function BooleanLiteral() {},
          UndefinedLiteral: function UndefinedLiteral() {},
          NullLiteral: function NullLiteral() {},
          Hash: function Hash(a) {
            this.acceptArray(a.pairs);
          },
          HashPair: function HashPair(a) {
            this.acceptRequired(a, "value");
          }
        }, b["default"] = d, a.exports = b["default"];
      }, function (a, b, c) {

        function d(a, b) {
          if (b = b.path ? b.path.original : b, a.path.original !== b) {
            var c = {
              loc: a.path.loc
            };
            throw new q["default"](a.path.original + " doesn't match " + b, c);
          }
        }

        function e(a, b) {
          this.source = a, this.start = {
            line: b.first_line,
            column: b.first_column
          }, this.end = {
            line: b.last_line,
            column: b.last_column
          };
        }

        function f(a) {
          return /^\[.*\]$/.test(a) ? a.substring(1, a.length - 1) : a;
        }

        function g(a, b) {
          return {
            open: "~" === a.charAt(2),
            close: "~" === b.charAt(b.length - 3)
          };
        }

        function h(a) {
          return a.replace(/^\{\{~?!-?-?/, "").replace(/-?-?~?\}\}$/, "");
        }

        function i(a, b, c) {
          c = this.locInfo(c);

          for (var d = a ? "@" : "", e = [], f = 0, g = 0, h = b.length; g < h; g++) {
            var i = b[g].part,
                j = b[g].original !== i;
            if (d += (b[g].separator || "") + i, j || ".." !== i && "." !== i && "this" !== i) e.push(i);else {
              if (e.length > 0) throw new q["default"]("Invalid path: " + d, {
                loc: c
              });
              ".." === i && f++;
            }
          }

          return {
            type: "PathExpression",
            data: a,
            depth: f,
            parts: e,
            original: d,
            loc: c
          };
        }

        function j(a, b, c, d, e, f) {
          var g = d.charAt(3) || d.charAt(2),
              h = "{" !== g && "&" !== g,
              i = /\*/.test(d);
          return {
            type: i ? "Decorator" : "MustacheStatement",
            path: a,
            params: b,
            hash: c,
            escaped: h,
            strip: e,
            loc: this.locInfo(f)
          };
        }

        function k(a, b, c, e) {
          d(a, c), e = this.locInfo(e);
          var f = {
            type: "Program",
            body: b,
            strip: {},
            loc: e
          };
          return {
            type: "BlockStatement",
            path: a.path,
            params: a.params,
            hash: a.hash,
            program: f,
            openStrip: {},
            inverseStrip: {},
            closeStrip: {},
            loc: e
          };
        }

        function l(a, b, c, e, f, g) {
          e && e.path && d(a, e);
          var h = /\*/.test(a.open);
          b.blockParams = a.blockParams;
          var i = void 0,
              j = void 0;

          if (c) {
            if (h) throw new q["default"]("Unexpected inverse block on decorator", c);
            c.chain && (c.program.body[0].closeStrip = e.strip), j = c.strip, i = c.program;
          }

          return f && (f = i, i = b, b = f), {
            type: h ? "DecoratorBlock" : "BlockStatement",
            path: a.path,
            params: a.params,
            hash: a.hash,
            program: b,
            inverse: i,
            openStrip: a.strip,
            inverseStrip: j,
            closeStrip: e && e.strip,
            loc: this.locInfo(g)
          };
        }

        function m(a, b) {
          if (!b && a.length) {
            var c = a[0].loc,
                d = a[a.length - 1].loc;
            c && d && (b = {
              source: c.source,
              start: {
                line: c.start.line,
                column: c.start.column
              },
              end: {
                line: d.end.line,
                column: d.end.column
              }
            });
          }

          return {
            type: "Program",
            body: a,
            strip: {},
            loc: b
          };
        }

        function n(a, b, c, e) {
          return d(a, c), {
            type: "PartialBlockStatement",
            name: a.path,
            params: a.params,
            hash: a.hash,
            program: b,
            openStrip: a.strip,
            closeStrip: c && c.strip,
            loc: this.locInfo(e)
          };
        }

        var o = c(1)["default"];
        b.__esModule = !0, b.SourceLocation = e, b.id = f, b.stripFlags = g, b.stripComment = h, b.preparePath = i, b.prepareMustache = j, b.prepareRawBlock = k, b.prepareBlock = l, b.prepareProgram = m, b.preparePartialBlock = n;
        var p = c(6),
            q = o(p);
      }, function (a, b, c) {

        function d() {}

        function e(a, b, c) {
          if (null == a || "string" != typeof a && "Program" !== a.type) throw new k["default"]("You must pass a string or Handlebars AST to Handlebars.precompile. You passed " + a);
          b = b || {}, "data" in b || (b.data = !0), b.compat && (b.useDepths = !0);
          var d = c.parse(a, b),
              e = new c.Compiler().compile(d, b);
          return new c.JavaScriptCompiler().compile(e, b);
        }

        function f(a, b, c) {
          function d() {
            var d = c.parse(a, b),
                e = new c.Compiler().compile(d, b),
                f = new c.JavaScriptCompiler().compile(e, b, void 0, !0);
            return c.template(f);
          }

          function e(a, b) {
            return f || (f = d()), f.call(this, a, b);
          }

          if (void 0 === b && (b = {}), null == a || "string" != typeof a && "Program" !== a.type) throw new k["default"]("You must pass a string or Handlebars AST to Handlebars.compile. You passed " + a);
          b = l.extend({}, b), "data" in b || (b.data = !0), b.compat && (b.useDepths = !0);
          var f = void 0;
          return e._setup = function (a) {
            return f || (f = d()), f._setup(a);
          }, e._child = function (a, b, c, e) {
            return f || (f = d()), f._child(a, b, c, e);
          }, e;
        }

        function g(a, b) {
          if (a === b) return !0;

          if (l.isArray(a) && l.isArray(b) && a.length === b.length) {
            for (var c = 0; c < a.length; c++) {
              if (!g(a[c], b[c])) return !1;
            }

            return !0;
          }
        }

        function h(a) {
          if (!a.path.parts) {
            var b = a.path;
            a.path = {
              type: "PathExpression",
              data: !1,
              depth: 0,
              parts: [b.original + ""],
              original: b.original + "",
              loc: b.loc
            };
          }
        }

        var i = c(1)["default"];
        b.__esModule = !0, b.Compiler = d, b.precompile = e, b.compile = f;
        var j = c(6),
            k = i(j),
            l = c(5),
            m = c(35),
            n = i(m),
            o = [].slice;
        d.prototype = {
          compiler: d,
          equals: function equals(a) {
            var b = this.opcodes.length;
            if (a.opcodes.length !== b) return !1;

            for (var c = 0; c < b; c++) {
              var d = this.opcodes[c],
                  e = a.opcodes[c];
              if (d.opcode !== e.opcode || !g(d.args, e.args)) return !1;
            }

            b = this.children.length;

            for (var c = 0; c < b; c++) {
              if (!this.children[c].equals(a.children[c])) return !1;
            }

            return !0;
          },
          guid: 0,
          compile: function compile(a, b) {
            this.sourceNode = [], this.opcodes = [], this.children = [], this.options = b, this.stringParams = b.stringParams, this.trackIds = b.trackIds, b.blockParams = b.blockParams || [];
            var c = b.knownHelpers;
            if (b.knownHelpers = {
              helperMissing: !0,
              blockHelperMissing: !0,
              each: !0,
              "if": !0,
              unless: !0,
              "with": !0,
              log: !0,
              lookup: !0
            }, c) for (var d in c) {
              this.options.knownHelpers[d] = c[d];
            }
            return this.accept(a);
          },
          compileProgram: function compileProgram(a) {
            var b = new this.compiler(),
                c = b.compile(a, this.options),
                d = this.guid++;
            return this.usePartial = this.usePartial || c.usePartial, this.children[d] = c, this.useDepths = this.useDepths || c.useDepths, d;
          },
          accept: function accept(a) {
            if (!this[a.type]) throw new k["default"]("Unknown type: " + a.type, a);
            this.sourceNode.unshift(a);
            var b = this[a.type](a);
            return this.sourceNode.shift(), b;
          },
          Program: function Program(a) {
            this.options.blockParams.unshift(a.blockParams);

            for (var b = a.body, c = b.length, d = 0; d < c; d++) {
              this.accept(b[d]);
            }

            return this.options.blockParams.shift(), this.isSimple = 1 === c, this.blockParams = a.blockParams ? a.blockParams.length : 0, this;
          },
          BlockStatement: function BlockStatement(a) {
            h(a);
            var b = a.program,
                c = a.inverse;
            b = b && this.compileProgram(b), c = c && this.compileProgram(c);
            var d = this.classifySexpr(a);
            "helper" === d ? this.helperSexpr(a, b, c) : "simple" === d ? (this.simpleSexpr(a), this.opcode("pushProgram", b), this.opcode("pushProgram", c), this.opcode("emptyHash"), this.opcode("blockValue", a.path.original)) : (this.ambiguousSexpr(a, b, c), this.opcode("pushProgram", b), this.opcode("pushProgram", c), this.opcode("emptyHash"), this.opcode("ambiguousBlockValue")), this.opcode("append");
          },
          DecoratorBlock: function DecoratorBlock(a) {
            var b = a.program && this.compileProgram(a.program),
                c = this.setupFullMustacheParams(a, b, void 0),
                d = a.path;
            this.useDecorators = !0, this.opcode("registerDecorator", c.length, d.original);
          },
          PartialStatement: function PartialStatement(a) {
            this.usePartial = !0;
            var b = a.program;
            b && (b = this.compileProgram(a.program));
            var c = a.params;
            if (c.length > 1) throw new k["default"]("Unsupported number of partial arguments: " + c.length, a);
            c.length || (this.options.explicitPartialContext ? this.opcode("pushLiteral", "undefined") : c.push({
              type: "PathExpression",
              parts: [],
              depth: 0
            }));
            var d = a.name.original,
                e = "SubExpression" === a.name.type;
            e && this.accept(a.name), this.setupFullMustacheParams(a, b, void 0, !0);
            var f = a.indent || "";
            this.options.preventIndent && f && (this.opcode("appendContent", f), f = ""), this.opcode("invokePartial", e, d, f), this.opcode("append");
          },
          PartialBlockStatement: function PartialBlockStatement(a) {
            this.PartialStatement(a);
          },
          MustacheStatement: function MustacheStatement(a) {
            this.SubExpression(a), a.escaped && !this.options.noEscape ? this.opcode("appendEscaped") : this.opcode("append");
          },
          Decorator: function Decorator(a) {
            this.DecoratorBlock(a);
          },
          ContentStatement: function ContentStatement(a) {
            a.value && this.opcode("appendContent", a.value);
          },
          CommentStatement: function CommentStatement() {},
          SubExpression: function SubExpression(a) {
            h(a);
            var b = this.classifySexpr(a);
            "simple" === b ? this.simpleSexpr(a) : "helper" === b ? this.helperSexpr(a) : this.ambiguousSexpr(a);
          },
          ambiguousSexpr: function ambiguousSexpr(a, b, c) {
            var d = a.path,
                e = d.parts[0],
                f = null != b || null != c;
            this.opcode("getContext", d.depth), this.opcode("pushProgram", b), this.opcode("pushProgram", c), d.strict = !0, this.accept(d), this.opcode("invokeAmbiguous", e, f);
          },
          simpleSexpr: function simpleSexpr(a) {
            var b = a.path;
            b.strict = !0, this.accept(b), this.opcode("resolvePossibleLambda");
          },
          helperSexpr: function helperSexpr(a, b, c) {
            var d = this.setupFullMustacheParams(a, b, c),
                e = a.path,
                f = e.parts[0];
            if (this.options.knownHelpers[f]) this.opcode("invokeKnownHelper", d.length, f);else {
              if (this.options.knownHelpersOnly) throw new k["default"]("You specified knownHelpersOnly, but used the unknown helper " + f, a);
              e.strict = !0, e.falsy = !0, this.accept(e), this.opcode("invokeHelper", d.length, e.original, n["default"].helpers.simpleId(e));
            }
          },
          PathExpression: function PathExpression(a) {
            this.addDepth(a.depth), this.opcode("getContext", a.depth);
            var b = a.parts[0],
                c = n["default"].helpers.scopedId(a),
                d = !a.depth && !c && this.blockParamIndex(b);
            d ? this.opcode("lookupBlockParam", d, a.parts) : b ? a.data ? (this.options.data = !0, this.opcode("lookupData", a.depth, a.parts, a.strict)) : this.opcode("lookupOnContext", a.parts, a.falsy, a.strict, c) : this.opcode("pushContext");
          },
          StringLiteral: function StringLiteral(a) {
            this.opcode("pushString", a.value);
          },
          NumberLiteral: function NumberLiteral(a) {
            this.opcode("pushLiteral", a.value);
          },
          BooleanLiteral: function BooleanLiteral(a) {
            this.opcode("pushLiteral", a.value);
          },
          UndefinedLiteral: function UndefinedLiteral() {
            this.opcode("pushLiteral", "undefined");
          },
          NullLiteral: function NullLiteral() {
            this.opcode("pushLiteral", "null");
          },
          Hash: function Hash(a) {
            var b = a.pairs,
                c = 0,
                d = b.length;

            for (this.opcode("pushHash"); c < d; c++) {
              this.pushParam(b[c].value);
            }

            for (; c--;) {
              this.opcode("assignToHash", b[c].key);
            }

            this.opcode("popHash");
          },
          opcode: function opcode(a) {
            this.opcodes.push({
              opcode: a,
              args: o.call(arguments, 1),
              loc: this.sourceNode[0].loc
            });
          },
          addDepth: function addDepth(a) {
            a && (this.useDepths = !0);
          },
          classifySexpr: function classifySexpr(a) {
            var b = n["default"].helpers.simpleId(a.path),
                c = b && !!this.blockParamIndex(a.path.parts[0]),
                d = !c && n["default"].helpers.helperExpression(a),
                e = !c && (d || b);

            if (e && !d) {
              var f = a.path.parts[0],
                  g = this.options;
              g.knownHelpers[f] ? d = !0 : g.knownHelpersOnly && (e = !1);
            }

            return d ? "helper" : e ? "ambiguous" : "simple";
          },
          pushParams: function pushParams(a) {
            for (var b = 0, c = a.length; b < c; b++) {
              this.pushParam(a[b]);
            }
          },
          pushParam: function pushParam(a) {
            var b = null != a.value ? a.value : a.original || "";
            if (this.stringParams) b.replace && (b = b.replace(/^(\.?\.\/)*/g, "").replace(/\//g, ".")), a.depth && this.addDepth(a.depth), this.opcode("getContext", a.depth || 0), this.opcode("pushStringParam", b, a.type), "SubExpression" === a.type && this.accept(a);else {
              if (this.trackIds) {
                var c = void 0;

                if (!a.parts || n["default"].helpers.scopedId(a) || a.depth || (c = this.blockParamIndex(a.parts[0])), c) {
                  var d = a.parts.slice(1).join(".");
                  this.opcode("pushId", "BlockParam", c, d);
                } else b = a.original || b, b.replace && (b = b.replace(/^this(?:\.|$)/, "").replace(/^\.\//, "").replace(/^\.$/, "")), this.opcode("pushId", a.type, b);
              }

              this.accept(a);
            }
          },
          setupFullMustacheParams: function setupFullMustacheParams(a, b, c, d) {
            var e = a.params;
            return this.pushParams(e), this.opcode("pushProgram", b), this.opcode("pushProgram", c), a.hash ? this.accept(a.hash) : this.opcode("emptyHash", d), e;
          },
          blockParamIndex: function blockParamIndex(a) {
            for (var b = 0, c = this.options.blockParams.length; b < c; b++) {
              var d = this.options.blockParams[b],
                  e = d && l.indexOf(d, a);
              if (d && e >= 0) return [b, e];
            }
          }
        };
      }, function (a, b, c) {

        function d(a) {
          this.value = a;
        }

        function e() {}

        function f(a, b, c, d) {
          var e = b.popStack(),
              f = 0,
              g = c.length;

          for (a && g--; f < g; f++) {
            e = b.nameLookup(e, c[f], d);
          }

          return a ? [b.aliasable("container.strict"), "(", e, ", ", b.quotedString(c[f]), ")"] : e;
        }

        var g = c(1)["default"];
        b.__esModule = !0;
        var h = c(4),
            i = c(6),
            j = g(i),
            k = c(5),
            l = c(43),
            m = g(l);
        e.prototype = {
          nameLookup: function nameLookup(a, b) {
            return "constructor" === b ? ["(", a, ".propertyIsEnumerable('constructor') ? ", a, ".constructor : undefined", ")"] : e.isValidJavaScriptVariableName(b) ? [a, ".", b] : [a, "[", JSON.stringify(b), "]"];
          },
          depthedLookup: function depthedLookup(a) {
            return [this.aliasable("container.lookup"), '(depths, "', a, '")'];
          },
          compilerInfo: function compilerInfo() {
            var a = h.COMPILER_REVISION,
                b = h.REVISION_CHANGES[a];
            return [a, b];
          },
          appendToBuffer: function appendToBuffer(a, b, c) {
            return k.isArray(a) || (a = [a]), a = this.source.wrap(a, b), this.environment.isSimple ? ["return ", a, ";"] : c ? ["buffer += ", a, ";"] : (a.appendToBuffer = !0, a);
          },
          initializeBuffer: function initializeBuffer() {
            return this.quotedString("");
          },
          compile: function compile(a, b, c, d) {
            this.environment = a, this.options = b, this.stringParams = this.options.stringParams, this.trackIds = this.options.trackIds, this.precompile = !d, this.name = this.environment.name, this.isChild = !!c, this.context = c || {
              decorators: [],
              programs: [],
              environments: []
            }, this.preamble(), this.stackSlot = 0, this.stackVars = [], this.aliases = {}, this.registers = {
              list: []
            }, this.hashes = [], this.compileStack = [], this.inlineStack = [], this.blockParams = [], this.compileChildren(a, b), this.useDepths = this.useDepths || a.useDepths || a.useDecorators || this.options.compat, this.useBlockParams = this.useBlockParams || a.useBlockParams;
            var e = a.opcodes,
                f = void 0,
                g = void 0,
                h = void 0,
                i = void 0;

            for (h = 0, i = e.length; h < i; h++) {
              f = e[h], this.source.currentLocation = f.loc, g = g || f.loc, this[f.opcode].apply(this, f.args);
            }

            if (this.source.currentLocation = g, this.pushSource(""), this.stackSlot || this.inlineStack.length || this.compileStack.length) throw new j["default"]("Compile completed with content left on stack");
            this.decorators.isEmpty() ? this.decorators = void 0 : (this.useDecorators = !0, this.decorators.prepend("var decorators = container.decorators;\n"), this.decorators.push("return fn;"), d ? this.decorators = Function.apply(this, ["fn", "props", "container", "depth0", "data", "blockParams", "depths", this.decorators.merge()]) : (this.decorators.prepend("function(fn, props, container, depth0, data, blockParams, depths) {\n"), this.decorators.push("}\n"), this.decorators = this.decorators.merge()));
            var k = this.createFunctionContext(d);
            if (this.isChild) return k;
            var l = {
              compiler: this.compilerInfo(),
              main: k
            };
            this.decorators && (l.main_d = this.decorators, l.useDecorators = !0);
            var m = this.context,
                n = m.programs,
                o = m.decorators;

            for (h = 0, i = n.length; h < i; h++) {
              n[h] && (l[h] = n[h], o[h] && (l[h + "_d"] = o[h], l.useDecorators = !0));
            }

            return this.environment.usePartial && (l.usePartial = !0), this.options.data && (l.useData = !0), this.useDepths && (l.useDepths = !0), this.useBlockParams && (l.useBlockParams = !0), this.options.compat && (l.compat = !0), d ? l.compilerOptions = this.options : (l.compiler = JSON.stringify(l.compiler), this.source.currentLocation = {
              start: {
                line: 1,
                column: 0
              }
            }, l = this.objectLiteral(l), b.srcName ? (l = l.toStringWithSourceMap({
              file: b.destName
            }), l.map = l.map && l.map.toString()) : l = l.toString()), l;
          },
          preamble: function preamble() {
            this.lastContext = 0, this.source = new m["default"](this.options.srcName), this.decorators = new m["default"](this.options.srcName);
          },
          createFunctionContext: function createFunctionContext(a) {
            var b = "",
                c = this.stackVars.concat(this.registers.list);
            c.length > 0 && (b += ", " + c.join(", "));
            var d = 0;

            for (var e in this.aliases) {
              var f = this.aliases[e];
              this.aliases.hasOwnProperty(e) && f.children && f.referenceCount > 1 && (b += ", alias" + ++d + "=" + e, f.children[0] = "alias" + d);
            }

            var g = ["container", "depth0", "helpers", "partials", "data"];
            (this.useBlockParams || this.useDepths) && g.push("blockParams"), this.useDepths && g.push("depths");
            var h = this.mergeSource(b);
            return a ? (g.push(h), Function.apply(this, g)) : this.source.wrap(["function(", g.join(","), ") {\n  ", h, "}"]);
          },
          mergeSource: function mergeSource(a) {
            var b = this.environment.isSimple,
                c = !this.forceBuffer,
                d = void 0,
                e = void 0,
                f = void 0,
                g = void 0;
            return this.source.each(function (a) {
              a.appendToBuffer ? (f ? a.prepend("  + ") : f = a, g = a) : (f && (e ? f.prepend("buffer += ") : d = !0, g.add(";"), f = g = void 0), e = !0, b || (c = !1));
            }), c ? f ? (f.prepend("return "), g.add(";")) : e || this.source.push('return "";') : (a += ", buffer = " + (d ? "" : this.initializeBuffer()), f ? (f.prepend("return buffer + "), g.add(";")) : this.source.push("return buffer;")), a && this.source.prepend("var " + a.substring(2) + (d ? "" : ";\n")), this.source.merge();
          },
          blockValue: function blockValue(a) {
            var b = this.aliasable("helpers.blockHelperMissing"),
                c = [this.contextName(0)];
            this.setupHelperArgs(a, 0, c);
            var d = this.popStack();
            c.splice(1, 0, d), this.push(this.source.functionCall(b, "call", c));
          },
          ambiguousBlockValue: function ambiguousBlockValue() {
            var a = this.aliasable("helpers.blockHelperMissing"),
                b = [this.contextName(0)];
            this.setupHelperArgs("", 0, b, !0), this.flushInline();
            var c = this.topStack();
            b.splice(1, 0, c), this.pushSource(["if (!", this.lastHelper, ") { ", c, " = ", this.source.functionCall(a, "call", b), "}"]);
          },
          appendContent: function appendContent(a) {
            this.pendingContent ? a = this.pendingContent + a : this.pendingLocation = this.source.currentLocation, this.pendingContent = a;
          },
          append: function append() {
            if (this.isInline()) this.replaceStack(function (a) {
              return [" != null ? ", a, ' : ""'];
            }), this.pushSource(this.appendToBuffer(this.popStack()));else {
              var a = this.popStack();
              this.pushSource(["if (", a, " != null) { ", this.appendToBuffer(a, void 0, !0), " }"]), this.environment.isSimple && this.pushSource(["else { ", this.appendToBuffer("''", void 0, !0), " }"]);
            }
          },
          appendEscaped: function appendEscaped() {
            this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"), "(", this.popStack(), ")"]));
          },
          getContext: function getContext(a) {
            this.lastContext = a;
          },
          pushContext: function pushContext() {
            this.pushStackLiteral(this.contextName(this.lastContext));
          },
          lookupOnContext: function lookupOnContext(a, b, c, d) {
            var e = 0;
            d || !this.options.compat || this.lastContext ? this.pushContext() : this.push(this.depthedLookup(a[e++])), this.resolvePath("context", a, e, b, c);
          },
          lookupBlockParam: function lookupBlockParam(a, b) {
            this.useBlockParams = !0, this.push(["blockParams[", a[0], "][", a[1], "]"]), this.resolvePath("context", b, 1);
          },
          lookupData: function lookupData(a, b, c) {
            a ? this.pushStackLiteral("container.data(data, " + a + ")") : this.pushStackLiteral("data"), this.resolvePath("data", b, 0, !0, c);
          },
          resolvePath: function resolvePath(a, b, c, d, e) {
            var g = this;
            if (this.options.strict || this.options.assumeObjects) return void this.push(f(this.options.strict && e, this, b, a));

            for (var h = b.length; c < h; c++) {
              this.replaceStack(function (e) {
                var f = g.nameLookup(e, b[c], a);
                return d ? [" && ", f] : [" != null ? ", f, " : ", e];
              });
            }
          },
          resolvePossibleLambda: function resolvePossibleLambda() {
            this.push([this.aliasable("container.lambda"), "(", this.popStack(), ", ", this.contextName(0), ")"]);
          },
          pushStringParam: function pushStringParam(a, b) {
            this.pushContext(), this.pushString(b), "SubExpression" !== b && ("string" == typeof a ? this.pushString(a) : this.pushStackLiteral(a));
          },
          emptyHash: function emptyHash(a) {
            this.trackIds && this.push("{}"), this.stringParams && (this.push("{}"), this.push("{}")), this.pushStackLiteral(a ? "undefined" : "{}");
          },
          pushHash: function pushHash() {
            this.hash && this.hashes.push(this.hash), this.hash = {
              values: [],
              types: [],
              contexts: [],
              ids: []
            };
          },
          popHash: function popHash() {
            var a = this.hash;
            this.hash = this.hashes.pop(), this.trackIds && this.push(this.objectLiteral(a.ids)), this.stringParams && (this.push(this.objectLiteral(a.contexts)), this.push(this.objectLiteral(a.types))), this.push(this.objectLiteral(a.values));
          },
          pushString: function pushString(a) {
            this.pushStackLiteral(this.quotedString(a));
          },
          pushLiteral: function pushLiteral(a) {
            this.pushStackLiteral(a);
          },
          pushProgram: function pushProgram(a) {
            null != a ? this.pushStackLiteral(this.programExpression(a)) : this.pushStackLiteral(null);
          },
          registerDecorator: function registerDecorator(a, b) {
            var c = this.nameLookup("decorators", b, "decorator"),
                d = this.setupHelperArgs(b, a);
            this.decorators.push(["fn = ", this.decorators.functionCall(c, "", ["fn", "props", "container", d]), " || fn;"]);
          },
          invokeHelper: function invokeHelper(a, b, c) {
            var d = this.popStack(),
                e = this.setupHelper(a, b),
                f = c ? [e.name, " || "] : "",
                g = ["("].concat(f, d);
            this.options.strict || g.push(" || ", this.aliasable("helpers.helperMissing")), g.push(")"), this.push(this.source.functionCall(g, "call", e.callParams));
          },
          invokeKnownHelper: function invokeKnownHelper(a, b) {
            var c = this.setupHelper(a, b);
            this.push(this.source.functionCall(c.name, "call", c.callParams));
          },
          invokeAmbiguous: function invokeAmbiguous(a, b) {
            this.useRegister("helper");
            var c = this.popStack();
            this.emptyHash();
            var d = this.setupHelper(0, a, b),
                e = this.lastHelper = this.nameLookup("helpers", a, "helper"),
                f = ["(", "(helper = ", e, " || ", c, ")"];
            this.options.strict || (f[0] = "(helper = ", f.push(" != null ? helper : ", this.aliasable("helpers.helperMissing"))), this.push(["(", f, d.paramsInit ? ["),(", d.paramsInit] : [], "),", "(typeof helper === ", this.aliasable('"function"'), " ? ", this.source.functionCall("helper", "call", d.callParams), " : helper))"]);
          },
          invokePartial: function invokePartial(a, b, c) {
            var d = [],
                e = this.setupParams(b, 1, d);
            a && (b = this.popStack(), delete e.name), c && (e.indent = JSON.stringify(c)), e.helpers = "helpers", e.partials = "partials", e.decorators = "container.decorators", a ? d.unshift(b) : d.unshift(this.nameLookup("partials", b, "partial")), this.options.compat && (e.depths = "depths"), e = this.objectLiteral(e), d.push(e), this.push(this.source.functionCall("container.invokePartial", "", d));
          },
          assignToHash: function assignToHash(a) {
            var b = this.popStack(),
                c = void 0,
                d = void 0,
                e = void 0;
            this.trackIds && (e = this.popStack()), this.stringParams && (d = this.popStack(), c = this.popStack());
            var f = this.hash;
            c && (f.contexts[a] = c), d && (f.types[a] = d), e && (f.ids[a] = e), f.values[a] = b;
          },
          pushId: function pushId(a, b, c) {
            "BlockParam" === a ? this.pushStackLiteral("blockParams[" + b[0] + "].path[" + b[1] + "]" + (c ? " + " + JSON.stringify("." + c) : "")) : "PathExpression" === a ? this.pushString(b) : "SubExpression" === a ? this.pushStackLiteral("true") : this.pushStackLiteral("null");
          },
          compiler: e,
          compileChildren: function compileChildren(a, b) {
            for (var c = a.children, d = void 0, e = void 0, f = 0, g = c.length; f < g; f++) {
              d = c[f], e = new this.compiler();
              var h = this.matchExistingProgram(d);

              if (null == h) {
                this.context.programs.push("");
                var i = this.context.programs.length;
                d.index = i, d.name = "program" + i, this.context.programs[i] = e.compile(d, b, this.context, !this.precompile), this.context.decorators[i] = e.decorators, this.context.environments[i] = d, this.useDepths = this.useDepths || e.useDepths, this.useBlockParams = this.useBlockParams || e.useBlockParams, d.useDepths = this.useDepths, d.useBlockParams = this.useBlockParams;
              } else d.index = h.index, d.name = "program" + h.index, this.useDepths = this.useDepths || h.useDepths, this.useBlockParams = this.useBlockParams || h.useBlockParams;
            }
          },
          matchExistingProgram: function matchExistingProgram(a) {
            for (var b = 0, c = this.context.environments.length; b < c; b++) {
              var d = this.context.environments[b];
              if (d && d.equals(a)) return d;
            }
          },
          programExpression: function programExpression(a) {
            var b = this.environment.children[a],
                c = [b.index, "data", b.blockParams];
            return (this.useBlockParams || this.useDepths) && c.push("blockParams"), this.useDepths && c.push("depths"), "container.program(" + c.join(", ") + ")";
          },
          useRegister: function useRegister(a) {
            this.registers[a] || (this.registers[a] = !0, this.registers.list.push(a));
          },
          push: function push(a) {
            return a instanceof d || (a = this.source.wrap(a)), this.inlineStack.push(a), a;
          },
          pushStackLiteral: function pushStackLiteral(a) {
            this.push(new d(a));
          },
          pushSource: function pushSource(a) {
            this.pendingContent && (this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation)), this.pendingContent = void 0), a && this.source.push(a);
          },
          replaceStack: function replaceStack(a) {
            var b = ["("],
                c = void 0,
                e = void 0,
                f = void 0;
            if (!this.isInline()) throw new j["default"]("replaceStack on non-inline");
            var g = this.popStack(!0);
            if (g instanceof d) c = [g.value], b = ["(", c], f = !0;else {
              e = !0;
              var h = this.incrStack();
              b = ["((", this.push(h), " = ", g, ")"], c = this.topStack();
            }
            var i = a.call(this, c);
            f || this.popStack(), e && this.stackSlot--, this.push(b.concat(i, ")"));
          },
          incrStack: function incrStack() {
            return this.stackSlot++, this.stackSlot > this.stackVars.length && this.stackVars.push("stack" + this.stackSlot), this.topStackName();
          },
          topStackName: function topStackName() {
            return "stack" + this.stackSlot;
          },
          flushInline: function flushInline() {
            var a = this.inlineStack;
            this.inlineStack = [];

            for (var b = 0, c = a.length; b < c; b++) {
              var e = a[b];
              if (e instanceof d) this.compileStack.push(e);else {
                var f = this.incrStack();
                this.pushSource([f, " = ", e, ";"]), this.compileStack.push(f);
              }
            }
          },
          isInline: function isInline() {
            return this.inlineStack.length;
          },
          popStack: function popStack(a) {
            var b = this.isInline(),
                c = (b ? this.inlineStack : this.compileStack).pop();
            if (!a && c instanceof d) return c.value;

            if (!b) {
              if (!this.stackSlot) throw new j["default"]("Invalid stack pop");
              this.stackSlot--;
            }

            return c;
          },
          topStack: function topStack() {
            var a = this.isInline() ? this.inlineStack : this.compileStack,
                b = a[a.length - 1];
            return b instanceof d ? b.value : b;
          },
          contextName: function contextName(a) {
            return this.useDepths && a ? "depths[" + a + "]" : "depth" + a;
          },
          quotedString: function quotedString(a) {
            return this.source.quotedString(a);
          },
          objectLiteral: function objectLiteral(a) {
            return this.source.objectLiteral(a);
          },
          aliasable: function aliasable(a) {
            var b = this.aliases[a];
            return b ? (b.referenceCount++, b) : (b = this.aliases[a] = this.source.wrap(a), b.aliasable = !0, b.referenceCount = 1, b);
          },
          setupHelper: function setupHelper(a, b, c) {
            var d = [],
                e = this.setupHelperArgs(b, a, d, c),
                f = this.nameLookup("helpers", b, "helper"),
                g = this.aliasable(this.contextName(0) + " != null ? " + this.contextName(0) + " : (container.nullContext || {})");
            return {
              params: d,
              paramsInit: e,
              name: f,
              callParams: [g].concat(d)
            };
          },
          setupParams: function setupParams(a, b, c) {
            var d = {},
                e = [],
                f = [],
                g = [],
                h = !c,
                i = void 0;
            h && (c = []), d.name = this.quotedString(a), d.hash = this.popStack(), this.trackIds && (d.hashIds = this.popStack()), this.stringParams && (d.hashTypes = this.popStack(), d.hashContexts = this.popStack());
            var j = this.popStack(),
                k = this.popStack();
            (k || j) && (d.fn = k || "container.noop", d.inverse = j || "container.noop");

            for (var l = b; l--;) {
              i = this.popStack(), c[l] = i, this.trackIds && (g[l] = this.popStack()), this.stringParams && (f[l] = this.popStack(), e[l] = this.popStack());
            }

            return h && (d.args = this.source.generateArray(c)), this.trackIds && (d.ids = this.source.generateArray(g)), this.stringParams && (d.types = this.source.generateArray(f), d.contexts = this.source.generateArray(e)), this.options.data && (d.data = "data"), this.useBlockParams && (d.blockParams = "blockParams"), d;
          },
          setupHelperArgs: function setupHelperArgs(a, b, c, d) {
            var e = this.setupParams(a, b, c);
            return e = this.objectLiteral(e), d ? (this.useRegister("options"), c.push("options"), ["options=", e]) : c ? (c.push(e), "") : e;
          }
        }, function () {
          for (var a = "break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "), b = e.RESERVED_WORDS = {}, c = 0, d = a.length; c < d; c++) {
            b[a[c]] = !0;
          }
        }(), e.isValidJavaScriptVariableName = function (a) {
          return !e.RESERVED_WORDS[a] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(a);
        }, b["default"] = e, a.exports = b["default"];
      }, function (a, b, c) {

        function d(a, b, c) {
          if (f.isArray(a)) {
            for (var d = [], e = 0, g = a.length; e < g; e++) {
              d.push(b.wrap(a[e], c));
            }

            return d;
          }

          return "boolean" == typeof a || "number" == typeof a ? a + "" : a;
        }

        function e(a) {
          this.srcFile = a, this.source = [];
        }

        b.__esModule = !0;
        var f = c(5),
            g = void 0;

        g || (g = function g(a, b, c, d) {
          this.src = "", d && this.add(d);
        }, g.prototype = {
          add: function add(a) {
            f.isArray(a) && (a = a.join("")), this.src += a;
          },
          prepend: function prepend(a) {
            f.isArray(a) && (a = a.join("")), this.src = a + this.src;
          },
          toStringWithSourceMap: function toStringWithSourceMap() {
            return {
              code: this.toString()
            };
          },
          toString: function toString() {
            return this.src;
          }
        }), e.prototype = {
          isEmpty: function isEmpty() {
            return !this.source.length;
          },
          prepend: function prepend(a, b) {
            this.source.unshift(this.wrap(a, b));
          },
          push: function push(a, b) {
            this.source.push(this.wrap(a, b));
          },
          merge: function merge() {
            var a = this.empty();
            return this.each(function (b) {
              a.add(["  ", b, "\n"]);
            }), a;
          },
          each: function each(a) {
            for (var b = 0, c = this.source.length; b < c; b++) {
              a(this.source[b]);
            }
          },
          empty: function empty() {
            var a = this.currentLocation || {
              start: {}
            };
            return new g(a.start.line, a.start.column, this.srcFile);
          },
          wrap: function wrap(a) {
            var b = arguments.length <= 1 || void 0 === arguments[1] ? this.currentLocation || {
              start: {}
            } : arguments[1];
            return a instanceof g ? a : (a = d(a, this, b), new g(b.start.line, b.start.column, this.srcFile, a));
          },
          functionCall: function functionCall(a, b, c) {
            return c = this.generateList(c), this.wrap([a, b ? "." + b + "(" : "(", c, ")"]);
          },
          quotedString: function quotedString(a) {
            return '"' + (a + "").replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\u2028/g, "\\u2028").replace(/\u2029/g, "\\u2029") + '"';
          },
          objectLiteral: function objectLiteral(a) {
            var b = [];

            for (var c in a) {
              if (a.hasOwnProperty(c)) {
                var e = d(a[c], this);
                "undefined" !== e && b.push([this.quotedString(c), ":", e]);
              }
            }

            var f = this.generateList(b);
            return f.prepend("{"), f.add("}"), f;
          },
          generateList: function generateList(a) {
            for (var b = this.empty(), c = 0, e = a.length; c < e; c++) {
              c && b.add(","), b.add(d(a[c], this));
            }

            return b;
          },
          generateArray: function generateArray(a) {
            var b = this.generateList(a);
            return b.prepend("["), b.add("]"), b;
          }
        }, b["default"] = e, a.exports = b["default"];
      }]);
    });
  });
  var Handlebars = unwrapExports(handlebars_min);
  var handlebars_min_1 = handlebars_min.Handlebars;

  /*!
   * word-wrap <https://github.com/jonschlinkert/word-wrap>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
  var wordWrap = function wordWrap(str, options) {
    options = options || {};

    if (str == null) {
      return str;
    }

    var width = options.width || 50;
    var indent = typeof options.indent === 'string' ? options.indent : '  ';
    var newline = options.newline || '\n' + indent;
    var escape = typeof options.escape === 'function' ? options.escape : identity;
    var regexString = '.{1,' + width + '}';

    if (options.cut !== true) {
      regexString += "([\\s\u200B]+|$)|[^\\s\u200B]+?([\\s\u200B]+|$)";
    }

    var re = new RegExp(regexString, 'g');
    var lines = str.match(re) || [];
    var result = indent + lines.map(function (line) {
      if (line.slice(-1) === '\n') {
        line = line.slice(0, line.length - 1);
      }

      return escape(line);
    }).join(newline);

    if (options.trim === true) {
      result = result.replace(/[ \t]*$/gm, '');
    }

    return result;
  };

  function identity(str) {
    return str;
  }

  /*!
   * strip-color <https://github.com/jonschlinkert/strip-color>
   *
   * Copyright (c) 2015, Jon Schlinkert.
   * Licensed under the MIT License.
   */

  var stripColor = function stripColor(str) {
    return str.replace(/\x1B[[(?);]{0,2}(;?\d)*./g, '');
  };

  /**
   * Slugify the given `str` with `options.`
   *
   * ```js
   * <%= slugify('This is a post title.') %>
   * //=> 'this-is-a-post-title'
   * ```
   *
   * @param  {String} `string` The string to slugify.
   * @return {String} Slug.
   * @api draft
   */


  var helperSlugify = function slugify(str, options) {
    if (!isString(str)) return '';
    str = getTitle(str);
    str = stripColor(str);
    str = str.toLowerCase();
    str = str.split(/ /).join('-');
    str = str.split(/\t/).join('--');
    str = str.split(/[|$&`~=\\\/@+*!?({[\]})<>=.,;:'"^]/).join('');
    return str;
  };
  /**
   * Return true if `str` is a non-empty string.
   */


  function isString(str) {
    return str && typeof str === 'string';
  }
  /**
   * Get the "title" from a markdown link
   */


  function getTitle(str) {
    if (/^\[[^\]]+\]\(/.test(str)) {
      var m = /^\[([^\]]+)\]/.exec(str);
      if (m) return m[1];
    }

    return str;
  }

  /*!
   * repeat-string <https://github.com/jonschlinkert/repeat-string>
   *
   * Copyright (c) 2014-2015, Jon Schlinkert.
   * Licensed under the MIT License.
   */
  /**
   * Results cache
   */

  var res = '';
  var cache;
  /**
   * Expose `repeat`
   */

  var repeatString = repeat;
  /**
   * Repeat the given `string` the specified `number`
   * of times.
   *
   * **Example:**
   *
   * ```js
   * var repeat = require('repeat-string');
   * repeat('A', 5);
   * //=> AAAAA
   * ```
   *
   * @param {String} `string` The string to repeat
   * @param {Number} `number` The number of times to repeat the string
   * @return {String} Repeated string
   * @api public
   */

  function repeat(str, num) {
    if (typeof str !== 'string') {
      throw new TypeError('expected a string');
    } // cover common, quick use cases


    if (num === 1) return str;
    if (num === 2) return str + str;
    var max = str.length * num;

    if (cache !== str || typeof cache === 'undefined') {
      cache = str;
      res = '';
    } else if (res.length >= max) {
      return res.substr(0, max);
    }

    while (max > res.length && num > 1) {
      if (num & 1) {
        res += str;
      }

      num >>= 1;
      str += str;
    }

    res += str;
    res = res.substr(0, max);
    return res;
  }

  var toString = Object.prototype.toString;
  /**
   * Get the native `typeof` a value.
   *
   * @param  {*} `val`
   * @return {*} Native javascript type
   */

  var kindOf = function kindOf(val) {
    var type = _typeof(val); // primitivies


    if (type === 'undefined') {
      return 'undefined';
    }

    if (val === null) {
      return 'null';
    }

    if (val === true || val === false || val instanceof Boolean) {
      return 'boolean';
    }

    if (type === 'string' || val instanceof String) {
      return 'string';
    }

    if (type === 'number' || val instanceof Number) {
      return 'number';
    } // functions


    if (type === 'function' || val instanceof Function) {
      if (typeof val.constructor.name !== 'undefined' && val.constructor.name.slice(0, 9) === 'Generator') {
        return 'generatorfunction';
      }

      return 'function';
    } // array


    if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {
      return 'array';
    } // check for instances of RegExp and Date before calling `toString`


    if (val instanceof RegExp) {
      return 'regexp';
    }

    if (val instanceof Date) {
      return 'date';
    } // other objects


    type = toString.call(val);

    if (type === '[object RegExp]') {
      return 'regexp';
    }

    if (type === '[object Date]') {
      return 'date';
    }

    if (type === '[object Arguments]') {
      return 'arguments';
    }

    if (type === '[object Error]') {
      return 'error';
    }

    if (type === '[object Promise]') {
      return 'promise';
    } // buffer


    if (isBuffer(val)) {
      return 'buffer';
    } // es6: Map, WeakMap, Set, WeakSet


    if (type === '[object Set]') {
      return 'set';
    }

    if (type === '[object WeakSet]') {
      return 'weakset';
    }

    if (type === '[object Map]') {
      return 'map';
    }

    if (type === '[object WeakMap]') {
      return 'weakmap';
    }

    if (type === '[object Symbol]') {
      return 'symbol';
    }

    if (type === '[object Map Iterator]') {
      return 'mapiterator';
    }

    if (type === '[object Set Iterator]') {
      return 'setiterator';
    }

    if (type === '[object String Iterator]') {
      return 'stringiterator';
    }

    if (type === '[object Array Iterator]') {
      return 'arrayiterator';
    } // typed arrays


    if (type === '[object Int8Array]') {
      return 'int8array';
    }

    if (type === '[object Uint8Array]') {
      return 'uint8array';
    }

    if (type === '[object Uint8ClampedArray]') {
      return 'uint8clampedarray';
    }

    if (type === '[object Int16Array]') {
      return 'int16array';
    }

    if (type === '[object Uint16Array]') {
      return 'uint16array';
    }

    if (type === '[object Int32Array]') {
      return 'int32array';
    }

    if (type === '[object Uint32Array]') {
      return 'uint32array';
    }

    if (type === '[object Float32Array]') {
      return 'float32array';
    }

    if (type === '[object Float64Array]') {
      return 'float64array';
    } // must be a plain object


    return 'object';
  };
  /**
   * If you need to support Safari 5-7 (8-10 yr-old browser),
   * take a look at https://github.com/feross/is-buffer
   */


  function isBuffer(val) {
    return val.constructor && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
  }

  /*!
   * longest <https://github.com/jonschlinkert/longest>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  var longest = function longest(arr) {
    if (!Array.isArray(arr)) {
      throw new TypeError('expected an array');
    }

    var len = arr.length;

    if (len === 0) {
      return undefined;
    }

    var val = arr[0];

    if (typeof val === 'number') {
      val = String(val);
    }

    var longest = val.length;
    var idx = 0;

    while (++idx < len) {
      var ele = arr[idx];

      if (ele == null) {
        continue;
      }

      if (typeof ele === 'number') {
        ele = String(ele);
      }

      var elen = ele.length;

      if (typeof elen !== 'number') {
        continue;
      }

      if (elen > longest) {
        longest = elen;
        val = ele;
      }
    }

    return val;
  };

  var alignText = function alignText(val, fn) {
    var originalType = kindOf(val);
    var lines = val;

    if (originalType === 'string') {
      lines = val.split(/(?:\r\n|\n)/);
    } else if (originalType !== 'array') {
      throw new TypeError('align-text expects a string or array.');
    }

    var fnType = kindOf(fn);
    var max = longest(lines);
    var len = lines.length;
    var idx = -1;
    var res = [];

    while (++idx < len) {
      var line = String(lines[idx]);
      var diff;

      if (fnType === 'function') {
        diff = fn(line.length, max.length, line, lines, idx);
      } else if (fnType === 'number') {
        diff = fn;
      } else {
        diff = max.length - line.length;
      }

      if (kindOf(diff) === 'number') {
        res.push(repeatString(' ', diff) + line);
      } else if (kindOf(diff) === 'object') {
        var result = repeatString(diff.character || ' ', diff.indent || 0);
        res.push((diff.prefix || '') + result + line);
      }
    }

    if (originalType === 'array') return res;
    return res.join('\n');
  };

  var centerAlign = function centerAlign(val, width) {
    if (typeof width === 'number' && typeof val === 'string' && !/\n/.test(val)) {
      var padding = Math.floor((width - val.length) / 2);
      return repeatString(' ', padding) + val + repeatString(' ', padding);
    }

    return alignText(val, function (len, longest) {
      if (typeof width === 'number') {
        return Math.floor((width - len) / 2);
      }

      return Math.floor((longest - len) / 2);
    });
  };

  /*!
   * Determine if an object is a Buffer
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  // The _isBuffer check is for Safari 5-7 support, because it's missing
  // Object.prototype.constructor. Remove this eventually
  var isBuffer_1 = function isBuffer_1(obj) {
    return obj != null && (isBuffer$1(obj) || isSlowBuffer(obj) || !!obj._isBuffer);
  };

  function isBuffer$1(obj) {
    return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);
  } // For Node v0.10 support. Remove this eventually.


  function isSlowBuffer(obj) {
    return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer$1(obj.slice(0, 0));
  }

  var toString$1 = Object.prototype.toString;
  /**
   * Get the native `typeof` a value.
   *
   * @param  {*} `val`
   * @return {*} Native javascript type
   */

  var kindOf$1 = function kindOf(val) {
    // primitivies
    if (typeof val === 'undefined') {
      return 'undefined';
    }

    if (val === null) {
      return 'null';
    }

    if (val === true || val === false || val instanceof Boolean) {
      return 'boolean';
    }

    if (typeof val === 'string' || val instanceof String) {
      return 'string';
    }

    if (typeof val === 'number' || val instanceof Number) {
      return 'number';
    } // functions


    if (typeof val === 'function' || val instanceof Function) {
      return 'function';
    } // array


    if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {
      return 'array';
    } // check for instances of RegExp and Date before calling `toString`


    if (val instanceof RegExp) {
      return 'regexp';
    }

    if (val instanceof Date) {
      return 'date';
    } // other objects


    var type = toString$1.call(val);

    if (type === '[object RegExp]') {
      return 'regexp';
    }

    if (type === '[object Date]') {
      return 'date';
    }

    if (type === '[object Arguments]') {
      return 'arguments';
    }

    if (type === '[object Error]') {
      return 'error';
    } // buffer


    if (isBuffer_1(val)) {
      return 'buffer';
    } // es6: Map, WeakMap, Set, WeakSet


    if (type === '[object Set]') {
      return 'set';
    }

    if (type === '[object WeakSet]') {
      return 'weakset';
    }

    if (type === '[object Map]') {
      return 'map';
    }

    if (type === '[object WeakMap]') {
      return 'weakmap';
    }

    if (type === '[object Symbol]') {
      return 'symbol';
    } // typed arrays


    if (type === '[object Int8Array]') {
      return 'int8array';
    }

    if (type === '[object Uint8Array]') {
      return 'uint8array';
    }

    if (type === '[object Uint8ClampedArray]') {
      return 'uint8clampedarray';
    }

    if (type === '[object Int16Array]') {
      return 'int16array';
    }

    if (type === '[object Uint16Array]') {
      return 'uint16array';
    }

    if (type === '[object Int32Array]') {
      return 'int32array';
    }

    if (type === '[object Uint32Array]') {
      return 'uint32array';
    }

    if (type === '[object Float32Array]') {
      return 'float32array';
    }

    if (type === '[object Float64Array]') {
      return 'float64array';
    } // must be a plain object


    return 'object';
  };

  /*!
   * longest <https://github.com/jonschlinkert/longest>
   *
   * Copyright (c) 2014-2015, Jon Schlinkert.
   * Licensed under the MIT License.
   */

  var longest$1 = function longest(arr) {
    if (!arr) {
      return null;
    }

    var len = arr.length;

    if (!len) {
      return null;
    }

    var c = 0;
    var i = 0;
    var ele;
    var elen;
    var res;

    for (; i < len; i++) {
      ele = arr[i].toString();
      elen = ele.length;

      if (elen > c) {
        res = ele;
        c = elen;
      }
    }

    return res;
  };

  var alignText$1 = function alignText(val, fn) {
    var lines,
        type = kindOf$1(val);

    if (type === 'array') {
      lines = val;
    } else if (type === 'string') {
      lines = val.split(/(?:\r\n|\n)/);
    } else {
      throw new TypeError('align-text expects a string or array.');
    }

    var fnType = kindOf$1(fn);
    var len = lines.length;
    var max = longest$1(lines);
    var res = [],
        i = 0;

    while (len--) {
      var line = String(lines[i++]);
      var diff;

      if (fnType === 'function') {
        diff = fn(line.length, max.length, line, lines, i);
      } else if (fnType === 'number') {
        diff = fn;
      } else {
        diff = max.length - line.length;
      }

      if (kindOf$1(diff) === 'number') {
        res.push(repeatString(' ', diff) + line);
      } else if (kindOf$1(diff) === 'object') {
        var result = repeatString(diff.character || ' ', diff.indent || 0);
        res.push((diff.prefix || '') + result + line);
      }
    }

    if (type === 'array') return res;
    return res.join('\n');
  };

  var rightAlign = function rightAlign(val) {
    return alignText$1(val, function (len, longest) {
      return longest - len;
    });
  };

  var articles = ['the', 'a', 'an', 'some'];

  var prepositions = ['a', 'abaft', 'aboard', 'about', 'above', 'absent', 'across', 'afore', 'after', 'against', 'along', 'alongside', 'amid', 'amidst', 'among', 'amongst', 'an', 'apropos', 'apud', 'around', 'as', 'aside', 'astride', 'at', 'athwart', 'atop', 'barring', 'before', 'behind', 'below', 'beneath', 'beside', 'besides', 'between', 'beyond', 'but', 'by', 'circa', 'concerning', 'despite', 'down', 'during', 'except', 'excluding', 'failing', 'following', 'for', 'forenenst', 'from', 'given', 'in', 'including', 'inside', 'into', 'like', 'mid', 'midst', 'minus', 'modulo', 'near', 'next', 'notwithstanding', 'o\'', 'of', 'off', 'on', 'onto', 'opposite', 'out', 'outside', 'over', 'pace', 'past', 'per', 'plus', 'pro', 'qua', 'regarding', 'round', 'sans', 'save', 'since', 'than', 'through', 'throughout', 'thru', 'thruout', 'till', 'times', 'to', 'toward', 'towards', 'under', 'underneath', 'unlike', 'until', 'unto', 'up', 'upon', 'versus', 'via', 'vice', 'vis-à-vis', 'with', 'within', 'without', 'worth'];

  var conjunctions = ['as', 'because', 'for', 'and', 'nor', 'but', 'or', 'yet', 'so'];

  var toTitleCase = createCommonjsModule(function (module) {
    /*
     * To Title Case 2.1 – http://individed.com/code/to-title-case/
     * Copyright © 2008–2013 David Gouch. Licensed under the MIT License.
     *
     * modifications by @rvagg Apr-2014
     */
    //String.prototype.toTitleCase = function(){
    var smallWords = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;

    module.exports = function toTitleCase(str) {
      return titleCase(str, smallWords);
    };

    module.exports.toTitleCase = module.exports;
    var laxWords = articles.concat(prepositions).concat(conjunctions).concat(smallWords.source.replace(/(^\^\(|\)\$$)/g, '').split('|')).concat(['is']) // a personal preference
    ,
        laxWordsRe = new RegExp('^(' + laxWords.join('|') + ')$', 'i');

    module.exports.toLaxTitleCase = function toLaxTitleCase(str) {
      return titleCase(str, laxWordsRe);
    };

    function titleCase(str, smallWords) {
      if (!str) return str;
      return str.replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, function (match, index, title) {
        if (index > 0 && index + match.length !== title.length && match.search(smallWords) > -1 && title.charAt(index - 2) !== ':' && (title.charAt(index + match.length) !== '-' || title.charAt(index - 1) === '-') && title.charAt(index - 1).search(/[^\s-]/) < 0) {
          return match.toLowerCase();
        }

        if (match.substr(1).search(/[A-Z]|\../) > -1) {
          return match;
        }

        return match.charAt(0).toUpperCase() + match.substr(1);
      });
    }
  });
  var toTitleCase_1 = toTitleCase.toTitleCase;
  var toTitleCase_2 = toTitleCase.toLaxTitleCase;

  var toString$2 = Object.prototype.toString;

  var kindOf$2 = function kindOf(val) {
    if (val === void 0) return 'undefined';
    if (val === null) return 'null';

    var type = _typeof(val);

    if (type === 'boolean') return 'boolean';
    if (type === 'string') return 'string';
    if (type === 'number') return 'number';
    if (type === 'symbol') return 'symbol';

    if (type === 'function') {
      return isGeneratorFn(val) ? 'generatorfunction' : 'function';
    }

    if (isArray(val)) return 'array';
    if (isBuffer$2(val)) return 'buffer';
    if (isArguments(val)) return 'arguments';
    if (isDate(val)) return 'date';
    if (isError(val)) return 'error';
    if (isRegexp(val)) return 'regexp';

    switch (ctorName(val)) {
      case 'Symbol':
        return 'symbol';

      case 'Promise':
        return 'promise';
      // Set, Map, WeakSet, WeakMap

      case 'WeakMap':
        return 'weakmap';

      case 'WeakSet':
        return 'weakset';

      case 'Map':
        return 'map';

      case 'Set':
        return 'set';
      // 8-bit typed arrays

      case 'Int8Array':
        return 'int8array';

      case 'Uint8Array':
        return 'uint8array';

      case 'Uint8ClampedArray':
        return 'uint8clampedarray';
      // 16-bit typed arrays

      case 'Int16Array':
        return 'int16array';

      case 'Uint16Array':
        return 'uint16array';
      // 32-bit typed arrays

      case 'Int32Array':
        return 'int32array';

      case 'Uint32Array':
        return 'uint32array';

      case 'Float32Array':
        return 'float32array';

      case 'Float64Array':
        return 'float64array';
    }

    if (isGeneratorObj(val)) {
      return 'generator';
    } // Non-plain objects


    type = toString$2.call(val);

    switch (type) {
      case '[object Object]':
        return 'object';
      // iterators

      case '[object Map Iterator]':
        return 'mapiterator';

      case '[object Set Iterator]':
        return 'setiterator';

      case '[object String Iterator]':
        return 'stringiterator';

      case '[object Array Iterator]':
        return 'arrayiterator';
    } // other


    return type.slice(8, -1).toLowerCase().replace(/\s/g, '');
  };

  function ctorName(val) {
    return val.constructor ? val.constructor.name : null;
  }

  function isArray(val) {
    if (Array.isArray) return Array.isArray(val);
    return val instanceof Array;
  }

  function isError(val) {
    return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';
  }

  function isDate(val) {
    if (val instanceof Date) return true;
    return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';
  }

  function isRegexp(val) {
    if (val instanceof RegExp) return true;
    return typeof val.flags === 'string' && typeof val.ignoreCase === 'boolean' && typeof val.multiline === 'boolean' && typeof val.global === 'boolean';
  }

  function isGeneratorFn(name, val) {
    return ctorName(name) === 'GeneratorFunction';
  }

  function isGeneratorObj(val) {
    return typeof val["throw"] === 'function' && typeof val["return"] === 'function' && typeof val.next === 'function';
  }

  function isArguments(val) {
    try {
      if (typeof val.length === 'number' && typeof val.callee === 'function') {
        return true;
      }
    } catch (err) {
      if (err.message.indexOf('callee') !== -1) {
        return true;
      }
    }

    return false;
  }
  /**
   * If you need to support Safari 5-7 (8-10 yr-old browser),
   * take a look at https://github.com/feross/is-buffer
   */


  function isBuffer$2(val) {
    if (val.constructor && typeof val.constructor.isBuffer === 'function') {
      return val.constructor.isBuffer(val);
    }

    return false;
  }

  var utils = createCommonjsModule(function (module, exports) {

    exports.isEmpty = function (val) {
      if (typeof val === 'function') {
        return false;
      }

      if (exports.isObject(val)) {
        val = Object.keys(val);
      }

      if (Array.isArray(val)) {
        return val.length === 0;
      }

      if (typeof val === 'undefined') {
        return true;
      }

      if (val === 0) {
        return false;
      }

      if (val == null) {
        return true;
      }
    };

    exports.omit = function (obj) {
      var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var res = {};

      for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {
        var key = _Object$keys[_i];

        if (!keys.includes(key)) {
          res[key] = obj[key];
        }
      }

      return res;
    };
    /**
     * Get the "title" from a markdown link
     */


    exports.getTitle = function (str) {
      if (/^\[[^\]]+\]\(/.test(str)) {
        var m = /^\[([^\]]+)\]/.exec(str);
        if (m) return m[1];
      }

      return str;
    };

    exports.isString = function (str) {
      return str !== '' && typeof str === 'string';
    };

    exports.isNumber = function (num) {
      if (typeof num === 'number') {
        return num - num === 0;
      }

      if (typeof num === 'string' && num.trim() !== '') {
        return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);
      }

      return false;
    };

    exports.isObject = function (val) {
      return kindOf$2(val) === 'object';
    };

    exports.isPlainObject = function (val) {
      return exports.isObject(val) && val.constructor === Object;
    };
    /**
     * Returns true if the given `val` is an object.
     *
     * ```js
     * utils.isObject('foo');
     * //=> false
     *
     * utils.isObject({});
     * //=> true
     * ```
     * @param {any} `val`
     * @return {Boolean}
     * @api public
     */


    exports.isObject = function (val) {
      return kindOf$2(val) === 'object';
    };
    /**
     * Stringify HTML tag attributes from the given `object`.
     *
     * @param {Object} `object` Object of attributes as key-value pairs.
     * @return {String} Stringified attributes, e.g. `foo="bar"`
     * @api public
     */


    exports.toAttributes = function (obj) {
      return Object.keys(obj).map(function (key) {
        return "".concat(key, "=\"").concat(obj[key], "\"");
      }).join(' ');
    };

    exports.toCodeBlock = function (str, lang) {
      if (typeof str !== 'string') {
        throw new TypeError('expected a string.');
      }

      var code = '';
      code += '```' + (typeof lang === 'string' ? lang : '');
      code += '\n';
      code += str;
      code += '\n';
      code += '```';
      return code;
    };
    /**
     * Generate a random number
     *
     * @param  {Number} `min`
     * @param  {Number} `max`
     * @return {Number}
     */


    exports.random = function (min, max) {
      return min + Math.floor(Math.random() * (max - min + 1));
    };

    exports.flatten = function (arr) {
      var flat = function flat(a, res) {
        var len = a.length;
        var i = -1;

        while (len--) {
          var cur = a[++i];

          if (Array.isArray(cur)) {
            flat(cur, res);
          } else {
            res.push(cur);
          }
        }

        return res;
      };

      return flat(arr, []);
    };

    exports.union = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _toConsumableArray(new Set(exports.flatten(args)));
    };
    /**
     * Expose `exports` modules
     */


    module.exports = exports;
  });
  var utils_1 = utils.isEmpty;
  var utils_2 = utils.omit;
  var utils_3 = utils.getTitle;
  var utils_4 = utils.isString;
  var utils_5 = utils.isNumber;
  var utils_6 = utils.isObject;
  var utils_7 = utils.isPlainObject;
  var utils_8 = utils.toAttributes;
  var utils_9 = utils.toCodeBlock;
  var utils_10 = utils.random;
  var utils_11 = utils.flatten;
  var utils_12 = utils.union;

  var string = createCommonjsModule(function (module, exports) {

    var isString = utils.isString;

    var chopRe = function chopRe() {
      return /^[-_.\W\s]+|[-_.\W\s]+$/g;
    };

    var nonWordRe = function nonWordRe() {
      return /[-_.\W\s]+(\w|$)/g;
    };
    /**
     * camelCase the characters in `string`.
     *
     * ```js
     * <%= camelcase("foo bar baz") %>
     * //=> 'fooBarBaz'
     * ```
     * @param  {String} `string` The string to camelcase.
     * @return {String}
     * @api public
     */


    exports.camelcase = function (input) {
      if (!isString(input)) return '';

      if (input.length === 1) {
        return input.toLowerCase();
      }

      var str = exports.chop(input).toLowerCase();
      return str.replace(nonWordRe(), function (_, ch) {
        return ch.toUpperCase();
      });
    };
    /**
     * Center align the characters in a string using
     * non-breaking spaces.
     *
     * ```js
     * <%= centerAlign("abc") %>
     * ```
     * @param  {String} `str` The string to reverse.
     * @return {String} Centered string.
     * @related rightAlign
     * @api public
     */


    exports.centerAlign = function (str) {
      return isString(str) ? centerAlign(str, '&nbsp;') : '';
    };
    /**
     * Like trim, but removes both extraneous whitespace and
     * non-word characters from the beginning and end of a string.
     *
     * ```js
     * <%= chop("_ABC_") %>
     * //=> 'ABC'
     *
     * <%= chop("-ABC-") %>
     * //=> 'ABC'
     *
     * <%= chop(" ABC ") %>
     * //=> 'ABC'
     * ```
     * @param  {String} `string` The string to chop.
     * @return {String}
     * @api public
     */


    exports.chop = function (str) {
      if (!isString(str)) return '';
      return str.trim().replace(chopRe(), '');
    };
    /**
     * Count the number of occurrances of a substring
     * within a string.
     *
     * ```js
     * <%= count("abcabcabc", "a") %>
     * //=> '3'
     * ```
     * @param  {String} `string`
     * @param  {String} `substring`
     * @return {Number} The occurances of `substring` in `string`
     * @api public
     */


    exports.count = function (str, sub) {
      if (isString(str)) {
        return sub ? str.split(sub).length - 1 : '0';
      }

      return '';
    };
    /**
     * dot.case the characters in `string`.
     *
     * ```js
     * <%= dotcase("a-b-c d_e") %>
     * //=> 'a.b.c.d.e'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @api public
     */


    exports.dotcase = function (str) {
      if (!isString(str)) return '';
      if (str.length === 1) return str.toLowerCase();
      return exports.chop(str).replace(nonWordRe(), function (_, ch) {
        return '.' + ch;
      });
    };
    /**
     * Truncate a string to the specified `length`, and append
     * it with an elipsis, `…`.
     *
     * ```js
     * <%= ellipsis("<span>foo bar baz</span>", 7) %>
     * //=> 'foo bar…'
     * ```
     * @param  {String} `str`
     * @param  {Number} `length` The desired length of the returned string.
     * @param  {String} `ch` Optionally pass custom characters to append. Default is `…`.
     * @return {String} The truncated string.
     * @api public
     */


    exports.ellipsis = function (str, limit, ch) {
      return isString(str) ? exports.truncate(str, limit) + (ch || '…') : '';
    };
    /**
     * Returns true if the value is a string.
     *
     * ```js
     * <%= isString('abc') %>
     * //=> 'true'
     *
     * <%= isString(null) %>
     * //=> 'false'
     * ```
     * @param  {String} `val`
     * @return {Boolean} True if the value is a string.
     * @api public
     */


    exports.isString = isString;
    /**
     * Lowercase the characters in the given `string`.
     *
     * ```js
     * <%= lowercase("ABC") %>
     * //=> 'abc'
     * ```
     * @param  {String} `string` The string to lowercase.
     * @return {String}
     * @api public
     */

    exports.lowercase = exports.lower = function (str) {
      return isString(str) ? str.toLowerCase() : '';
    };
    /**
     * PascalCase the characters in `string`.
     *
     * ```js
     * <%= pascalcase("foo bar baz") %>
     * //=> 'FooBarBaz'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @api public
     */


    exports.pascalcase = function (input) {
      if (!isString(input)) return '';

      if (input.length === 1) {
        return input.toUpperCase();
      }

      var str = exports.camelcase(input);
      return str[0].toUpperCase() + str.slice(1);
    };
    /**
     * snake_case the characters in `string`.
     *
     * ```js
     * <%= snakecase("a-b-c d_e") %>
     * //=> 'a_b_c_d_e'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @api public
     */


    exports.snakecase = function (str) {
      if (!isString(str)) return '';
      if (str.length === 1) return str.toLowerCase();
      return exports.chop(str).replace(nonWordRe(), function (_, ch) {
        return '_' + ch;
      });
    };
    /**
     * Split `string` by the given `character`.
     *
     * ```js
     * <%= split("a,b,c", ",") %>
     * //=> ['a', 'b', 'c']
     * ```
     * @param  {String} `string` The string to split.
     * @return {String} `character` Default is `,`
     * @api public
     */


    exports.split = function (str, ch) {
      return isString(str) ? str.split(ch || ',') : '';
    };
    /**
     * Strip `substring` from the given `string`.
     *
     * ```js
     * <%= strip("foo-bar", "foo-") %>
     * //=> 'bar'
     * ```
     * @param  {String|RegExp} `substring` The string or regex pattern of the substring to remove.
     * @param  {String} `string` The target string.
     * @api public
     */


    exports.strip = function (val, str) {
      if (!isString(val) && !(val instanceof RegExp)) return '';
      if (!isString(str)) return '';
      return str.split(val).join('');
    };
    /**
     * Strip the indentation from a `string`.
     *
     * ```js
     * <%= stripIndent("  _ABC_") %>
     * //=> 'ABC'
     * ```
     * @param  {String} `string` The string to strip indentation from.
     * @return {String}
     * @api public
     */


    exports.stripIndent = function (str) {
      if (!isString(str)) return '';
      var matches = str.match(/^[ \t]+(?!\s)/gm);
      if (!matches) return str;
      var whitespace = matches.reverse().pop();
      var len = whitespace.length;

      if (len) {
        var re = new RegExp("^[ \\t]{".concat(len, "}"), 'gm');
        return str.replace(re, '');
      }

      return str;
    };
    /**
     * Trim extraneous whitespace from the beginning and end
     * of a string.
     *
     * ```js
     * <%= trim("  ABC   ") %>
     * //=> 'ABC'
     * ```
     * @param  {String} `string` The string to trim.
     * @return {String}
     * @api public
     */


    exports.trim = function (str) {
      return isString(str) ? str.trim() : '';
    };
    /**
     * dash-case the characters in `string`. This is similar to [slugify],
     * but [slugify] makes the string compatible to be used as a URL slug.
     *
     * ```js
     * <%= dashcase("a b.c d_e") %>
     * //=> 'a-b-c-d-e'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @tags dasherize, dashify, hyphenate, case
     * @api public
     */


    exports.dashcase = function (str) {
      if (!isString(str)) return '';
      if (str.length === 1) return str.toLowerCase();
      return exports.chop(str).replace(nonWordRe(), function (_, ch) {
        return '-' + ch;
      });
    };
    /**
     * path/case the characters in `string`.
     *
     * ```js
     * <%= pathcase("a-b-c d_e") %>
     * //=> 'a/b/c/d/e'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @api public
     */


    exports.pathcase = function (str) {
      if (!isString(str)) return '';

      if (str.length === 1) {
        return str.toLowerCase();
      }

      return exports.chop(str).replace(nonWordRe(), function (_, ch) {
        return '/' + ch;
      });
    };
    /**
     * Sentence-case the characters in `string`.
     *
     * ```js
     * <%= sentencecase("foo bar baz.") %>
     * //=> 'Foo bar baz.'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @api public
     */


    exports.sentencecase = function (str) {
      if (!isString(str)) return '';

      if (str.length === 1) {
        return str.toUpperCase();
      }

      return str.charAt(0).toUpperCase() + str.slice(1);
    };
    /**
     * Replace spaces in a string with hyphens. This
     *
     * ```js
     * <%= hyphenate("a b c") %>
     * //=> 'a-b-c'
     * ```
     * @param  {String} `string`
     * @return {String}
     * @api public
     */


    exports.hyphenate = function (str) {
      return isString(str) ? exports.chop(str).split(' ').join('-') : '';
    };
    /**
     * TODO: Need to use a proper slugifier for this.
     * I don't want to use `node-slug`, it's way too
     * huge for this.
     *
     * ```js
     * <%= slugify('This is a post title.') %>
     * //=> 'this-is-a-post-title'
     * ```
     * @param  {String} `string` The string to slugify.
     * @return {String} Slug.
     * @api draft
     */


    exports.slugify = helperSlugify;
    /**
     * Reverse the characters in a string.
     *
     * ```js
     * <%= reverse("abc") %>
     * //=> 'cba'
     * ```
     * @param  {String} `str` The string to reverse.
     * @return {String}
     * @api public
     */

    exports.reverse = function (str) {
      return isString(str) ? str.split('').reverse().join('') : '';
    };
    /**
     * Right align the characters in a string using
     * non-breaking spaces.
     *
     * ```js
     * <%= rightAlign(str) %>
     * ```
     * @param  {String} `str` The string to reverse.
     * @return {String} Right-aligned string.
     * @related centerAlign
     * @api public
     */


    exports.rightAlign = function (str) {
      return isString(str) ? rightAlign(str) : '';
    };
    /**
     * Replace occurrences of `a` with `b`.
     *
     * ```js
     * <%= replace("abcabc", /a/, "z") %>
     * //=> 'zbczbc'
     * ```
     * @param  {String} `str`
     * @param  {String|RegExp} `a` Can be a string or regexp.
     * @param  {String} `b`
     * @return {String}
     * @api public
     */


    exports.replace = function (str, a, b) {
      if (!isString(str)) return '';

      if (!a) {
        return str;
      }

      if (!b) {
        b = '';
      }

      return str.split(a).join(b);
    };
    /**
     * Truncate a string by removing all HTML tags and limiting the result
     * to the specified `length`.
     *
     * ```js
     * <%= titlecase("big deal") %>
     * //=> 'foo bar'
     * ```
     * @param  {String} `str`
     * @param  {Number} `length` The desired length of the returned string.
     * @return {String} The truncated string.
     * @api public
     */


    exports.titlecase = exports.titleize = function (str, length) {
      return isString(str) ? toTitleCase(str) : '';
    };
    /**
     * Truncate a string by removing all HTML tags and limiting the result
     * to the specified `length`.
     *
     * ```js
     * <%= truncate("<span>foo bar baz</span>", 7) %>
     * //=> 'foo bar'
     * ```
     * @param  {String} `str`
     * @param  {Number} `length` The desired length of the returned string.
     * @return {String} The truncated string.
     * @api public
     */


    exports.truncate = function (str, length) {
      return isString(str) ? str.substr(0, length) : '';
    };
    /**
     * Uppercase the characters in a string.
     *
     * ```js
     * <%= uppercase("abc") %>
     * //=> 'ABC'
     * ```
     * @param  {String} `string` The string to uppercase.
     * @return {String}
     * @api public
     */


    exports.uppercase = exports.upper = function (str) {
      return isString(str) ? str.toUpperCase() : '';
    };
    /**
     * Wrap words to a specified width using [word-wrap].
     *
     * ```js
     * <%= wordwrap("a b c d e f", {width: 5, newline: '<br>  '}) %>
     * //=> '  a b c <br>  d e f'
     * ```
     * @param  {String} `string` The string with words to wrap.
     * @param  {Options} `object` Options to pass to [word-wrap]
     * @return {String} Formatted string.
     * @api public
     */


    exports.wordwrap = function (str, options) {
      return isString(str) ? wordWrap(str, options) : '';
    };
  });
  var string_1 = string.camelcase;
  var string_2 = string.centerAlign;
  var string_3 = string.chop;
  var string_4 = string.count;
  var string_5 = string.dotcase;
  var string_6 = string.ellipsis;
  var string_7 = string.isString;
  var string_8 = string.lowercase;
  var string_9 = string.lower;
  var string_10 = string.pascalcase;
  var string_11 = string.snakecase;
  var string_12 = string.split;
  var string_13 = string.strip;
  var string_14 = string.stripIndent;
  var string_15 = string.trim;
  var string_16 = string.dashcase;
  var string_17 = string.pathcase;
  var string_18 = string.sentencecase;
  var string_19 = string.hyphenate;
  var string_20 = string.slugify;
  var string_21 = string.reverse;
  var string_22 = string.rightAlign;
  var string_23 = string.replace;
  var string_24 = string.titlecase;
  var string_25 = string.titleize;
  var string_26 = string.truncate;
  var string_27 = string.uppercase;
  var string_28 = string.upper;
  var string_29 = string.wordwrap;

  // Copyright Joyent, Inc. and other Node contributors.
  //
  // Permission is hereby granted, free of charge, to any person obtaining a
  // copy of this software and associated documentation files (the
  // "Software"), to deal in the Software without restriction, including
  // without limitation the rights to use, copy, modify, merge, publish,
  // distribute, sublicense, and/or sell copies of the Software, and to permit
  // persons to whom the Software is furnished to do so, subject to the
  // following conditions:
  //
  // The above copyright notice and this permission notice shall be included
  // in all copies or substantial portions of the Software.
  //
  // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
  // USE OR OTHER DEALINGS IN THE SOFTWARE.
  // resolves . and .. elements in a path array with directory names there
  // must be no slashes, empty elements, or device names (c:\) in the array
  // (so also no leading and trailing slashes - it does not distinguish
  // relative and absolute paths)
  function normalizeArray(parts, allowAboveRoot) {
    // if the path tries to go above the root, `up` ends up > 0
    var up = 0;

    for (var i = parts.length - 1; i >= 0; i--) {
      var last = parts[i];

      if (last === '.') {
        parts.splice(i, 1);
      } else if (last === '..') {
        parts.splice(i, 1);
        up++;
      } else if (up) {
        parts.splice(i, 1);
        up--;
      }
    } // if the path is allowed to go above the root, restore leading ..s


    if (allowAboveRoot) {
      for (; up--; up) {
        parts.unshift('..');
      }
    }

    return parts;
  } // Split a filename into [root, dir, basename, ext], unix version
  // 'root' is just a slash, or nothing.


  var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;

  var splitPath = function splitPath(filename) {
    return splitPathRe.exec(filename).slice(1);
  }; // path.resolve([from ...], to)
  // posix version


  function resolve() {
    var resolvedPath = '',
        resolvedAbsolute = false;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path = i >= 0 ? arguments[i] : '/'; // Skip empty and invalid entries

      if (typeof path !== 'string') {
        throw new TypeError('Arguments to path.resolve must be strings');
      } else if (!path) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charAt(0) === '/';
    } // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)
    // Normalize the path


    resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function (p) {
      return !!p;
    }), !resolvedAbsolute).join('/');
    return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';
  }
  // posix version

  function normalize(path) {
    var isPathAbsolute = isAbsolute(path),
        trailingSlash = substr(path, -1) === '/'; // Normalize the path

    path = normalizeArray(filter(path.split('/'), function (p) {
      return !!p;
    }), !isPathAbsolute).join('/');

    if (!path && !isPathAbsolute) {
      path = '.';
    }

    if (path && trailingSlash) {
      path += '/';
    }

    return (isPathAbsolute ? '/' : '') + path;
  }

  function isAbsolute(path) {
    return path.charAt(0) === '/';
  } // posix version

  function join() {
    var paths = Array.prototype.slice.call(arguments, 0);
    return normalize(filter(paths, function (p, index) {
      if (typeof p !== 'string') {
        throw new TypeError('Arguments to path.join must be strings');
      }

      return p;
    }).join('/'));
  } // path.relative(from, to)
  // posix version

  function relative(from, to) {
    from = resolve(from).substr(1);
    to = resolve(to).substr(1);

    function trim(arr) {
      var start = 0;

      for (; start < arr.length; start++) {
        if (arr[start] !== '') break;
      }

      var end = arr.length - 1;

      for (; end >= 0; end--) {
        if (arr[end] !== '') break;
      }

      if (start > end) return [];
      return arr.slice(start, end - start + 1);
    }

    var fromParts = trim(from.split('/'));
    var toParts = trim(to.split('/'));
    var length = Math.min(fromParts.length, toParts.length);
    var samePartsLength = length;

    for (var i = 0; i < length; i++) {
      if (fromParts[i] !== toParts[i]) {
        samePartsLength = i;
        break;
      }
    }

    var outputParts = [];

    for (var i = samePartsLength; i < fromParts.length; i++) {
      outputParts.push('..');
    }

    outputParts = outputParts.concat(toParts.slice(samePartsLength));
    return outputParts.join('/');
  }
  var sep = '/';
  var delimiter = ':';
  function dirname(path) {
    var result = splitPath(path),
        root = result[0],
        dir = result[1];

    if (!root && !dir) {
      // No dirname whatsoever
      return '.';
    }

    if (dir) {
      // It has a dirname, strip trailing slash
      dir = dir.substr(0, dir.length - 1);
    }

    return root + dir;
  }
  function basename(path, ext) {
    var f = splitPath(path)[2]; // TODO: make this comparison case-insensitive on windows?

    if (ext && f.substr(-1 * ext.length) === ext) {
      f = f.substr(0, f.length - ext.length);
    }

    return f;
  }
  function extname(path) {
    return splitPath(path)[3];
  }
  var path = {
    extname: extname,
    basename: basename,
    dirname: dirname,
    sep: sep,
    delimiter: delimiter,
    relative: relative,
    join: join,
    isAbsolute: isAbsolute,
    normalize: normalize,
    resolve: resolve
  };

  function filter(xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];

    for (var i = 0; i < xs.length; i++) {
      if (f(xs[i], i, xs)) res.push(xs[i]);
    }

    return res;
  } // String.prototype.substr - negative index don't work in IE8


  var substr = 'ab'.substr(-1) === 'b' ? function (str, start, len) {
    return str.substr(start, len);
  } : function (str, start, len) {
    if (start < 0) start = str.length + start;
    return str.substr(start, len);
  };

  var path$1 = /*#__PURE__*/Object.freeze({
    resolve: resolve,
    normalize: normalize,
    isAbsolute: isAbsolute,
    join: join,
    relative: relative,
    sep: sep,
    delimiter: delimiter,
    dirname: dirname,
    basename: basename,
    extname: extname,
    'default': path
  });

  var toString$3 = {}.toString;

  var isarray = Array.isArray || function (arr) {
    return toString$3.call(arr) == '[object Array]';
  };

  var isobject = function isObject(val) {
    return val != null && _typeof(val) === 'object' && isarray(val) === false;
  };

  var empty = {};

  var empty$1 = /*#__PURE__*/Object.freeze({
    'default': empty
  });

  var path$2 = getCjsExportFromNamespace(path$1);

  var fs = getCjsExportFromNamespace(empty$1);

  /**
   * Expose `relative`
   */


  var relative_1 = relative$1;
  /**
   * Get the relative path from `a` to `b`.
   */

  function relative$1(a, b, stat) {
    if (typeof a !== 'string') {
      throw new TypeError('relative expects a string.');
    }

    if (a == '' && !b) return a;
    var len = arguments.length;

    if (len === 1) {
      b = a;
      a = process.cwd();
      stat = null;
    }

    if (len === 2 && typeof b === 'boolean') {
      b = a;
      a = process.cwd();
      stat = true;
    }

    if (len === 2 && _typeof(b) === 'object') {
      stat = b;
      b = a;
      a = process.cwd();
    }

    var origB = b; // see if a slash exists before normalizing

    var slashA = endsWith(a, '/');
    var slashB = endsWith(b, '/');
    a = unixify(a);
    b = unixify(b); // if `a` had a slash, add it back

    if (slashA) {
      a = a + '/';
    }

    if (isFile(a, stat)) {
      a = path$2.dirname(a);
    }

    var res = path$2.relative(a, b);

    if (res === '') {
      return '.';
    } // if `b` originally had a slash, and the path ends
    // with `b` missing a slash, then re-add the slash.


    var noslash = trimEnd(origB, '/');

    if (slashB && (res === noslash || endsWith(res, noslash))) {
      res = res + '/';
    }

    return res;
  }
  /**
   * Get the path relative to the given base path.
   */


  relative$1.toBase = function toBase(base, fp) {
    base = unixify(base);
    fp = unixify(fp);
    var res = fp.slice(base.length);

    if (res.charAt(0) === '/') {
      res = res.slice(1);
    }

    return res;
  };
  /**
   * Normalize slashes in paths to unix slashes. This is necessary since
   * paths are not calculated the same by node.js when
   * windows paths are used.
   */


  function unixify(str) {
    return str.replace(/[\\\/]+/g, '/');
  }
  /**
   * Remove the given character from the path.
   */


  function trimEnd(fp, ch) {
    return fp.slice(0, fp.length - ch.length);
  }
  /**
   * Does the path end with the given `ch`aracter?
   */


  function endsWith(fp, ch) {
    return fp.slice(-ch.length)[0] === ch;
  }
  /**
   * If `fp` exists, return a `stat` object,
   * otherwise return `null`.
   */


  function tryStats(fp) {
    try {
      return fs.statSync(fp);
    } catch (err) {}

    return null;
  }
  /**
   * Returns true if `fp` is a directory. To use a `fs`
   * stat object to actually check the file system,
   * either pass `true` as the second arg, or pass your
   * own stat object as the second arg.
   *
   * @param  {String} `fp`
   * @param  {Boolean|Object} `stat`
   * @return {Boolean}
   */


  function isDir(fp, stat) {
    if (endsWith(fp, '/')) {
      return true;
    }

    if (stat === null) {
      // try to get the directory info if it hasn't been done yet
      // to ensure directories containing dots are well handle
      stat = tryStats(fp);
    }

    if (isobject(stat) && typeof stat.isDirectory === 'function') {
      return stat.isDirectory();
    }

    var segs = fp.split('/');
    var last = segs[segs.length - 1];

    if (last && last.indexOf('.') !== -1) {
      return false;
    }

    return true;
  }
  /**
   * Return true if `fp` looks like a file, or
   * actually is a file if fs.stat is used.
   */


  function isFile(fp, stat) {
    if (stat === true) {
      stat = tryStats(fp);
    }

    return !isDir(fp, stat);
  }

  var path_1 = createCommonjsModule(function (module, exports) {
    /**
     * Return the dirname for the given `filepath`. Uses
     * the node.js [path] module.
     *
     * ```js
     * <%= dirname("a/b/c/d") %>
     * //=> 'a/b/c'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns the directory part of the file path.
     * @api public
     */

    exports.dirname = path$2.dirname;
    /**
     * Return the basename for the given `filepath`. Uses
     * the node.js [path] module.
     *
     * ```js
     * <%= basename("a/b/c/d.js") %>
     * //=> 'd.js'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns the basename part of the file path.
     * @api public
     */

    exports.basename = path$2.basename;
    /**
     * Returns the filename for the given `filepath`, excluding
     * extension. Aliased as `stem`.
     *
     * ```js
     * <%= filename("a/b/c/d.js") %>
     * //=> 'd'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns the file name part of the file path.
     * @api public
     */

    exports.filename = function (filepath) {
      return path$2.basename(filepath, path$2.extname(filepath));
    };
    /**
     * Alias for [filename](#filename).
     *
     * ```js
     * <%= stem("a/b/c/d.js") %>
     * //=> 'd'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns the file name part of the file path.
     * @api public
     */


    exports.stem = exports.filename;
    /**
     * Return the file extension for the given `filepath`.
     * Uses the node.js [path] module.
     *
     * ```js
     * <%= extname("foo.js") %>
     * //=> '.js'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns a file extension
     * @api public
     */

    exports.extname = path$2.extname;
    /**
     * Return the file extension for the given `filepath`,
     * excluding the `.`.
     *
     * ```js
     * <%= ext("foo.js") %>
     * //=> 'js'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns a file extension without dot.
     * @api public
     */

    exports.ext = function (filepath) {
      return path$2.extname(filepath).replace(/^\./, '');
    };
    /**
     * Resolves the given paths to an absolute path. Uses
     * the node.js [path] module.
     *
     * ```js
     * <%= resolve('/foo/bar', './baz') %>
     * //=> '/foo/bar/baz'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns a resolve
     * @api public
     */


    exports.resolve = path$2.resolve;
    /**
     * Get the relative path from file `a` to file `b`.
     * Typically `a` and `b` would be variables passed
     * on the context. Uses the node.js [path] module.
     *
     * ```js
     * <%= relative(a, b) %>
     * ```
     * @param {String} `a` The "from" file path.
     * @param {String} `b` The "to" file path.
     * @return {String} Returns a relative path.
     * @api public
     */

    exports.relative = function (a, b) {
      if (b === void 0) {
        b = a;

        if (typeof process !== 'undefined' && typeof process.cwd === 'function') {
          a = process.cwd();
        } else {
          a = '.';
        }
      }

      a = a || '';
      b = b || '';
      var rel = relative_1(a, b);
      return rel === '.' ? './' : rel;
    };
    /**
     * Get specific (joined) segments of a file path by passing a
     * range of array indices.
     *
     * ```js
     * <%= segments("a/b/c/d", "2", "3") %>
     * //=> 'c/d'
     *
     * <%= segments("a/b/c/d", "1", "3") %>
     * //=> 'b/c/d'
     *
     * <%= segments("a/b/c/d", "1", "2") %>
     * //=> 'b/c'
     * ```
     * @param {String} `filepath` The file path to split into segments.
     * @return {String} Returns a single, joined file path.
     * @api public
     */


    exports.segments = function (filepath, a, b) {
      return filepath.split(/[\\/]+/).slice(a, b).join('/');
    };
    /**
     * Join all arguments together and normalize the resulting
     * `filepath`. Uses the node.js [path] module.
     *
     * **Note**: there is also a `join()` array helper, dot notation
     * can be used with helpers to differentiate. Example: `<%= path.join() %>`.
     *
     *
     * ```js
     * <%= join("a", "b") %>
     * //=> 'a/b'
     * ```
     * @param {String} `filepaths` List of file paths.
     * @return {String} Returns a single, joined file path.
     * @api public
     */


    exports.join = path$2.join;
    /**
     * Returns true if a file path is an absolute path. An
     * absolute path will always resolve to the same location,
     * regardless of the working directory. Uses the node.js
     * [path] module.
     *
     * ```js
     * // posix
     * <%= isAbsolute('/foo/bar') %>
     * //=> 'true'
     * <%= isAbsolute('qux/') %>
     * //=> 'false'
     * <%= isAbsolute('.') %>
     * //=> 'false'
     *
     * // Windows
     * <%= isAbsolute('//server') %>
     * //=> 'true'
     * <%= isAbsolute('C:/foo/..') %>
     * //=> 'true'
     * <%= isAbsolute('bar\\baz') %>
     * //=> 'false'
     * <%= isAbsolute('.') %>
     * //=> 'false'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns a resolve
     * @api public
     */

    exports.isAbsolute = path$2.isAbsolute;
    /**
     * Returns true if a file path is an absolute path. An
     * absolute path will always resolve to the same location,
     * regardless of the working directory. Uses the node.js
     * [path] module.
     *
     * ```js
     * // posix
     * <%= isRelative('/foo/bar') %>
     * //=> 'false'
     * <%= isRelative('qux/') %>
     * //=> 'true'
     * <%= isRelative('.') %>
     * //=> 'true'
     *
     * // Windows
     * <%= isRelative('//server') %>
     * //=> 'false'
     * <%= isRelative('C:/foo/..') %>
     * //=> 'false'
     * <%= isRelative('bar\\baz') %>
     * //=> 'true'
     * <%= isRelative('.') %>
     * //=> 'true'
     * ```
     * @param {String} `filepath`
     * @return {String} Returns a resolve
     * @api public
     */

    exports.isRelative = function (filepath) {
      return !path$2.isAbsolute(filepath);
    };
  });
  var path_2 = path_1.dirname;
  var path_3 = path_1.basename;
  var path_4 = path_1.filename;
  var path_5 = path_1.stem;
  var path_6 = path_1.extname;
  var path_7 = path_1.ext;
  var path_8 = path_1.resolve;
  var path_9 = path_1.relative;
  var path_10 = path_1.segments;
  var path_11 = path_1.join;
  var path_12 = path_1.isAbsolute;
  var path_13 = path_1.isRelative;

  /*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  var isobject$1 = function isObject(val) {
    return val != null && _typeof(val) === 'object' && Array.isArray(val) === false;
  };

  /*!
   * get-value <https://github.com/jonschlinkert/get-value>
   *
   * Copyright (c) 2014-2018, Jon Schlinkert.
   * Released under the MIT License.
   */

  var getValue = function getValue(target, path, options) {
    if (!isobject$1(options)) {
      options = {
        "default": options
      };
    }

    if (!isValidObject(target)) {
      return typeof options["default"] !== 'undefined' ? options["default"] : target;
    }

    if (typeof path === 'number') {
      path = String(path);
    }

    var isArray = Array.isArray(path);
    var isString = typeof path === 'string';
    var splitChar = options.separator || '.';
    var joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');

    if (!isString && !isArray) {
      return target;
    }

    if (isString && path in target) {
      return isValid(path, target, options) ? target[path] : options["default"];
    }

    var segs = isArray ? path : split(path, splitChar, options);
    var len = segs.length;
    var idx = 0;

    do {
      var prop = segs[idx];

      if (typeof prop === 'number') {
        prop = String(prop);
      }

      while (prop && prop.slice(-1) === '\\') {
        prop = join$1([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);
      }

      if (prop in target) {
        if (!isValid(prop, target, options)) {
          return options["default"];
        }

        target = target[prop];
      } else {
        var hasProp = false;
        var n = idx + 1;

        while (n < len) {
          prop = join$1([prop, segs[n++]], joinChar, options);

          if (hasProp = prop in target) {
            if (!isValid(prop, target, options)) {
              return options["default"];
            }

            target = target[prop];
            idx = n - 1;
            break;
          }
        }

        if (!hasProp) {
          return options["default"];
        }
      }
    } while (++idx < len && isValidObject(target));

    if (idx === len) {
      return target;
    }

    return options["default"];
  };

  function join$1(segs, joinChar, options) {
    if (typeof options.join === 'function') {
      return options.join(segs);
    }

    return segs[0] + joinChar + segs[1];
  }

  function split(path, splitChar, options) {
    if (typeof options.split === 'function') {
      return options.split(path);
    }

    return path.split(splitChar);
  }

  function isValid(key, target, options) {
    if (typeof options.isValid === 'function') {
      return options.isValid(key, target);
    }

    return true;
  }

  function isValidObject(val) {
    return isobject$1(val) || Array.isArray(val) || typeof val === 'function';
  }

  var object = createCommonjsModule(function (module, exports) {

    var hasOwn = Object.prototype.hasOwnProperty;
    /**
     * Specify a fallback value to use when the desired
     * value is undefined. Note that undefined variables
     * that are _not object properties_ with throw an error.
     *
     * ```js
     * // when `title` is undefined, use the generic `site.title`
     * <%= fallback(page.title, site.title) %>
     * ```
     * @param  {*} `a` The desired value.
     * @param  {*} `b` The fallback ("default") value
     * @return {*} Either `a` or `b`
     * @api public
     */

    exports.fallback = function (a, b) {
      return a != null ? a : b;
    };
    /**
     * Stringify an object using `JSON.stringify()`.
     *
     * ```js
     * <%= stringify({a: "a"}) %>
     * //=> '{"a":"a"}'
     * ```
     * @param  {Object} `object`
     * @return {String}
     * @api public
     */


    exports.stringify = function (obj) {
      return JSON.stringify(obj);
    };
    /**
     * Parse a string into an object using `JSON.parse()`.
     *
     * ```js
     * <%= parse('{"foo":"bar"}')["foo"] %>
     * //=> 'bar'
     * ```
     * @param  {String} `str` The string to parse.
     * @return {Object} The parsed object.
     * @api public
     */


    exports.parse = function (str) {
      return utils.isString(str) ? JSON.parse(str) : void 0;
    };
    /**
     * Use property paths (`a.b.c`) get a nested value from an object.
     *
     * ```js
     * <%= get({a: {b: 'c'}}, 'a.b') %>
     * //=> 'c'
     * ```
     * @param  {Object} `object`
     * @param  {String} `path` Dot notation for the property to get.
     * @return {String}
     * @api public
     */


    exports.get = function (obj, prop, options) {
      return getValue(obj, prop, options);
    };
    /**
     * Returns an array of keys from the given `object`.
     *
     * ```js
     * <%= keys({a: 'b', c: 'd'}) %>
     * //=> '["a", "c"]'
     * ```
     * @param  {Object} `object`
     * @return {Array} Keys from `object`
     * @api public
     */


    exports.keys = function (obj) {
      return Object.keys(obj);
    };
    /**
     * Return true if the given `value` is an object, and
     * not `null` or an array.
     *
     * ```js
     * <%= isObject(['a', 'b', 'c']) %>
     * //=> 'false'
     *
     * <%= isObject({a: 'b'}) %>
     * //=> 'true'
     * ```
     * @param  {Object} `value` The value to check.
     * @return {Boolean}
     * @api public
     */


    exports.isObject = utils.isObject;
    /**
     * Return true if the given `value` is a plain object.
     *
     * ```js
     * <%= isPlainObject(['a', 'b', 'c']) %>
     * //=> 'false'
     *
     * <%= isPlainObject({a: 'b'}) %>
     * //=> 'true'
     *
     * <%= isPlainObject(/foo/g) %>
     * //=> 'false'
     * ```
     * @param  {Object} `value` The value to check.
     * @return {Boolean}
     * @api public
     */

    exports.isPlainObject = function (val) {
      return utils.isPlainObject(val);
    };
    /**
     * Return true if `key` is an own, enumerable property
     * of the given `obj`.
     *
     * @param  {Object} `object`
     * @param  {String} `key`
     * @return {Boolean}
     * @api public
     */


    exports.hasOwn = function (obj, key) {
      return hasOwn.call(obj, key);
    };
    /**
     * Return a copy of `object` exclusing the given `keys`.
     *
     * ```js
     * <%= omit({a: 'a', b: 'b', c: 'c'}, ['a', 'c']) %>
     * //=> '{b: "b"}'
     * ```
     * @param  {Object} `object` Object with keys to omit.
     * @param  {String} `keys` Keys to omit.
     * @return {Boolean}
     * @api public
     */


    exports.omit = function (obj, keys) {
      return utils.omit(obj, keys);
    };
    /**
     * Iterate over the own and inherited enumerable properties of an object,
     * and return an object with properties that evaluate to true from the
     * callback. Exit early by returning `false`.
     *
     * ```js
     * const context = { values: { a: 'b', c: 'd' } };
     * const str = '<% forIn(values, function(val, key) { %><%= val %><% }) %>';
     * const fn = _.template(str, { imports: helpers });
     * assert.equal(fn(context), 'bd');
     * ```
     * @param  {Object} `object` Object with keys to omit.
     * @param  {String} `keys` Keys to omit.
     * @return {Boolean}
     * @api public
     */


    exports.forIn = function (obj, fn, context) {
      for (var key in obj) {
        if (fn.call(context, obj[key], key, obj) === false) {
          break;
        }
      }
    };
    /**
     * Iterate over the own enumerable properties of an object,
     * and return an object with properties that evaluate to true
     * from the callback. Exit early by returning `false`
     *
     * ```js
     * const context = { values: { a: 'b', c: 'd' } };
     * const str = '<% forOwn(values, function(val, key) { %><%= key %><% }) %>';
     * const fn = _.template(str, { imports: helpers });
     * console.log(fn(context)) //=> 'ac'
     * ```
     * @param  {Object} `object` Object with keys to omit.
     * @param  {String} `keys` Keys to omit.
     * @return {Boolean}
     * @api public
     */


    exports.forOwn = function (obj, fn, context) {
      exports.forIn(obj, function (val, key) {
        if (hasOwn.call(obj, key)) {
          return fn.call(context, obj[key], key, obj);
        }
      });
    };
    /**
     * Extend `o` with properties of other `objects`.
     *
     * @param  {Object} `o` The target object. Pass an empty object to shallow clone.
     * @param  {Object} `objects`
     * @return {Object}
     * @api public
     */


    exports.extend = function (obj) {
      if (!utils.isObject(obj)) return '';

      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        rest[_key - 1] = arguments[_key];
      }

      var last = rest[rest.length - 1];

      if (utils.isObject(last) && last.hash) {
        rest.pop();
      }

      var len = rest.length;

      if (len === 0) {
        return obj;
      }

      for (var _i = 0, _rest = rest; _i < _rest.length; _i++) {
        var ele = _rest[_i];

        if (utils.isObject(ele)) {
          for (var key in ele) {
            if (exports.hasOwn(ele, key)) {
              obj[key] = ele[key];
            }
          }
        }
      }

      return obj;
    };
    /**
     * Recursively combine the properties of `o` with the
     * properties of other `objects`.
     *
     * @param  {Object} `o` The target object. Pass an empty object to shallow clone.
     * @param  {Object} `objects`
     * @return {Object}
     * @api public
     */


    exports.merge = function (obj) {
      if (!utils.isObject(obj)) return '';

      for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        rest[_key2 - 1] = arguments[_key2];
      }

      var last = rest[rest.length - 1];

      if (utils.isObject(last) && last.hash) {
        rest.pop();
      }

      var len = rest.length;

      if (len === 0) {
        return obj;
      }

      for (var _i2 = 0, _rest2 = rest; _i2 < _rest2.length; _i2++) {
        var ele = _rest2[_i2];

        if (utils.isObject(ele)) {
          for (var key in ele) {
            if (exports.hasOwn(ele, key)) {
              if (utils.isObject(ele[key])) {
                obj[key] = exports.merge(obj[key], ele[key]);
              } else {
                obj[key] = ele[key];
              }
            }
          }
        }
      }

      return obj;
    };
  });
  var object_1 = object.fallback;
  var object_2 = object.stringify;
  var object_3 = object.parse;
  var object_4 = object.get;
  var object_5 = object.keys;
  var object_6 = object.isObject;
  var object_7 = object.isPlainObject;
  var object_8 = object.hasOwn;
  var object_9 = object.omit;
  var object_10 = object.forIn;
  var object_11 = object.forOwn;
  var object_12 = object.extend;
  var object_13 = object.merge;

  /**
   * Return the product of `a` plus `b`.
   *
   * ```js
   * <%= add(1, 2) %>
   * //=> '3'
   * ```
   * @param {Number} `a`
   * @param {Number} `b`
   * @api public
   */


  var add = function add(a, b) {
    return a + b;
  };
  /**
   * Subtract `b` from `a`.
   *
   * ```js
   * <%= subtract(5, 2) %>
   * //=> '3'
   * ```
   * @param {Number} `a`
   * @param {Number} `b`
   * @api public
   */


  var subtract = function subtract(a, b) {
    return Number(a) - Number(b);
  };
  /**
   * Divide `a` (the numerator) by `b` (the divisor).
   *
   * ```js
   * <%= divide(10, 2) %>
   * //=> '5'
   * ```
   * @param {Number} `a` the numerator.
   * @param {Number} `b` the divisor.
   * @return {Number} The quotient of `a` divided by `b`.
   * @api public
   */


  var divide = function divide(a, b) {
    return Number(a) / Number(b);
  };
  /**
   * Multiply `a` by `b`.
   *
   * ```js
   * <%= divide(10, 2) %>
   * //=> '5'
   * ```
   * @param {Number} `a`
   * @param {Number} `b`
   * @return {Number} The product of `a` times `b`.
   * @api public
   */


  var multiply = function multiply(a, b) {
    return Number(a) * Number(b);
  };
  /**
   * Returns the largest integer less than or equal to the
   * given `number`.
   *
   * ```js
   * <%= floor(10.6) %>
   * //=> '10'
   * ```
   * @param {Number} `number`
   * @return {Number}
   * @api public
   */


  var floor = function floor(n) {
    return Math.floor(n);
  };
  /**
   * Returns the smallest integer greater than or equal to the
   * given `number`.
   *
   * ```js
   * <%= ceil(10.1) %>
   * //=> '11'
   * ```
   * @param {Number} `number`
   * @return {Number}
   * @api public
   */


  var ceil = function ceil(n) {
    return Math.ceil(n);
  };
  /**
   * Returns the value of the given `number` rounded to the
   * nearest integer.
   *
   * ```js
   * <%= round(10.1) %>
   * //=> '10'
   *
   * <%= round(10.5) %>
   * //=> '11'
   * ```
   * @param {Number} `number`
   * @return {Number}
   * @api public
   */


  var round = function round(n) {
    return Math.round(n);
  };
  /**
   * Returns the sum of all numbers in the given array.
   *
   * ```js
   * <%= sum([1, 2, 3, 4, 5]) %>
   * //=> '15'
   * ```
   * @param {Number} `number`
   * @return {Number}
   * @api public
   */


  var sum = function sum() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var arr = [].concat.apply([], args);
    var len = arr.length;
    var idx = -1;
    var num = 0;

    while (++idx < len) {
      if (!utils.isNumber(arr[idx])) {
        continue;
      }

      num += +arr[idx];
    }

    return num;
  };

  var math = {
    add: add,
    subtract: subtract,
    divide: divide,
    multiply: multiply,
    floor: floor,
    ceil: ceil,
    round: round,
    sum: sum
  };

  /**
   * Escape HTML characters in a string.
   *
   * ```js
   * <%= escapeHtml("<span>foo</span>") %>
   * //=> &lt;span&gt;foo&lt;&#x2F;span&gt;
   * ```
   *
   * @param {String} `str` String of HTML with characters to escape.
   * @return {String}
   * @api public
   */


  var escapeHtml = function escapeHtml(str) {
    if (!string.isString(str)) return '';
    return str.replace(/[/"'&<>]/g, function (ch) {
      return {
        '"': '&quot;',
        '&': '&amp;',
        '/': '&#x2F;',
        '<': '&lt;',
        '>': '&gt;',
        '\'': '&#39;'
      }[ch];
    });
  };
  /**
   * Strip HTML tags from a string, so that only the text nodes
   * are preserved.
   *
   * ```js
   * <%= sanitize("<span>foo</span>") %>
   * //=> 'foo'
   * ```
   *
   * @param  {String} `str` The string of HTML to sanitize.
   * @return {String}
   * @api public
   */


  var sanitize = function sanitize(str) {
    return string.isString(str) ? str.replace(/(<([^>]+)>)/g, '').trim() : '';
  };

  var html = {
    escapeHtml: escapeHtml,
    sanitize: sanitize
  };

  var fs_1 = createCommonjsModule(function (module, exports) {
    /**
     * Return true if a file exists
     *
     * ```js
     * <%= exists("foo.js") %>
     * ```
     * @param {String} `filepath` Path of the file to check.
     * @return {Boolean} True if the file exists
     * @api public
     */

    exports.exists = function (filepath) {
      return filepath && fs.existsSync(filepath);
    };
    /**
     * Read a file from the file system and inject its content
     *
     * ```js
     * <%= read("foo.js") %>
     * ```
     * @param {String} `filepath` Path of the file to read.
     * @return {String} Contents of the given file.
     * @api public
     */


    exports.read = function (filepath) {
      if (!exports.exists(filepath)) return '';
      return fs.readFileSync(filepath, 'utf8');
    };
  });
  var fs_2 = fs_1.exists;
  var fs_3 = fs_1.read;

  var conditional = createCommonjsModule(function (module, exports) {
    /**
     * Returns true when both `valueA` and `valueB` are truthy.
     *
     * @name .and
     * @param {any} `valueA`
     * @param {any} `valueB`
     * @return {Boolean}
     * @api public
     */

    exports.and = function (valueA, valueB) {
      return !!valueA && !!valueB;
    };
    /**
     * Render a block when a comparison of the first and third arguments
     * returns true.
     *
     * ```js
     * <%= compare("foo", "!==", "bar") %>
     * ```
     * @name .compare
     * @param {String} `valueA`
     * @param {String} `operator` The operator to use for the comparison (must be a quoted string).
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */


    exports.compare = function (a, operator, b) {
      /* eslint-disable eqeqeq */
      if (arguments.length < 3) {
        throw new Error('"compare" helper - expected 3 arguments');
      }

      switch (operator) {
        case '!=':
          return a != b;

        case '!==':
          return a !== b;

        case '<':
          return a < b;

        case '<=':
          return a <= b;

        case '==':
          return a == b;

        case '===':
          return a === b;

        case '>':
          return a > b;

        case '>=':
          return a >= b;

        case 'typeof':
          return _typeof(a) === b;

        default:
          {
            throw new Error("\"compare\" helper - invalid operator: \"".concat(operator, "\""));
          }
      }

      return false;
    };
    /**
     * Returns the first truthy value.
     *
     * @name .find
     * @param {...args} `...values`
     * @return {any}
     * @api public
     */


    exports.find = function () {
      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }

      return values.find(function (v) {
        return !!v;
      });
    };
    /**
     * Returns true when all provided values are truthy.
     *
     * @name .every
     * @param {...any} `...values`
     * @return {Boolean}
     * @api public
     */


    exports.every = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      for (var _i = 0, _args = args; _i < _args.length; _i++) {
        var ele = _args[_i];
        if (!ele) return false;
      }

      return true;
    };
    /**
     * Returns true when `valueA` is greater than `valueB`.
     *
     * @name .gt
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */


    exports.gt = function (a, b) {
      return a > b;
    };
    /**
     * Returns true when `valueA` is greater than or equal to `valueB`.
     *
     * @name .gte
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */


    exports.gte = function (a, b) {
      return a >= b;
    };
    /**
     * Return true if `key` is an own, enumerable property
     * of the given `obj`.
     *
     * @param  {Object} `object`
     * @param  {String} `key`
     * @return {Boolean}
     * @api public
     */


    exports._if = function if_(fn, a, b, thisArg) {
      if (typeof fn !== 'function') return '';
      thisArg = thisArg || this || null;
      var res = fn.call(thisArg, a, b);
      if (res) return a;
      return b;
    };
    /**
     * Returns true when `valueA` equals `valueB`.
     *
     * @name .is
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @param {String} `strict`
     * @return {Boolean}
     * @api public
     */


    exports.is = function (a, b) {
      var strict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return strict ? a === b : a == b;
    };
    /**
     * Alias for [is](#is).
     *
     * @name .eq
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @param {String} `strict`
     * @return {Boolean}
     * @api public
     */


    exports.eq = exports.is;
    /**
     * Returns true when `valueA` does not equal `valueB`.
     *
     * @name .isnt
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */

    exports.isnt = function (a, b) {
      var strict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return strict ? a !== b : a != b;
    };
    /**
     * Alias for [isnt](#isnt).
     *
     * @name .notEq
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */


    exports.notEq = exports.isnt;
    /**
     * Returns true when `valueA` is less than `valueB`.
     *
     * @name .lt
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */

    exports.lt = function (a, b) {
      return a < b;
    };
    /**
     * Returns true when `valueA` is less than or equal to `valueB`.
     *
     * @name .lte
     * @param {String} `valueA`
     * @param {String} `valueB`
     * @return {Boolean}
     * @api public
     */


    exports.lte = function (a, b) {
      return a <= b;
    };
    /**
     * Returns `valueA` if thruthy, otherwise `valueB`.
     *
     * @name .or
     * @param {any} `valueA`
     * @param {any} `valueB`
     * @return {any}
     * @api public
     */


    exports.or = function (valueA, valueB) {
      return !!valueA ? valueA : valueB;
    };
    /**
     * Returns true when at least one value is truthy.
     *
     * @name .some
     * @param {...any} `...values`
     * @return {Boolean}
     * @api public
     */


    exports.some = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      for (var _i2 = 0, _args2 = args; _i2 < _args2.length; _i2++) {
        var ele = _args2[_i2];
        if (!!ele) return true;
      }

      return false;
    };
  });
  var conditional_1 = conditional.and;
  var conditional_2 = conditional.compare;
  var conditional_3 = conditional.find;
  var conditional_4 = conditional.every;
  var conditional_5 = conditional.gt;
  var conditional_6 = conditional.gte;
  var conditional_7 = conditional._if;
  var conditional_8 = conditional.is;
  var conditional_9 = conditional.eq;
  var conditional_10 = conditional.isnt;
  var conditional_11 = conditional.notEq;
  var conditional_12 = conditional.lt;
  var conditional_13 = conditional.lte;
  var conditional_14 = conditional.or;
  var conditional_15 = conditional.some;

  /*!
   * for-in <https://github.com/jonschlinkert/for-in>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  var forIn = function forIn(obj, fn, thisArg) {
    for (var key in obj) {
      if (fn.call(thisArg, obj[key], key, obj) === false) {
        break;
      }
    }
  };

  var hasOwn = Object.prototype.hasOwnProperty;

  var forOwn = function forOwn(obj, fn, thisArg) {
    forIn(obj, function (val, key) {
      if (hasOwn.call(obj, key)) {
        return fn.call(thisArg, obj[key], key, obj);
      }
    });
  };

  /**
   * Convert an argument into a valid iterator.
   * Used internally on most array/object/collection methods that receives a
   * callback/iterator providing a shortcut syntax.
   */


  var makeIterator = function makeIterator(src, thisArg) {
    if (src == null) {
      return noop;
    }

    switch (_typeof(src)) {
      // function is the first to improve perf (most common case)
      // also avoid using `Function#call` if not needed, which boosts
      // perf a lot in some cases
      case 'function':
        return typeof thisArg !== 'undefined' ? function (val, i, arr) {
          return src.call(thisArg, val, i, arr);
        } : src;

      case 'object':
        return function (val) {
          return deepMatches(val, src);
        };

      case 'string':
      case 'number':
        return prop(src);
    }
  };

  function containsMatch(array, value) {
    var len = array.length;
    var i = -1;

    while (++i < len) {
      if (deepMatches(array[i], value)) {
        return true;
      }
    }

    return false;
  }

  function matchArray(o, value) {
    var len = value.length;
    var i = -1;

    while (++i < len) {
      if (!containsMatch(o, value[i])) {
        return false;
      }
    }

    return true;
  }

  function matchObject(o, value) {
    var res = true;
    forOwn(value, function (val, key) {
      if (!deepMatches(o[key], val)) {
        // Return false to break out of forOwn early
        return res = false;
      }
    });
    return res;
  }
  /**
   * Recursively compare objects
   */


  function deepMatches(o, value) {
    if (o && _typeof(o) === 'object') {
      if (Array.isArray(o) && Array.isArray(value)) {
        return matchArray(o, value);
      } else {
        return matchObject(o, value);
      }
    } else {
      return o === value;
    }
  }

  function prop(name) {
    return function (obj) {
      return obj[name];
    };
  }

  function noop(val) {
    return val;
  }

  var any = function any(value, fn, thisArg) {
    if (value == null) {
      return false;
    } // strings


    if (typeof value === 'string' && typeof fn === 'string') {
      return value.indexOf(fn) !== -1;
    } // object key


    if (typeof fn === 'string') {
      if (value.hasOwnProperty(fn)) {
        return true;
      }
    }

    fn = makeIterator(fn, thisArg);
    var res = false; // arrays or arguments

    if (typeof value.length === 'number') {
      var len = value.length;
      var i = -1;

      while (++i < len) {
        if (fn(value[i], i, value)) {
          res = true;
          break;
        }
      } // object properties/values

    } else {
      forOwn(value, function (val, key) {
        if (fn(val, key, value)) {
          res = true;
          return false;
        }
      });
    }

    return res;
  };

  var prop$1 = function prop(name) {
    return function (obj) {
      return obj[name];
    };
  };

  var noop$1 = function noop(val) {
    return val;
  };

  var iterator = function iterator(target, thisArg) {
    var invoke = function invoke(val, i, arr) {
      return target.call(thisArg, val, i, arr);
    };

    switch (kindOf$2(target)) {
      case 'undefined':
      case 'null':
        return noop$1;

      case 'function':
        return thisArg === void 0 ? target : invoke;

      case 'object':
        return function (val) {
          return isMatch(val, target);
        };

      case 'regexp':
        return function (str) {
          return target.test(str);
        };

      case 'string':
      case 'number':
      default:
        {
          return prop$1(target);
        }
    }
  };

  function containsMatch$1(array, value) {
    for (var i = 0; i < array.length; i++) {
      if (isMatch(array[i], value)) {
        return true;
      }
    }

    return false;
  }

  function matchArray$1(array, value) {
    for (var i = 0; i < array.length; i++) {
      if (!containsMatch$1(array, value[i])) {
        return false;
      }
    }

    return true;
  }

  function matchObject$1(obj, value) {
    for (var key in value) {
      if (value.hasOwnProperty(key)) {
        if (isMatch(obj[key], value[key]) === false) {
          return false;
        }
      }
    }

    return true;
  }

  function isMatch(val, value) {
    if (kindOf$2(val) === 'object') {
      if (Array.isArray(val) && Array.isArray(value)) {
        return matchArray$1(val, value);
      }

      return matchObject$1(val, value);
    }

    return val === value;
  }

  /**
   * Returns `true` if `value` exists in the given string, array
   * or object. See [any] for documentation.
   *
   * @param {*} `value`
   * @param {*} `target`
   * @param {Object} `options`
   * @api public
   */


  var any_1 = any;
  /**
   * Filter the given array or object to contain only the matching values.
   *
   * ```js
   * <%= filter(['foo', 'bar', 'baz']) %>
   * //=> '["a", "b", "c"]'
   * ```
   *
   * @param {Array} `arr`
   * @return {Array}
   * @api public
   */

  var filter$1 = function filter(val, fn, context) {
    if (utils.isEmpty(val)) return '';

    var iter = function iter() {};

    if (typeof fn === 'string') {
      var prop = fn;

      iter = function iter(target) {
        return typeof target === 'string' ? target === prop : target[prop];
      };
    } else {
      iter = iterator(fn, context);
    }

    if (typeof val === 'string') {
      return iter(val);
    }

    if (Array.isArray(val)) {
      return val.filter(iter);
    }

    if (utils.isObject(val)) {
      var obj = val;
      var res = {};

      for (var key in obj) {
        if (obj.hasOwnProperty(key) && iter(key)) {
          res[key] = obj[key];
        }
      }

      return res;
    }
  };

  var collection = {
    any: any_1,
    filter: filter$1
  };

  /**
   * Embed code from an external file as preformatted text.
   *
   * ```js
   * <%= embed('path/to/file.js') %>
   *
   * // specify the language to use
   * <%= embed('path/to/file.hbs', 'html') %>
   * ```
   * @param {String} `fp` filepath to the file to embed.
   * @param {String} `language` Optionally specify the language to use for syntax highlighting.
   * @return {String}
   * @api public
   */


  var embed = function embed(fp, ext) {
    ext = typeof ext !== 'string' ? path$2.extname(fp).slice(1) : ext;
    var code = fs.readFileSync(fp, 'utf8'); // if the string is markdown, escape backticks

    if (ext === 'markdown' || ext === 'md') {
      code = code.split('`').join('&#x60');
    }

    return utils.toCodeBlock(code, ext) + '\n';
  };
  /**
   * Generate the HTML for a jsFiddle link with the given `params`
   *
   * ```js
   * <%= jsfiddle({id: '0dfk10ks', {tabs: true}}) %>
   * ```
   * @param {Object} `params`
   * @return {String}
   * @api public
   */


  var jsfiddle = function jsfiddle(attr) {
    if (!attr || !object.isPlainObject(attr)) return '';
    attr.id = 'http://jsfiddle.net/' + (attr.id || '');
    attr.width = attr.width || '100%';
    attr.height = attr.height || '300';
    attr.skin = attr.skin || '/presentation/';
    attr.tabs = (attr.tabs || 'result,js,html,css') + attr.skin;
    attr.src = attr.id + '/embedded/' + attr.tabs;
    attr.allowfullscreen = attr.allowfullscreen || 'allowfullscreen';
    attr.frameborder = attr.frameborder || '0';
    attr = object.omit(attr, ['id', 'tabs', 'skin']);
    return '<iframe ' + utils.toAttributes(attr) + '></iframe>';
  };

  var code = {
    embed: embed,
    jsfiddle: jsfiddle
  };

  /**
   * Returns true if `value` is an array.
   *
   * ```js
   * <%= isArray('a, b, c') %>
   * //=> 'false'
   *
   * <%= isArray(['a, b, c']) %>
   * //=> 'true'
   * ```
   * @param {*} `value` The value to test.
   * @return {Boolean}
   * @api public
   */


  var isArray$1 = function isArray(val) {
    return Array.isArray(val);
  };
  /**
   * Cast `val` to an array.
   *
   * ```js
   * <%= arrayify('a') %>
   * //=> '["a"]'
   *
   * <%= arrayify({a: 'b'}) %>
   * //=> '[{a: "b"}]'
   *
   * <%= arrayify(['a']) %>
   * //=> '["a"]'
   * ```
   * @param  {*} `val` The value to arrayify.
   * @return  {Array} An array.
   * @return {Array}
   * @api public
   */


  var arrayify = function arrayify(val) {
    return [].concat(val != null ? val : []);
  };
  /**
   * Returns the first item, or first `n` items of an array.
   *
   * ```js
   * <%= first(['a', 'b', 'c', 'd', 'e'], 2) %>
   * //=> '["a", "b"]'
   * ```
   * @name .first
   * @param {Array} `array`
   * @param {Number} `n` Number of items to return, starting at `0`.
   * @return {Array}
   * @api public
   */


  var first = function first(arr, n) {
    if (utils.isEmpty(arr)) return '';

    if (utils.isNumber(n)) {
      return arr.slice(0, n);
    }

    return arr[0];
  };
  /**
   * Returns the last item, or last `n` items of an array.
   *
   * ```js
   * <%= last(['a', 'b', 'c', 'd', 'e'], 2) %>
   * //=> '["d", "e"]'
   * ```
   * @param {Array} `array`
   * @param {Number} `n` Number of items to return, starting with the last item.
   * @return {Array}
   * @api public
   */


  var last = function last(arr, n) {
    if (utils.isEmpty(arr)) return '';

    if (!utils.isNumber(n)) {
      return arr[arr.length - 1];
    }

    return arr.slice(-n);
  };
  /**
   * Returns all of the items in an array up to the specified number
   * Opposite of `<%= after() %`.
   *
   * ```js
   * <%= before(['a', 'b', 'c'], 2) %>
   * //=> '["a", "b"]'
   * ```
   * @param {Array} `array`
   * @param {Number} `n`
   * @return {Array} Array excluding items after the given number.
   * @crosslink after
   * @api public
   */


  var before = function before(arr, n) {
    return !utils.isEmpty(arr) ? arr.slice(0, -n) : '';
  };
  /**
   * Returns all of the items in an arry after the specified index.
   * Opposite of `<%= before() %`.
   *
   * ```js
   * <%= after(['a', 'b', 'c'], 1) %>
   * //=> '["c"]'
   * ```
   * @param {Array} `array` Collection
   * @param {Number} `n` Starting index (number of items to exclude)
   * @return {Array} Array exluding `n` items.
   * @crosslink before
   * @api public
   */


  var after = function after(arr, n) {
    return !utils.isEmpty(arr) ? arr.slice(n) : '';
  };
  /**
   * Calling `fn` on each element of the given `array` with
   * the given `context`.
   *
   * ```js
   * function double(str) {
   *   return str + str;
   * }
   * ```
   *
   * Assuming that `double` has been registered as a helper:
   *
   * ```js
   * <%= each(['a', 'b', 'c'], double, ctx) %>
   * //=> '["aa", "bb", "cc"]'
   * ```
   * @param {Array} `array`
   * @param {String} `fn` The function to call on each element in the given array.
   * @return {String}
   * @api public
   */


  var each = function each(arr, fn, context) {
    if (utils.isEmpty(arr)) {
      return '';
    }

    var len = arr.length;
    var idx = -1;
    var res = '';
    var val;

    while (++idx < len) {
      if ((val = fn.call(context, arr[idx], idx, arr)) === false) {
        break;
      }

      res += val;
    }

    return res;
  };
  /**
   * Returns a new array, created by calling `function`
   * on each element of the given `array`.
   *
   * ```js
   * function double(str) {
   *   return str + str;
   * }
   * ```
   *
   * Assuming that `double` has been registered as a helper:
   *
   * ```js
   * <%= map(['a', 'b', 'c'], double) %>
   * //=> '["aa", "bb", "cc"]'
   * ```
   * @param {Array} `array`
   * @param {String} `fn` The function to call on each element in the given array.
   * @return {String}
   * @api public
   */


  var map = function map(arr, fn, context) {
    if (utils.isEmpty(arr)) return '';
    var len = arr.length;
    var res = new Array(len);
    var idx = -1;

    while (++idx < len) {
      res[idx] = fn.call(context, arr[idx], idx, arr);
    }

    return res;
  };
  /**
   * Join all elements of array into a string, optionally using a
   * given separator.
   *
   * ```js
   * <%= join(['a', 'b', 'c']) %>
   * //=> 'a, b, c'
   *
   * <%= join(['a', 'b', 'c'], '-') %>
   * //=> 'a-b-c'
   * ```
   * @param {Array} `array`
   * @param {String} `sep` The separator to use.
   * @return {String}
   * @api public
   */


  var join$2 = function join(arr, sep) {
    if (utils.isEmpty(arr)) return '';
    return arr.join(typeof sep !== 'string' ? ', ' : sep);
  };
  /**
   * Sort the given `array`. If an array of objects is passed,
   * you may optionally pass a `key` to sort on as the second
   * argument. You may alternatively pass a sorting function as
   * the second argument.
   *
   * ```js
   * <%= sort(["b", "a", "c"]) %>
   * //=> 'a,b,c'
   *
   * <%= sort([{a: "zzz"}, {a: "aaa"}], "a") %>
   * //=> '[{"a":"aaa"},{"a":"zzz"}]'
   * ```
   * @param {Array} `array` the array to sort.
   * @param {String|Function} `key` The object key to sort by, or sorting function.
   * @api public
   */


  var sort = function sort(arr, key) {
    if (utils.isEmpty(arr)) return '';

    if (typeof key === 'function') {
      return arr.sort(key);
    }

    if (typeof key !== 'string') {
      return arr.sort();
    }

    return arr.sort(function (a, b) {
      if (object.isObject(a) && typeof a[key] === 'string') {
        return a[key].localeCompare(b[key]);
      }

      if (typeof a === 'string') {
        return a.localeCompare(b);
      }

      return a > b;
    });
  };
  /**
   * Returns the length of the given array.
   *
   * ```js
   * <%= length(['a', 'b', 'c']) %>
   * //=> 3
   * ```
   * @param  {Array} `array`
   * @return {Number} The length of the array.
   * @api public
   */


  var length = function length(arr) {
    if (utils.isEmpty(arr)) return '';
    return Array.isArray(arr) ? arr.length : 0;
  };
  /**
   * Returns an array with all falsey values removed.
   *
   * ```js
   * <%= compact([null, a, undefined, 0, false, b, c, '']) %>
   * //=> '["a", "b", "c"]'
   * ```
   * @param {Array} `arr`
   * @return {Array}
   * @api public
   */


  var compact = function compact(arr) {
    return !utils.isEmpty(arr) ? arr.filter(Boolean) : '';
  };
  /**
   * Return the difference between the first array and
   * additional arrays.
   *
   * ```js
   * <%= difference(["a", "c"], ["a", "b"]) %>
   * //=> '["c"]'
   * ```
   * @param  {Array} `array` The array to compare againts.
   * @param  {Array} `arrays` One or more additional arrays.
   * @return {Array}
   * @api public
   */


  var difference = function difference() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (utils.isEmpty(args)) return '';
    var a = args[0],
        b = args[1],
        c = args[2];
    var len = a.length;
    var arr = [];
    var rest;

    if (b == null) {
      return a;
    }

    if (c == null) {
      rest = b;
    } else {
      rest = utils.flatten(args.slice(1));
    }

    while (len--) {
      if (rest.indexOf(a[len]) === -1) {
        arr.unshift(a[len]);
      }
    }

    return arr;
  };
  /**
   * Return an array, free of duplicate values.
   *
   * ```js
   * <%= unique(['a', 'b', 'c', 'c']) %
   * => '["a", "b", "c"]'
   * ```
   * @param  {Array} `array` The array to uniquify
   * @return {Array} Duplicate-free array
   * @api public
   */


  var unique = function unique(arr) {
    if (utils.isEmpty(arr)) return '';
    var len = arr.length;
    var i = -1;

    while (i++ < len) {
      var j = i + 1;

      for (; j < arr.length; ++j) {
        if (arr[i] === arr[j]) {
          arr.splice(j--, 1);
        }
      }
    }

    return arr;
  };
  /**
   * Returns an array of unique values using strict equality for comparisons.
   *
   * ```js
   * <%= union(["a"], ["b"], ["c"]) %>
   * //=> '["a", "b", "c"]'
   * ```
   * @param {Array} `arr`
   * @return {Array}
   * @api public
   */


  var union = function union() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    return !utils.isEmpty(args) ? utils.union([], [].concat.apply([], args)) : '';
  };
  /**
   * Shuffle the items in an array.
   *
   * ```js
   * <%= shuffle(["a", "b", "c"]) %>
   * //=> ["c", "a", "b"]
   * ```
   * @param  {Array} `arr`
   * @return {Array}
   * @api public
   */


  var shuffle = function shuffle(arr) {
    var len = arr.length;
    var res = new Array(len);
    var i = -1;

    while (++i < len) {
      var rand = utils.random(0, i);

      if (i !== rand) {
        res[i] = res[rand];
      }

      res[rand] = arr[i];
    }

    return res;
  };

  var array = {
    isArray: isArray$1,
    arrayify: arrayify,
    first: first,
    last: last,
    before: before,
    after: after,
    each: each,
    map: map,
    join: join$2,
    sort: sort,
    length: length,
    compact: compact,
    difference: difference,
    unique: unique,
    union: union,
    shuffle: shuffle
  };

  var helpers = createCommonjsModule(function (module, exports) {

    var define = function define(obj, k, fn) {
      Reflect.defineProperty(obj, k, {
        enumerable: true,
        get: fn
      });
    };

    define(exports, 'string', function () {
      return string;
    });
    define(exports, 'path', function () {
      return path_1;
    });
    define(exports, 'object', function () {
      return object;
    });
    define(exports, 'math', function () {
      return math;
    });
    define(exports, 'html', function () {
      return html;
    });
    define(exports, 'fs', function () {
      return fs_1;
    });
    define(exports, 'conditional', function () {
      return conditional;
    });
    define(exports, 'collection', function () {
      return collection;
    });
    define(exports, 'code', function () {
      return code;
    });
    define(exports, 'array', function () {
      return array;
    });
  });

  /*!
   * template-helpers <https://github.com/jonschlinkert/template-helpers>
   *
   * Copyright (c) 2015-present, Jon Schlinkert.
   * Licensed under the MIT License.
   */


  var templateHelpers = function templateHelpers(key) {
    var res = {};

    if (typeof key === 'string') {
      res = helpers[key];
      res[key] = res;
      return res;
    }

    if (Array.isArray(key)) {
      return key.reduce(function (acc, k) {
        acc[k] = helpers[k];

        for (var _i = 0, _Object$keys = Object.keys(acc[k]); _i < _Object$keys.length; _i++) {
          var prop = _Object$keys[_i];
          acc[prop] = acc[k][prop];
        }

        return acc;
      }, {});
    }

    for (var _i2 = 0, _Object$keys2 = Object.keys(helpers); _i2 < _Object$keys2.length; _i2++) {
      var prop = _Object$keys2[_i2];
      var group = helpers[prop];
      res[prop] = group;

      for (var _i3 = 0, _Object$keys3 = Object.keys(group); _i3 < _Object$keys3.length; _i3++) {
        var k = _Object$keys3[_i3];
        res[k] = group[k];
      }
    }

    return res;
  };

  var ignoreHelpers = ['each'];

  var parseHelper = function parseHelper(helpers) {
    for (var name in helpers) {
      if (typeof helpers[name] !== 'function') {
        parseHelper(helpers[name]);
        continue;
      }

      if (ignoreHelpers.indexOf(name) > -1) {
        continue;
      }

      Handlebars.registerHelper(name, helpers[name]);
    }
  };

  var handlebarsHelpers = templateHelpers();
  parseHelper(handlebarsHelpers);
  var context = context || {};
  context['_hb'] = Handlebars;
  context["controls/date"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "    <label for=\"js-yext-date-min-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + alias4((helper = (helper = helpers.minLabel || (depth0 != null ? depth0.minLabel : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "minLabel",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "    <label for=\"js-yext-date-max-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + alias4((helper = (helper = helpers.maxLabel || (depth0 != null ? depth0.maxLabel : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "maxLabel",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "<fieldset>\n  <legend>" + alias4((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "</legend>\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.minLabel : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  <input\n    id=\"js-yext-date-min-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    type=\"date\"\n    class=\"js-yext-date\"\n    data-key=\"min\"\n    value=\"" + alias4((helper = (helper = helpers.dateMin || (depth0 != null ? depth0.dateMin : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "dateMin",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.maxLabel : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  <input\n    id=\"js-yext-date-max-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    type=\"date\"\n    class=\"js-yext-date\"\n    data-key=\"max\"\n    value=\"" + alias4((helper = (helper = helpers.dateMax || (depth0 != null ? depth0.dateMax : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "dateMax",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n</fieldset>";
    },
    "useData": true
  });
  Handlebars.registerPartial("controls/date", context["controls/date"]);
  context["controls/filteroptions"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "          <div class=\"yxt-FilterOptions-clickableLegend\" role=\"button\" tabindex=\"0\" aria-expanded=\"" + alias4((helper = (helper = helpers.expanded || (depth0 != null ? depth0.expanded : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "expanded",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n            <span class=\"yxt-FilterOptions-label\">" + alias4((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "label",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showNumberApplied : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.expanded : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0),
        "inverse": container.program(8, data, 0),
        "data": data
      })) != null ? stack1 : "") + "          </div>\n";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers.unless.call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.expanded : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.selectedCount : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(4, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "                  <span class=\"yxt-FilterOptions-selectedCount\">" + container.escapeExpression((helper = (helper = helpers.selectedCount || (depth0 != null ? depth0.selectedCount : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "selectedCount",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      return "              <span class=\"yxt-FilterOptions-expand yxt-FilterOptions-collapseUp\"\n                data-component=\"IconComponent\"\n                data-opts='{ \"iconName\": \"chevron\" }'></span>\n";
    },
    "8": function _(container, depth0, helpers, partials, data) {
      return "              <span class=\"yxt-FilterOptions-expand yxt-FilterOptions-collapseDown\"\n                data-component=\"IconComponent\"\n                data-opts='{ \"iconName\": \"chevron\" }'></span>\n";
    },
    "10": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "          <span class=\"yxt-FilterOptions-label\">" + container.escapeExpression((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "label",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n";
    },
    "12": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers.unless.call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.showExpand : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(13, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "13": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "          <button class=\"yxt-FilterOptions-reset yxt-FilterOptions-reset--right\">" + container.escapeExpression((helper = (helper = helpers.resetLabel || (depth0 != null ? depth0.resetLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "resetLabel",
        "hash": {},
        "data": data
      }) : helper)) + "</button>\n";
    },
    "15": function _(container, depth0, helpers, partials, data) {
      return "yxt-FilterOptions--collapsed";
    },
    "17": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.showExpand : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(18, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "18": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "        <button class=\"yxt-FilterOptions-reset\">" + container.escapeExpression((helper = (helper = helpers.resetLabel || (depth0 != null ? depth0.resetLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "resetLabel",
        "hash": {},
        "data": data
      }) : helper)) + "</button>\n";
    },
    "20": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depths[1] != null ? depths[1].isSingleOption : depths[1], {
        "name": "if",
        "hash": {},
        "fn": container.program(21, data, 0, blockParams, depths),
        "inverse": container.program(26, data, 0, blockParams, depths),
        "data": data
      })) != null ? stack1 : "";
    },
    "21": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          helper,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {},
          alias4 = helpers.helperMissing,
          alias5 = "function";
      return "          <div class=\"singleoption-option yxt-FilterOptions-option\">\n            <input\n              type=\"radio\"\n              class=\"js-yext-filter-option yxt-FilterOptions-input\"\n              id=\"js-yext-radio-" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "-" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              name=\"" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "\"\n              value=\"" + alias2((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "value",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              data-index=\"" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.selected : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(22, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ">\n            <label class=\"singleoption-label\" for=\"js-yext-radio-" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "-" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + alias2((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "label",
        "hash": {},
        "data": data
      }) : helper)) + " " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.countLabel : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(24, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</label>\n          </div>\n";
    },
    "22": function _(container, depth0, helpers, partials, data) {
      return "checked";
    },
    "24": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "(" + container.escapeExpression((helper = (helper = helpers.countLabel || (depth0 != null ? depth0.countLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "countLabel",
        "hash": {},
        "data": data
      }) : helper)) + ")";
    },
    "26": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          helper,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {},
          alias4 = helpers.helperMissing,
          alias5 = "function";
      return "          <div class=\"multioption-option yxt-FilterOptions-option\">\n            <input\n              type=\"checkbox\"\n              class=\"js-yext-filter-option yxt-FilterOptions-input\"\n              id=\"js-yext-checkbox-" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "-" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              value=\"" + alias2((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "value",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              data-index=\"" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.selected : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(22, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ">\n            <label class=\"yxt-FilterOptions-optionLabel\" for=\"js-yext-checkbox-" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "-" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + alias2((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "label",
        "hash": {},
        "data": data
      }) : helper)) + " " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.countLabel : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(24, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</label>\n          </div>\n";
    },
    "28": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "      <button class=\"yxt-FilterOptions-showToggle\">\n" + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.allShown : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(29, data, 0),
        "inverse": container.program(31, data, 0),
        "data": data
      })) != null ? stack1 : "") + "      </button>\n";
    },
    "29": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "          " + container.escapeExpression((helper = (helper = helpers.showLessLabel || (depth0 != null ? depth0.showLessLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "showLessLabel",
        "hash": {},
        "data": data
      }) : helper)) + "\n          <span class=\"yxt-FilterOptions-collapseUp\"\n            data-component=\"IconComponent\"\n            data-opts='{ \"iconName\": \"chevron\" }'></span>\n";
    },
    "31": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "          " + container.escapeExpression((helper = (helper = helpers.showMoreLabel || (depth0 != null ? depth0.showMoreLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "showMoreLabel",
        "hash": {},
        "data": data
      }) : helper)) + "\n          <span class=\"yxt-FilterOptions-collapseDown\"\n            data-component=\"IconComponent\"\n            data-opts='{ \"iconName\": \"chevron\" }'></span>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<fieldset class=\"yxt-FilterOptions-fieldSet\">\n  <legend class=\"yxt-FilterOptions-legend\">\n    <div class=\"yxt-FilterOptions-legendLabel\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showExpand : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0, blockParams, depths),
        "inverse": container.program(10, data, 0, blockParams, depths),
        "data": data
      })) != null ? stack1 : "") + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showReset : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(12, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </div>\n  </legend>\n\n  <div class=\"yxt-FilterOptions-container " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.expanded : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(15, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showReset : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(17, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n    <div class='yxt-FilterOptions-options'>\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.options : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(20, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </div>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showMore : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(28, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </div>\n</fieldset>\n";
    },
    "useData": true,
    "useDepths": true
  });
  Handlebars.registerPartial("controls/filteroptions", context["controls/filteroptions"]);
  context["controls/geolocation"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      return "disabled";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "            <img src=\"" + container.escapeExpression((helper = (helper = helpers.geoButtonIcon || (depth0 != null ? depth0.geoButtonIcon : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "geoButtonIcon",
        "hash": {},
        "data": data
      }) : helper)) + "\" class=\"yxt-GeoLocationFilter-buttonImage\" alt=\"Use My Location\">\n";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      return "sr-only";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "<div class=\"yxt-GeoLocationFilter\">\n  <h1 class=\"yxt-GeoLocationFilter-title\">" + alias4((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "</h1>\n  <div class=\"yxt-GeoLocationFilter-container\">\n    <div class=\"yxt-GeoLocationFilter-query\">\n      <form class=\"yxt-GeoLocationFilter-form\">\n        <label class=\"yxt-GeoLocationFilter-label\" for=\"query\">" + alias4((helper = (helper = helpers.labelText || (depth0 != null ? depth0.labelText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "labelText",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n        <input class=\"js-yxt-GeoLocationFilter-input yxt-GeoLocationFilter-input\" type=\"text\" name=\"query\" value=\"" + alias4((helper = (helper = helpers.geoValue || (depth0 != null ? depth0.geoValue : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "geoValue",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n          placeholder=\"" + alias4((helper = (helper = helpers.geoPlaceholder || (depth0 != null ? depth0.geoPlaceholder : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "geoPlaceholder",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n        >\n        <button type=\"button\" class=\"js-yxt-GeoLocationFilter-button yxt-GeoLocationFilter-button\" " + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.geoError : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.geoButtonIcon : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "          <span class=\"yxt-GeoLocationFilter-buttonText " + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.geoButtonIcon : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\">\n            " + alias4((helper = (helper = helpers.geoButtonText || (depth0 != null ? depth0.geoButtonText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "geoButtonText",
        "hash": {},
        "data": data
      }) : helper)) + "\n          </span>\n        </button>\n      </form>\n    </div>\n    <div class=\"js-yxt-GeoLocationFilter-autocomplete yxt-GeoLocationFilter-autocomplete\"></div>\n  </div>\n</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("controls/geolocation", context["controls/geolocation"]);
  context["controls/range"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "    <label for=\"js-yext-range-min-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + alias4((helper = (helper = helpers.minLabel || (depth0 != null ? depth0.minLabel : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "minLabel",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "    <label for=\"js-yext-range-max-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + alias4((helper = (helper = helpers.maxLabel || (depth0 != null ? depth0.maxLabel : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "maxLabel",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "<fieldset>\n  <legend>" + alias4((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "</legend>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.minLabel : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  <input\n    id=\"js-yext-range-min-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    type=\"number\"\n    class=\"js-yext-range\"\n    placeholder=\"Min\"\n    max=\"" + alias4((helper = (helper = helpers.max || (depth0 != null ? depth0.max : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "max",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    data-key=\"min\"\n    value=\"" + alias4((helper = (helper = helpers.minValue || (depth0 != null ? depth0.minValue : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "minValue",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.maxLabel : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  <input\n    id=\"js-yext-range-max-" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    type=\"number\"\n    class=\"js-yext-range\"\n    placeholder=\"Max\"\n    min=\"" + alias4((helper = (helper = helpers.min || (depth0 != null ? depth0.min : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "min",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    data-key=\"max\"\n    value=\"" + alias4((helper = (helper = helpers.maxValue || (depth0 != null ? depth0.maxValue : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "maxValue",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n</fieldset>";
    },
    "useData": true
  });
  Handlebars.registerPartial("controls/range", context["controls/range"]);
  context["controls/sortoptions"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "    <button class='yxt-SortOptions-reset'>" + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.resetLabel : stack1, depth0)) + "</button>\n";
    },
    "3": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          helper,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {},
          alias4 = helpers.helperMissing,
          alias5 = "function";
      return "        <div class='yxt-SortOptions-option'>\n          <input\n            type='radio'\n            name='yxt-SortOptions-radio_" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "'\n            id='yxt-SortOptions-option_" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "_" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "'\n            value='" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "'\n            class='" + alias2(alias1((stack1 = depths[1] != null ? depths[1]._config : depths[1]) != null ? stack1.optionSelector : stack1, depth0)) + "'\n            " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.isSelected : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(4, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n          >\n          <label class='yxt-SortOptions-optionLabel' for='yxt-SortOptions-option_" + alias2(alias1(depths[1] != null ? depths[1].name : depths[1], depth0)) + "_" + alias2((helper = (helper = helpers.index || data && data.index) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + "'>\n            " + alias2(alias1(depth0 != null ? depth0.label : depth0, depth0)) + "\n          </label>\n        </div>\n";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      return " checked ";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.hideExcessOptions : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(7, data, 0),
        "inverse": container.program(9, data, 0),
        "data": data
      })) != null ? stack1 : "";
    },
    "7": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "        <button class='yxt-SortOptions-showToggle'>\n          " + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.showMoreLabel : stack1, depth0)) + "\n          <span class='yxt-SortOptions-collapseDown'\n            data-component='IconComponent'\n            data-opts='{ \"iconName\": \"chevron\" }'></span>\n        </button>\n";
    },
    "9": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "        <button class='yxt-SortOptions-showToggle'>\n          " + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.showLessLabel : stack1, depth0)) + "\n          <span class='yxt-SortOptions-collapseUp'\n            data-component='IconComponent'\n            data-opts='{ \"iconName\": \"chevron\" }'></span>\n        </button>\n";
    },
    "11": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "    <button type='button' class='yxt-SortOptions-apply'>\n      " + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.applyLabel : stack1, depth0)) + "\n    </button>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<fieldset class='yxt-SortOptions-fieldSet'>\n  <legend class='yxt-SortOptions-legend'>\n    <div class='yxt-SortOptions-legendLabel'>\n      " + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.label : stack1, depth0)) + "\n    </div>\n  </legend>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showReset : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n  <div class='yxt-SortOptions-container'>\n    <div class='yxt-SortOptions-options'>\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.options : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(3, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </div>\n\n" + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.showMore : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </div>\n\n" + ((stack1 = helpers.unless.call(alias1, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.searchOnChange : stack1, {
        "name": "unless",
        "hash": {},
        "fn": container.program(11, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</fieldset>\n\n\n";
    },
    "useData": true,
    "useDepths": true
  });
  Handlebars.registerPartial("controls/sortoptions", context["controls/sortoptions"]);
  context["icons/icon"] = Handlebars.template({
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function";
      return "<div class=\"Icon Icon--" + container.escapeExpression((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\" aria-hidden=\"true\">\n  " + ((stack1 = (helper = (helper = helpers.image || (depth0 != null ? depth0.image : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "image",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "\n</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("icons/icon", context["icons/icon"]);
  context["filters/facets"] = Handlebars.template({
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      return "<div class=\"js-yxt-Facets yxt-Facets-container\">\n\n</div>";
    },
    "useData": true
  });
  Handlebars.registerPartial("filters/facets", context["filters/facets"]);
  context["filters/filterbox"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "    <h2 class=\"yxt-FilterBox-titleContainer\">\n      <div\n        data-component=\"IconComponent\"\n        data-opts='{ \"iconName\": \"elements\" }'>\n      </div>\n      <span class=\"yxt-FilterBox-title\">" + container.escapeExpression((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n    </h2>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "    <div class=\"js-yext-filterbox-filter" + container.escapeExpression((helper = (helper = helpers.index || data && data.index) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "index",
        "hash": {},
        "data": data
      }) : helper)) + " yxt-FilterBox-filter\">\n    </div>\n";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "    <div class=\"yxt-FilterBox-controls\">\n      <button type=\"button\"\n              class=\"js-yext-filterbox-apply yxt-FilterBox-apply\">\n        " + container.escapeExpression((helper = (helper = helpers.applyLabel || (depth0 != null ? depth0.applyLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "applyLabel",
        "hash": {},
        "data": data
      }) : helper)) + "\n      </button>" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showReset : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </div>\n";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "<button type=\"button\" class=\"js-yxt-FilterBox-reset yxt-FilterBox-reset\">\n          " + container.escapeExpression((helper = (helper = helpers.resetLabel || (depth0 != null ? depth0.resetLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "resetLabel",
        "hash": {},
        "data": data
      }) : helper)) + "\n        </button>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<div class=\"yxt-FilterBox-container\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.title : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.filterConfigs : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showApplyButton : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("filters/filterbox", context["filters/filterbox"]);
  context["navigation/navigation"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      return " yxt-Nav-static";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "      <li>\n        <a class=\"js-yxt-navItem yxt-Nav-item" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.isActive : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(4, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n          href=\"" + alias4((helper = (helper = helpers.url || (depth0 != null ? depth0.url : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "url",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n          data-eventtype=\"" + ((stack1 = helpers["if"].call(alias1, data && data.first, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0),
        "inverse": container.program(8, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n          data-eventoptions='{\"verticalConfigId\": \"" + alias4((helper = (helper = helpers.configId || (depth0 != null ? depth0.configId : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "configId",
        "hash": {},
        "data": data
      }) : helper)) + "\"}'\n        >\n          " + alias4((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "label",
        "hash": {},
        "data": data
      }) : helper)) + "\n        </a>\n      </li>\n";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      return " is-active";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      return "ALL_TAB_NAVIGATION";
    },
    "8": function _(container, depth0, helpers, partials, data) {
      return "VERTICAL_TAB_NAVIGATION";
    },
    "10": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "    <div class=\"yxt-Nav-moreContainer\">\n      <button id=\"yxt-Nav-moreButton\" class=\"yxt-Nav-item yxt-Nav-more yxt-Nav-item--more js-yxt-navMore\">\n        <span class=\"yxt-Nav-moreIcon\"\n        data-component=\"IconComponent\"\n        data-opts='{\"iconName\": \"" + alias4((helper = (helper = helpers.overflowIcon || (depth0 != null ? depth0.overflowIcon : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "overflowIcon",
        "hash": {},
        "data": data
      }) : helper)) + "\"}'\n        data-prop=\"icon\"></span>\n        " + alias4((helper = (helper = helpers.overflowLabel || (depth0 != null ? depth0.overflowLabel : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "overflowLabel",
        "hash": {},
        "data": data
      }) : helper)) + "\n      </button>\n      <ul class=\"yxt-Nav-modal js-yxt-navModal " + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.expanded : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(11, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n        aria-labelledby=\"yxt-Nav-moreButton\"\n      ></ul>\n    </div>\n";
    },
    "11": function _(container, depth0, helpers, partials, data) {
      return "is-active";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<nav class=\"yxt-Nav-container js-yxt-navContainer " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showCollapse : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\">\n  <ul class=\"yxt-Nav-expanded\" aria-label=\"" + container.escapeExpression((helper = (helper = helpers.ariaLabel || (depth0 != null ? depth0.ariaLabel : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "ariaLabel",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.tabs : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </ul>\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.showCollapse : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(10, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</nav>";
    },
    "useData": true
  });
  Handlebars.registerPartial("navigation/navigation", context["navigation/navigation"]);
  context["questions/questionsubmission"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      return "true";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      return "false";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      return "--expanded";
    },
    "7": function _(container, depth0, helpers, partials, data) {
      return "--collapsed";
    },
    "9": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "\n" + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.questionSubmitted : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(10, data, 0),
        "inverse": container.program(12, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\n";
    },
    "10": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = container.escapeExpression;
      return "      <div id=\"yxt-QuestionSubmission-form-" + alias1((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\" class=\"yxt-QuestionSubmission-form\">\n        <div class=\"yxt-QuestionSubmission-formRow\">\n          " + alias1(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.questionSubmissionConfirmationText : stack1, depth0)) + "\n        </div>\n      </div>\n";
    },
    "12": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "      <form id=\"yxt-QuestionSubmission-form-" + container.escapeExpression((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\" class=\"yxt-QuestionSubmission-form\" novalidate autocomplete=\"off\">\n" + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.network : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(13, data, 0),
        "inverse": container.program(15, data, 0),
        "data": data
      })) != null ? stack1 : "") + "      </form>\n\n";
    },
    "13": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "          <div class=\"yxt-QuestionSubmission-formRow\">\n            <div class=\"yxt-QuestionSubmission-formError\" role=\"alert\">\n              " + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.network : stack1, depth0)) + "\n            </div>\n          </div>\n";
    },
    "15": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {},
          alias4 = helpers.helperMissing,
          alias5 = "function";
      return "          <div class=\"yxt-QuestionSubmission-formRow\">\n            " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.description : stack1, depth0)) + "\n          </div>\n\n          <div class=\"yxt-QuestionSubmission-formRow\">\n            <div class=\"yxt-QuestionSubmission-formField\">\n              <label>\n                <span class=\"yxt-QuestionSubmission-formLabel\">\n                  " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.questionLabel : stack1, depth0)) + "\n                </span>\n                <textarea class=\"yxt-QuestionSubmission-formInput js-question-field js-question-text" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.questionTextError : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(16, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n                          name=\"questionText\"\n                          placeholder=\"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.questionInputPlaceholder : stack1, depth0)) + "\"\n                          required>" + alias2((helper = (helper = helpers.questionText || (depth0 != null ? depth0.questionText : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "questionText",
        "hash": {},
        "data": data
      }) : helper)) + "</textarea>\n              </label>\n            </div>\n          </div>\n\n          <div class=\"yxt-QuestionSubmission-formRow\">\n            <div class=\"yxt-QuestionSubmission-formField\">\n              <label>\n                <span class=\"yxt-QuestionSubmission-formLabel\">\n                  " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.nameLabel : stack1, depth0)) + "\n                </span>\n                <input class=\"yxt-QuestionSubmission-formInput js-question-field" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.nameError : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(16, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.requiredInputPlaceholder : stack1, depth0)) + "\"\n                  value=\"" + alias2((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n                  required>\n              </label>\n            </div>\n\n            <div class=\"yxt-QuestionSubmission-formField\">\n              <label>\n                <span class=\"yxt-QuestionSubmission-formLabel\">\n                  " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.emailLabel : stack1, depth0)) + "\n                </span>\n                <input class=\"yxt-QuestionSubmission-formInput js-question-field" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.emailError : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(16, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.requiredInputPlaceholder : stack1, depth0)) + "\"\n                    value=\"" + alias2((helper = (helper = helpers.email || (depth0 != null ? depth0.email : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "email",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n                    required>\n              </label>\n              <strong class='yxt-QuestionSubmission-inputError'>" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.emailErrorText : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(18, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</strong>\n            </div>\n          </div>\n\n          <div class=\"yxt-QuestionSubmission-acknowledgementBar\">\n            <div class=\"yxt-QuestionSubmission-acknowledgement\">\n              <span class=\"yxt-QuestionSubmission-privacyPolicy\">\n                <input type=\"checkbox\"\n                    id=\"yxt-QuestionSubmission-ackCheckboxInput-" + alias2((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n                    name=\"privacyPolicy\"\n                    class=\"yxt-QuestionSubmission-ackCheckboxInput js-question-field" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.privacyPolicyError : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(16, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n                    required\n                >\n                <span>\n                  <label class=\"yxt-QuestionSubmission-privacyPolicyText\" for=\"yxt-QuestionSubmission-ackCheckboxInput-" + alias2((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias4, _typeof(helper) === alias5 ? helper.call(alias3, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n                    " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.privacyPolicyText : stack1, depth0)) + "\n" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.privacyPolicyUrl : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(20, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "                  </label>\n                  <strong class='yxt-QuestionSubmission-inputError'>" + ((stack1 = helpers["if"].call(alias3, (stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.privacyPolicyErrorText : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(22, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</strong>\n                </span>\n              </span>\n            </div>\n            <button class=\"yxt-QuestionSubmission-submitButton\" type=\"submit\">" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.buttonLabel : stack1, depth0)) + "</button>\n          </div>\n";
    },
    "16": function _(container, depth0, helpers, partials, data) {
      return " yxt-required-error";
    },
    "18": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.emailErrorText : stack1, depth0));
    },
    "20": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression;
      return "                      <a class=\"yxt-QuestionSubmission-privacyPolicyUrl\" href=\"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.privacyPolicyUrl : stack1, depth0)) + "\" target=\"_blank\">\n                        " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.privacyPolicyUrlLabel : stack1, depth0)) + "\n                      </a>\n";
    },
    "22": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0.errors : depth0) != null ? stack1.privacyPolicyErrorText : stack1, depth0));
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = container.escapeExpression,
          alias3 = container.lambda;
      return "\n<section class=\"yxt-QuestionSubmission\">\n\n  <button\n    class=\"yxt-QuestionSubmission-titleBar js-content-visibility-toggle\"\n    tabindex=\"0\"\n    aria-label=\"expand question form\"\n    aria-controls=\"yxt-QuestionSubmission-form-" + alias2((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n    aria-expanded=\"" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.questionExpanded : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.program(3, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\">\n    <div class=\"yxt-QuestionSubmission-left\">\n      <div class=\"yxt-QuestionSubmission-titleIconWrapper\"\n          data-component=\"IconComponent\"\n          data-opts='{\n              \"iconName\": \"" + alias2(alias3((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.sectionTitleIconName : stack1, depth0)) + "\"\n            }'\n          data-prop=\"icon\"\n      ></div>\n      <div class=\"yxt-QuestionSubmission-title\">\n        " + alias2(alias3((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.sectionTitle : stack1, depth0)) + "\n      </div>\n    </div>\n    <div class=\"yxt-QuestionSubmission-right\">\n      <div class=\"yxt-QuestionSubmission-titleDescription\">\n        " + alias2(alias3((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.teaser : stack1, depth0)) + "\n      </div>\n      <span class=\"yxt-QuestionSubmission-toggle" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.questionExpanded : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.program(7, data, 0),
        "data": data
      })) != null ? stack1 : "") + " yxt-QuestionSubmission-toggle\"\n        data-component=\"IconComponent\"\n        data-opts='{ \"iconName\": \"chevron\" }'\n        data-prop=\"icon\"\n      ></span>\n    </div>\n  </button>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.questionExpanded : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(9, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n</section>";
    },
    "useData": true
  });
  Handlebars.registerPartial("questions/questionsubmission", context["questions/questionsubmission"]);
  context["results/directanswer"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function";
      return "      <div class=\"yxt-DirectAnswer-viewMoreWrapper\">\n        <a class=\"yxt-DirectAnswer-viewMore\"\n           href=\"" + ((stack1 = container.lambda((stack1 = (stack1 = depth0 != null ? depth0.relatedItem : depth0) != null ? stack1.data : stack1) != null ? stack1.website : stack1, depth0)) != null ? stack1 : "") + "\"\n           data-eventtype=\"CTA_CLICK\"\n           data-eventoptions=\"" + container.escapeExpression((helper = (helper = helpers.eventOptions || (depth0 != null ? depth0.eventOptions : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "eventOptions",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n           target=\"" + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.linkTarget : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0),
        "inverse": container.program(4, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\">\n          " + ((stack1 = (helper = (helper = helpers.viewDetailsText || (depth0 != null ? depth0.viewDetailsText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "viewDetailsText",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "\n        </a>\n      </div>\n";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.linkTarget : stack1, depth0));
    },
    "4": function _(container, depth0, helpers, partials, data) {
      return "_blank";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      return "      <div class=\"yxt-DirectAnswer-footerText\">\n          Thank you for your feedback!\n      </div>\n";
    },
    "8": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "        <div class=\"yxt-DirectAnswer-footerText\">\n          " + ((stack1 = container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.footerText : stack1, depth0)) != null ? stack1 : "") + "\n        </div>\n        <form class=\"yxt-DirectAnswer-thumbs js-directAnswer-feedback-form\">\n          <label class=\"yxt-DirectAnswer-thumb\">\n            <span class=\"yxt-DirectAnswer-thumbUpIcon\"\n                 data-component=\"IconComponent\"\n                 data-opts='{\"iconName\": \"thumb\"}'\n                 data-prop=\"icon\"\n            ></span>\n            <input type=\"radio\"\n                   name=\"feedback\"\n                   value=\"true\"\n                   class=\"yxt-DirectAnswer-feedback yxt-DirectAnswer-thumbUpButton js-directAnswer-thumbUp\">\n            <span class=\"sr-only\">\n              This answered my question\n            </span>\n          </label>\n          <label class=\"yxt-DirectAnswer-thumb\">\n            <span class=\"yxt-DirectAnswer-thumbDownIcon\"\n                 data-component=\"IconComponent\"\n                 data-opts='{\"iconName\": \"thumb\"}'\n                 data-prop=\"icon\"\n            ></span>\n            <input type=\"radio\"\n                   name=\"feedback\"\n                   value=\"false\"\n                   class=\"yxt-DirectAnswer-feedback yxt-DirectAnswer-thumbDownButton js-directAnswer-thumbDown\">\n            <span class=\"sr-only\">\n              This did not answer my question\n            </span>\n          </label>\n          <button type=\"submit\" class=\"sr-only sr-only-focusable\">Send feedback</button>\n        </form>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression,
          alias5 = container.lambda;
      return "<div class=\"yxt-DirectAnswer\">\n  <div class=\"yxt-DirectAnswer-title\">\n    <div class=\"yxt-Results-titleIconWrapper\"\n         data-component=\"IconComponent\"\n         data-opts='{\n            \"iconName\": \"" + alias4((helper = (helper = helpers.iconName || (depth0 != null ? depth0.iconName : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "iconName",
        "hash": {},
        "data": data
      }) : helper)) + "\",\n            \"customIcon\": \"" + alias4((helper = (helper = helpers.customIcon || (depth0 != null ? depth0.customIcon : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "customIcon",
        "hash": {},
        "data": data
      }) : helper)) + "\",\n            \"iconUrl\": \"" + alias4((helper = (helper = helpers.customIconUrl || (depth0 != null ? depth0.customIconUrl : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "customIconUrl",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n          }'\n         data-prop=\"icon\"\n    ></div>\n    <h2 class=\"yxt-DirectAnswer-titleText\">\n      <span class=\"yxt-DirectAnswer-entityName\">\n        " + ((stack1 = alias5((stack1 = depth0 != null ? depth0.answer : depth0) != null ? stack1.entityName : stack1, depth0)) != null ? stack1 : "") + "\n      </span>\n      <span class=\"yxt-DirectAnswer-slash\">\n        /\n      </span>\n      <span class=\"yxt-DirectAnswer-fieldName\">\n        " + ((stack1 = alias5((stack1 = depth0 != null ? depth0.answer : depth0) != null ? stack1.fieldName : stack1, depth0)) != null ? stack1 : "") + "\n      </span>\n    </h2>\n  </div>\n  <div class=\"yxt-DirectAnswer-content\">\n    <div class=\"yxt-DirectAnswer-fieldValue\">\n      " + ((stack1 = alias5((stack1 = depth0 != null ? depth0.answer : depth0) != null ? stack1.value : stack1, depth0)) != null ? stack1 : "") + "\n    </div>\n" + ((stack1 = helpers["if"].call(alias1, (stack1 = (stack1 = depth0 != null ? depth0.relatedItem : depth0) != null ? stack1.data : stack1) != null ? stack1.website : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </div>\n  <div class=\"yxt-DirectAnswer-footerWrapper\">\n    <div class=\"yxt-DirectAnswer-footer\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.feedbackSubmitted : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0),
        "inverse": container.program(8, data, 0),
        "data": data
      })) != null ? stack1 : "") + "    </div>\n  </div>\n</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/directanswer", context["results/directanswer"]);
  context["results/eventresultsitem"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "      <li class=\"yext-event-photo\">\n        <img src=\"" + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0.image : depth0) != null ? stack1.url : stack1, depth0)) + "\" width=50 height=50>\n      </li>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      return "        <li class=\"yext-event-performer\">" + container.escapeExpression(container.lambda(depth0, depth0)) + "</li>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "<li class=\"yext-event-result-item\">\n  <div class=\"yext-event-result-item-info\">\n    <h3>" + alias4((helper = (helper = helpers.venueName || (depth0 != null ? depth0.venueName : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "venueName",
        "hash": {},
        "data": data
      }) : helper)) + "<h3>\n    <h4 class=\"yext-event-description\">" + alias4((helper = (helper = helpers.description || (depth0 != null ? depth0.description : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "description",
        "hash": {},
        "data": data
      }) : helper)) + "</h4>\n    <ul class=\"yext-event-photo-container\">\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.photoGallery : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </ul>\n\n    <ul class=\"yext-event-performer-container\">\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.performers : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </ul>\n  </div>\n</li>";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/eventresultsitem", context["results/eventresultsitem"]);
  context["results/locationresultsitem"] = Handlebars.template({
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression,
          alias5 = container.lambda;
      return "<li class=\"yext-location-result-item\">\n  <div class=\"yext-location-result-item-info\">\n    <h3 class=\"yext-location-name\">" + alias4((helper = (helper = helpers.name || (depth0 != null ? depth0.name : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "name",
        "hash": {},
        "data": data
      }) : helper)) + "</h3>\n\n    <div class=\"yext-location-info\">\n      <span class=\"yext-address\">\n        " + alias4(alias5((stack1 = depth0 != null ? depth0.address : depth0) != null ? stack1.line1 : stack1, depth0)) + ", " + alias4(alias5((stack1 = depth0 != null ? depth0.address : depth0) != null ? stack1.city : stack1, depth0)) + ", " + alias4(alias5((stack1 = depth0 != null ? depth0.address : depth0) != null ? stack1.region : stack1, depth0)) + ", " + alias4(alias5((stack1 = depth0 != null ? depth0.address : depth0) != null ? stack1.postalCode : stack1, depth0)) + "\n      </span>\n      <div>\n        <span class=\"yext-phone\">Phone: " + alias4((helper = (helper = helpers.mainPhone || (depth0 != null ? depth0.mainPhone : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "mainPhone",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n      </div>\n    </div>\n  </div>\n</li>";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/locationresultsitem", context["results/locationresultsitem"]);
  context["results/map"] = Handlebars.template({
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      return "";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/map", context["results/map"]);
  context["results/noresults"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "      <p class=\"yxt-NoResults-returnLinkWrapper\">\n        Try refining your query or <a href=\"" + container.escapeExpression((helper = (helper = helpers.universalUrl || (depth0 != null ? depth0.universalUrl : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "universalUrl",
        "hash": {},
        "data": data
      }) : helper)) + "\" class=\"yxt-NoResults-returnLink\">search all content.</a>\n      </p>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<div class=\"yxt-NoResults\">\n  <div class=\"yxt-NoResults-wrapper\">\n    <p class=\"yxt-NoResults-info\">\n      Your search - <span class=\"yxt-NoResults-query\">" + container.escapeExpression((helper = (helper = helpers.query || (depth0 != null ? depth0.query : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "query",
        "hash": {},
        "data": data
      }) : helper)) + "</span> - did not match any answers we have.\n    </p>\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.universalUrl : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    <div class=\"yxt-NoResults-suggestions\">\n      <p class=\"yxt-NoResults-suggestionsHeader\">Suggestions:</p>\n      <ul class=\"yxt-NoResults-suggestionsList\">\n        <li class=\"yxt-NoResults-suggestion\">Make sure all words are spelled correctly.</li>\n        <li class=\"yxt-NoResults-suggestion\">Try to ask your question a different way.</li>\n        <li class=\"yxt-NoResults-suggestion\">Try more general words.</li>\n        <li class=\"yxt-NoResults-suggestion\">Try fewer words.</li>\n      </ul>\n    </div>\n  </div>\n</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/noresults", context["results/noresults"]);
  context["results/pagination"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "  <div class=\"yxt-Pagination\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.firstPageButtonEnabled : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    <button class=\"yxt-Pagination-button js-yxt-Pagination-previous " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showPreviousPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n      " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showPreviousPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n      data-eventtype=\"BACKWARD_PAGINATE\"\n      data-eventoptions='{\"furthermost\":false, \"pageNumber\":" + alias4((helper = (helper = helpers.pageNumber || (depth0 != null ? depth0.pageNumber : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "pageNumber",
        "hash": {},
        "data": data
      }) : helper)) + " }'\n    >\n      <span class=\"yxt-Pagination-chevron--left\"\n            data-component=\"IconComponent\"\n            data-opts='{ \"iconName\": \"chevron\" }'></span>\n    </button>\n\n    <span class=\"yxt-Pagination-page\">Page " + alias4((helper = (helper = helpers.pageNumber || (depth0 != null ? depth0.pageNumber : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "pageNumber",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n\n    <button class=\"yxt-Pagination-button js-yxt-Pagination-next " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showNextPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n      " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showNextPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n      data-eventtype=\"FORWARD_PAGINATE\"\n      data-eventoptions='{\"furthermost\":false, \"pageNumber\":" + alias4((helper = (helper = helpers.pageNumber || (depth0 != null ? depth0.pageNumber : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "pageNumber",
        "hash": {},
        "data": data
      }) : helper)) + " }'\n    >\n      <span class=\"yxt-Pagination-chevron\"\n            data-component=\"IconComponent\"\n            data-opts='{ \"iconName\": \"chevron\" }'></span>\n    </button>\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.lastPageButtonEnabled : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(7, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </div>\n";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "      <button class=\"yxt-Pagination-button js-yxt-Pagination-first " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showFirstPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n        " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showFirstPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n        data-eventtype=\"BACKWARD_PAGINATE\"\n        data-eventoptions='{\"furthermost\":true, \"pageNumber\":" + container.escapeExpression((helper = (helper = helpers.pageNumber || (depth0 != null ? depth0.pageNumber : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "pageNumber",
        "hash": {},
        "data": data
      }) : helper)) + " }'\n      >\n        <span class=\"yxt-Pagination-doubleChevron--left\"\n              data-component=\"IconComponent\"\n              data-opts='{ \"iconName\": \"chevron\" }'></span>\n        <span class=\"yxt-Pagination-chevron--left\"\n              data-component=\"IconComponent\"\n              data-opts='{ \"iconName\": \"chevron\" }'></span>\n      </button>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      return "yxt-Pagination--hidden";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      return "disabled";
    },
    "7": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "      <button class=\"yxt-Pagination-button js-yxt-Pagination-last " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showLastPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n        " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.showLastPageButton : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n        data-eventtype=\"FORWARD_PAGINATE\"\n        data-eventoptions='{\"furthermost\":true, \"pageNumber\":" + container.escapeExpression((helper = (helper = helpers.pageNumber || (depth0 != null ? depth0.pageNumber : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "pageNumber",
        "hash": {},
        "data": data
      }) : helper)) + " }'\n      >\n        <span class=\"yxt-Pagination-doubleChevron\"\n              data-component=\"IconComponent\"\n              data-opts='{ \"iconName\": \"chevron\" }'></span>\n        <span class=\"yxt-Pagination-chevron\"\n              data-component=\"IconComponent\"\n              data-opts='{ \"iconName\": \"chevron\" }'></span>\n      </button>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.showControls : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/pagination", context["results/pagination"]);
  context["results/resultitems"] = Handlebars.template({
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      return "<ul class=\"yxt-Results-items\"\n  data-component=\"ResultsItemComponent\"\n  data-prop=\"results\">\n</ul>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/resultitems", context["results/resultitems"]);
  context["results/results"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.showNoResults : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0),
        "inverse": container.program(4, data, 0),
        "data": data
      })) != null ? stack1 : "";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = container.invokePartial(partials["results/noresults"], depth0, {
        "name": "results/noresults",
        "data": data,
        "indent": "    ",
        "helpers": helpers,
        "partials": partials,
        "decorators": container.decorators
      })) != null ? stack1 : "";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "    <section class=\"yxt-Results yxt-Results--" + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.modifier : stack1, depth0)) + "\">\n" + ((stack1 = container.invokePartial(partials["results/resultssectionheader"], depth0, {
        "name": "results/resultssectionheader",
        "data": data,
        "indent": "      ",
        "helpers": helpers,
        "partials": partials,
        "decorators": container.decorators
      })) != null ? stack1 : "") + ((stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.includeMap : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ((stack1 = container.invokePartial(partials["results/resultitems"], depth0, {
        "name": "results/resultitems",
        "data": data,
        "indent": "      ",
        "helpers": helpers,
        "partials": partials,
        "decorators": container.decorators
      })) != null ? stack1 : "") + "    </section>\n";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      return "        <div class=\"yxt-Results-map\"\n             data-component=\"Map\"\n             data-prop=\"map\">\n        </div>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.isSearchComplete : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "usePartial": true,
    "useData": true
  });
  Handlebars.registerPartial("results/results", context["results/results"]);
  context["results/resultsaccordion"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.showNoResults : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0),
        "inverse": container.program(4, data, 0),
        "data": data
      })) != null ? stack1 : "";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = container.invokePartial(partials["results/noresults"], depth0, {
        "name": "results/noresults",
        "data": data,
        "indent": "    ",
        "helpers": helpers,
        "partials": partials,
        "decorators": container.decorators
      })) != null ? stack1 : "";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "    <section class=\"yxt-Accordion yxt-Results yxt-Results--" + container.escapeExpression((helper = (helper = helpers.modifier || (depth0 != null ? depth0.modifier : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "modifier",
        "hash": {},
        "data": data
      }) : helper)) + "\">\n" + ((stack1 = container.invokePartial(partials["results/resultssectionheader"], depth0, {
        "name": "results/resultssectionheader",
        "data": data,
        "indent": "      ",
        "helpers": helpers,
        "partials": partials,
        "decorators": container.decorators
      })) != null ? stack1 : "") + "      <ul class=\"yxt-Accordion-list yxt-Results-items\"\n          data-prop=\"results\">\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.results : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "      </ul>\n    </section>\n";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {};
      return "          <li id=\"accordion-" + alias2(alias1(depth0 != null ? depth0.id : depth0, depth0)) + "\"\n              class=\"yxt-AccordionResult js-yxt-AccordionResult\n                    " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.collapsed : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n                    " + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.modifier : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(8, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\">\n            <h3 class=\"yxt-AccordionResult-title\">\n              <button class=\"yxt-AccordionResult-toggle js-yxt-AccordionResult-toggle\"\n                      aria-expanded=\"" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.collapsed : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(10, data, 0),
        "inverse": container.program(12, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n                      aria-controls=\"#" + alias2(alias1(depth0 != null ? depth0.id : depth0, depth0)) + "\"\n                      data-entity-id=\"" + alias2(alias1(depth0 != null ? depth0.id : depth0, depth0)) + "\">\n                " + alias2(alias1(depth0 != null ? depth0.title : depth0, depth0)) + "\n                <div class=\"yxt-AccordionResult-indicatorWrapper\" aria-hidden=\"true\">\n                  <span class=\"yxt-AccordionResult-indicator\"\n                        data-component=\"IconComponent\"\n                        data-opts='{\"iconName\": \"chevron\"}'\n                        data-prop=\"icon\"></span>\n                </div>\n              </button>\n            </h3>\n            <div class=\"yxt-AccordionResult-body js-yxt-AccordionResult-body\" id=\"" + alias2(alias1(depth0 != null ? depth0.id : depth0, depth0)) + "\">\n              <div class=\"yxt-AccordionResult-content\">\n                <div class=\"yxt-AccordionResult-details\">" + ((stack1 = alias1(depth0 != null ? depth0.details : depth0, depth0)) != null ? stack1 : "") + "</div>\n" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.callsToAction : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(14, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "              </div>\n            </div>\n          </li>\n";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      return " is-collapsed";
    },
    "8": function _(container, depth0, helpers, partials, data) {
      var helper;
      return " yxt-AccordionResult--" + container.escapeExpression((helper = (helper = helpers.modifier || (depth0 != null ? depth0.modifier : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "modifier",
        "hash": {},
        "data": data
      }) : helper));
    },
    "10": function _(container, depth0, helpers, partials, data) {
      return "false";
    },
    "12": function _(container, depth0, helpers, partials, data) {
      return "true";
    },
    "14": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "                  <div class=\"yxt-AccordionResult-ctasWrapper\">\n                    <div class=\"yxt-AccordionResult-ctas\">\n" + ((stack1 = helpers.each.call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.callsToAction : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(15, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "                    </div>\n                  </div>\n";
    },
    "15": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.url : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(16, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "16": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {};
      return "                          <a class=\"yxt-AccordionResult-cta\"\n                             href=\"" + alias2(alias1(depth0 != null ? depth0.url : depth0, depth0)) + "\"\n                             target=\"" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.target : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(17, data, 0),
        "inverse": container.program(19, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n                             data-eventtype=\"" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.eventType : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(21, data, 0),
        "inverse": container.program(23, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n                             data-eventoptions='" + alias2(alias1(depth0 != null ? depth0.eventOptions : depth0, depth0)) + "'\n                          >\n" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.icon : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(25, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "                            <span class=\"yxt-AccordionResult-ctaLabel\">\n                              " + ((stack1 = alias1(depth0 != null ? depth0.label : depth0, depth0)) != null ? stack1 : "") + "\n                            </span>\n                          </a>\n";
    },
    "17": function _(container, depth0, helpers, partials, data) {
      return container.escapeExpression(container.lambda(depth0 != null ? depth0.target : depth0, depth0));
    },
    "19": function _(container, depth0, helpers, partials, data) {
      return "_blank";
    },
    "21": function _(container, depth0, helpers, partials, data) {
      return container.escapeExpression(container.lambda(depth0 != null ? depth0.eventType : depth0, depth0));
    },
    "23": function _(container, depth0, helpers, partials, data) {
      return "CTA_CLICK";
    },
    "25": function _(container, depth0, helpers, partials, data) {
      return "                              <div class=\"yxt-AccordionResult-ctaIconWrapper\">\n                                <span class=\"yxt-AccordionResult-ctaIcon\"\n                                      data-component=\"IconComponent\"\n                                      data-opts='{\"iconName\": \"" + container.escapeExpression(container.lambda(depth0 != null ? depth0.icon : depth0, depth0)) + "\"}'\n                                      data-prop=\"icon\"></span>\n                              </div>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.isSearchComplete : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "usePartial": true,
    "useData": true
  });
  Handlebars.registerPartial("results/resultsaccordion", context["results/resultsaccordion"]);
  context["results/resultsitem"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return " yxt-Result--" + container.escapeExpression(container.lambda((stack1 = (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1._parentOpts : stack1) != null ? stack1.modifier : stack1, depth0));
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "      <div class=\"yxt-Result-ordinalWrapper\">\n        <div class=\"yxt-Result-ordinal\">\n          " + container.escapeExpression((helper = (helper = helpers.ordinal || (depth0 != null ? depth0.ordinal : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "ordinal",
        "hash": {},
        "data": data
      }) : helper)) + "\n        </div>\n      </div>\n";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression;
      return "      <div class=\"yxt-Result-dateWrapper\">\n        <div class=\"yxt-Result-dateInnerWrapper\">\n          <span class=\"yxt-Result-day\">" + alias2(alias1((stack1 = depth0 != null ? depth0.bigDate : depth0) != null ? stack1.day : stack1, depth0)) + "</span>\n          <span class=\"yxt-Result-month\">" + alias2(alias1((stack1 = depth0 != null ? depth0.bigDate : depth0) != null ? stack1.month : stack1, depth0)) + "</span>\n        </div>\n      </div>\n";
    },
    "7": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression;
      return "        <div class=\"yxt-Result-imageWrapper\">\n          <img class=\"yxt-Result-image\" src=\"" + alias2(alias1((stack1 = depth0 != null ? depth0.image : depth0) != null ? stack1.url : stack1, depth0)) + "\" alt=\"" + alias2(alias1((stack1 = depth0 != null ? depth0.image : depth0) != null ? stack1.alternateText : stack1, depth0)) + "\">\n        </div>\n";
    },
    "9": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "            <a class=\"yxt-Result-titleLink\"\n               href=\"" + alias4((helper = (helper = helpers.link || (depth0 != null ? depth0.link : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "link",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n               data-eventtype=\"TITLE_CLICK\"\n               data-eventoptions='" + alias4((helper = (helper = helpers.eventOptions || (depth0 != null ? depth0.eventOptions : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "eventOptions",
        "hash": {},
        "data": data
      }) : helper)) + "'\n               target=\"" + ((stack1 = helpers["if"].call(alias1, (stack1 = (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1._parentOpts : stack1) != null ? stack1.target : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(10, data, 0),
        "inverse": container.program(12, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n            >" + ((stack1 = (helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "</a>\n";
    },
    "10": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return container.escapeExpression(container.lambda((stack1 = (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1._parentOpts : stack1) != null ? stack1.target : stack1, depth0));
    },
    "12": function _(container, depth0, helpers, partials, data) {
      return "_blank";
    },
    "14": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "            " + container.escapeExpression((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "\n";
    },
    "16": function _(container, depth0, helpers, partials, data) {
      var stack1, helper;
      return "          <div class=\"yxt-Result-subtitle\">\n            " + ((stack1 = (helper = (helper = helpers.subtitle || (depth0 != null ? depth0.subtitle : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "subtitle",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "\n          </div>\n";
    },
    "18": function _(container, depth0, helpers, partials, data) {
      var stack1, helper;
      return "          <div class=\"yxt-Result-details\">\n            " + ((stack1 = (helper = (helper = helpers.details || (depth0 != null ? depth0.details : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "details",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "\n          </div>\n";
    },
    "20": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "        <div class=\"yxt-Result-ctasWrapper\">\n          <div class=\"yxt-Result-ctas\">\n" + ((stack1 = helpers.each.call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.callsToAction : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(21, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "          </div>\n        </div>\n";
    },
    "21": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.url : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(22, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "22": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {};
      return "                <div class=\"Result-ctaWrapper\">\n                  <a class=\"yxt-Result-cta\" href=\"" + alias2(alias1(depth0 != null ? depth0.url : depth0, depth0)) + "\"\n                     target=\"" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.target : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(23, data, 0),
        "inverse": container.program(12, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n                     data-eventtype=\"" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.eventType : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(25, data, 0),
        "inverse": container.program(27, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\"\n                     data-eventoptions='" + alias2(alias1(depth0 != null ? depth0.eventOptions : depth0, depth0)) + "'\n                  >\n" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.icon : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(29, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "                    <span class=\"yxt-Result-ctaLabel\">\n                      " + ((stack1 = alias1(depth0 != null ? depth0.label : depth0, depth0)) != null ? stack1 : "") + "\n                    </span>\n                  </a>\n                </div>\n";
    },
    "23": function _(container, depth0, helpers, partials, data) {
      return container.escapeExpression(container.lambda(depth0 != null ? depth0.target : depth0, depth0));
    },
    "25": function _(container, depth0, helpers, partials, data) {
      return container.escapeExpression(container.lambda(depth0 != null ? depth0.eventType : depth0, depth0));
    },
    "27": function _(container, depth0, helpers, partials, data) {
      return "CTA_CLICK";
    },
    "29": function _(container, depth0, helpers, partials, data) {
      return "                      <div class=\"yxt-Result-ctaIconWrapper\">\n                        <span class=\"yxt-Result-ctaIcon\"\n                              data-component=\"IconComponent\"\n                              data-opts='{\"iconName\": \"" + container.escapeExpression(container.lambda(depth0 != null ? depth0.icon : depth0, depth0)) + "\"}'\n                              data-prop=\"icon\"\n                        ></span>\n                      </div>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<li class=\"yxt-Result" + ((stack1 = helpers["if"].call(alias1, (stack1 = (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1._parentOpts : stack1) != null ? stack1.modifier : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + " yxt-Result-item\">\n  <div class=\"yxt-Result-wrapper\">\n" + ((stack1 = helpers["if"].call(alias1, (stack1 = (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1._parentOpts : stack1) != null ? stack1.showOrdinal : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n" + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0.bigDate : depth0) != null ? stack1.day : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n" + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0.image : depth0) != null ? stack1.url : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(7, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n    <div class=\"yxt-Result-infoCtasWrapper\">\n      <div class=\"yxt-Result-info\">\n        <h3 class=\"yxt-Result-title\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.link : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(9, data, 0),
        "inverse": container.program(14, data, 0),
        "data": data
      })) != null ? stack1 : "") + "        </h3>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.subtitle : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(16, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.details : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(18, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "      </div>\n\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.callsToAction : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(20, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "    </div>\n  </div>\n</li>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("results/resultsitem", context["results/resultsitem"]);
  context["results/resultssectionheader"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "    <a class=\"yxt-Results-viewAllLink\" href=\"" + alias4((helper = (helper = helpers.verticalURL || (depth0 != null ? depth0.verticalURL : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "verticalURL",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n       data-eventtype=\"VERTICAL_VIEW_ALL\"\n       data-eventoptions='" + alias4((helper = (helper = helpers.eventOptions || (depth0 != null ? depth0.eventOptions : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "eventOptions",
        "hash": {},
        "data": data
      }) : helper)) + "'>\n      " + alias4(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.viewAllText : stack1, depth0)) + "\n    </a>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "  <ul class=\"yxt-Results-filters\">\n" + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.appliedQueryFilters : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(4, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.showChangeFilters : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(6, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </ul>\n";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "      <li class=\"yxt-Results-filter\">\n        <span class=\"yxt-Results-filterValue\">" + container.escapeExpression((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "value",
        "hash": {},
        "data": data
      }) : helper)) + "</span>\n      </li>\n";
    },
    "6": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.verticalURL : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(7, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "7": function _(container, depth0, helpers, partials, data) {
      var helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "        <a class=\"yxt-Results-changeFilters\" href=\"" + alias4((helper = (helper = helpers.verticalURL || (depth0 != null ? depth0.verticalURL : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "verticalURL",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n           data-eventtype=\"FILTERING_WITHIN_SECTION\"\n           data-eventoptions='" + alias4((helper = (helper = helpers.eventOptions || (depth0 != null ? depth0.eventOptions : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "eventOptions",
        "hash": {},
        "data": data
      }) : helper)) + "'>\n          change\n        </a>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          alias1 = container.lambda,
          alias2 = container.escapeExpression,
          alias3 = depth0 != null ? depth0 : container.nullContext || {};
      return "<div class=\"yxt-Results-titleBar\">\n  <div class=\"yxt-Results-left\">\n    <div class=\"yxt-Results-titleIconWrapper\"\n         data-component=\"IconComponent\"\n         data-opts='{\n            \"iconName\": \"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.sectionTitleIconName : stack1, depth0)) + "\",\n            \"customIcon\": \"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.customSectionTitleIcon : stack1, depth0)) + "\",\n            \"iconUrl\": \"" + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.sectionTitleIconUrl : stack1, depth0)) + "\"\n          }'\n         data-prop=\"icon\"\n    ></div>\n    <h2 class=\"yxt-Results-title\">\n      " + alias2(alias1((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.sectionTitle : stack1, depth0)) + "\n    </h2>\n  </div>\n" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.verticalURL : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</div>\n" + ((stack1 = helpers["if"].call(alias3, depth0 != null ? depth0.appliedQueryFilters : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "");
    },
    "useData": true
  });
  Handlebars.registerPartial("results/resultssectionheader", context["results/resultssectionheader"]);
  context["results/universalresults"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.showNoResults : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0),
        "inverse": container.program(4, data, 0),
        "data": data
      })) != null ? stack1 : "";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = container.invokePartial(partials["results/noresults"], depth0, {
        "name": "results/noresults",
        "data": data,
        "indent": "    ",
        "helpers": helpers,
        "partials": partials,
        "decorators": container.decorators
      })) != null ? stack1 : "";
    },
    "4": function _(container, depth0, helpers, partials, data) {
      return "    <div class=\"universal-result-list\">\n      <div class=\"universal-result-sections\"\n          data-component=\"VerticalResults\"\n          data-prop=\"sections\">\n      </div>\n    </div>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.isSearchComplete : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "usePartial": true,
    "useData": true
  });
  Handlebars.registerPartial("results/universalresults", context["results/universalresults"]);
  context["search/autocomplete"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "  <div class=\"yxt-AutoComplete\">\n    " + container.escapeExpression((helpers.assign || depth0 && depth0.assign || helpers.helperMissing).call(alias1, "currentSelected", depth0 != null ? depth0.sectionIndex : depth0, depth0 != null ? depth0.resultIndex : depth0, {
        "name": "assign",
        "hash": {},
        "data": data
      })) + "\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.promptHeader : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(2, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.sections : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(4, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "  </div>\n";
    },
    "2": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "      <ul class=\"yxt-AutoComplete-results\">\n        <li class=\"yxt-AutoComplete-option yxt-AutoComplete-option--promptHeader\">\n          " + container.escapeExpression((helper = (helper = helpers.promptHeader || (depth0 != null ? depth0.promptHeader : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "promptHeader",
        "hash": {},
        "data": data
      }) : helper)) + "\n        </li>\n      </ul>\n";
    },
    "4": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "      <ul class=\"yxt-AutoComplete-results\">\n" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.label : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ((stack1 = helpers.each.call(alias1, depth0 != null ? depth0.results : depth0, {
        "name": "each",
        "hash": {},
        "fn": container.program(7, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "      </ul>\n";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "        <li class=\"yxt-AutoComplete-resultHeader\">" + container.escapeExpression((helper = (helper = helpers.label || (depth0 != null ? depth0.label : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "label",
        "hash": {},
        "data": data
      }) : helper)) + "</li>\n";
    },
    "7": function _(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = container.escapeExpression,
          alias4 = "function";
      return "        " + alias3((helpers.assign || depth0 && depth0.assign || alias2).call(alias1, "currentIndex", container.data(data, 1) && container.data(data, 1).index, data && data.index, {
        "name": "assign",
        "hash": {},
        "data": data
      })) + "\n        <li class=\"js-yext-autocomplete-option yxt-AutoComplete-option yxt-AutoComplete-option--item" + ((stack1 = (helpers.ifeq || depth0 && depth0.ifeq || alias2).call(alias1, depths[2] != null ? depths[2].currentSelected : depths[2], depths[2] != null ? depths[2].currentIndex : depths[2], {
        "name": "ifeq",
        "hash": {},
        "fn": container.program(8, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"\n            data-value=\"" + alias3((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias2, _typeof(helper) === alias4 ? helper.call(alias1, {
        "name": "value",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n            data-short=\"" + alias3((helper = (helper = helpers.shortValue || (depth0 != null ? depth0.shortValue : depth0)) != null ? helper : alias2, _typeof(helper) === alias4 ? helper.call(alias1, {
        "name": "shortValue",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n            data-filter='" + alias3((helpers.json || depth0 && depth0.json || alias2).call(alias1, depth0 != null ? depth0.filter : depth0, {
        "name": "json",
        "hash": {},
        "data": data
      })) + "'\n            data-eventtype=\"AUTO_COMPLETE_SELECTION\"\n            data-eventoptions='{\"suggestedSearchText\": \"" + alias3((helper = (helper = helpers.value || (depth0 != null ? depth0.value : depth0)) != null ? helper : alias2, _typeof(helper) === alias4 ? helper.call(alias1, {
        "name": "value",
        "hash": {},
        "data": data
      }) : helper)) + "\"}'\n        >\n            " + ((stack1 = (helper = (helper = helpers.highlightedValue || (depth0 != null ? depth0.highlightedValue : depth0)) != null ? helper : alias2, _typeof(helper) === alias4 ? helper.call(alias1, {
        "name": "highlightedValue",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "\n        </li>\n";
    },
    "8": function _(container, depth0, helpers, partials, data) {
      return " yxt-selected";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data, blockParams, depths) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.hasResults : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0, blockParams, depths),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "useData": true,
    "useDepths": true
  });
  Handlebars.registerPartial("search/autocomplete", context["search/autocomplete"]);
  context["search/filtersearch"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "placeholder=\"" + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.placeholderText : stack1, depth0)) + "\"";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "<h1>" + alias4((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "</h1>\n<div class=\"yext-search-container\">\n  <label for=\"query\">" + alias4((helper = (helper = helpers.searchText || (depth0 != null ? depth0.searchText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "searchText",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n  <input class=\"js-yext-query\"\n         type=\"text\"\n         name=\"query\"\n         value=\"" + alias4((helper = (helper = helpers.query || (depth0 != null ? depth0.query : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "query",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n         " + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.placeholderText : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ">\n  </input>\n  <div class=\"yxt-SearchBar-autocomplete\"></div>\n</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("search/filtersearch", context["search/filtersearch"]);
  context["search/locationbias"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      return "style=\"display:none\"";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      return "yxt-locationBias-preciseLoc";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      return " yxt-LocationBias-unknownLoc ";
    },
    "7": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "(" + container.escapeExpression((helper = (helper = helpers.accuracyText || (depth0 != null ? depth0.accuracyText : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "accuracyText",
        "hash": {},
        "data": data
      }) : helper)) + ")";
    },
    "9": function _(container, depth0, helpers, partials, data) {
      return "| <button class=\"js-locationBias-update-location yxt-locationBias-updateLoc\">Update your location</button>";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {};
      return "<div class=\"yxt-LocationBias\" " + ((stack1 = helpers.unless.call(alias1, depth0 != null ? depth0.shouldShow : depth0, {
        "name": "unless",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ">\n  <div class=\"yxt-LocationBias-container\">\n    <span class=\"yxt-locationBias-bullet " + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.isPreciseLocation : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + " \n    " + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.isUnknownLocation : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "\"></span>\n    <strong>" + container.escapeExpression((helper = (helper = helpers.locationDisplayName || (depth0 != null ? depth0.locationDisplayName : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(alias1, {
        "name": "locationDisplayName",
        "hash": {},
        "data": data
      }) : helper)) + "</strong> \n    <span class=\"yxt-locationBias-locSource\">" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.accuracyText : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(7, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + " " + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.allowUpdate : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(9, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "</span>\n  </div>\n</div>";
    },
    "useData": true
  });
  Handlebars.registerPartial("search/locationbias", context["search/locationbias"]);
  context["search/search"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var helper;
      return "  <h1 class=\"yxt-SearchBar-title\">" + container.escapeExpression((helper = (helper = helpers.title || (depth0 != null ? depth0.title : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "title",
        "hash": {},
        "data": data
      }) : helper)) + "</h1>\n";
    },
    "3": function _(container, depth0, helpers, partials, data) {
      var stack1;
      return "placeholder=\"" + container.escapeExpression(container.lambda((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.placeholderText : stack1, depth0)) + "\"";
    },
    "5": function _(container, depth0, helpers, partials, data) {
      var helper;
      return container.escapeExpression((helper = (helper = helpers.submitIcon || (depth0 != null ? depth0.submitIcon : depth0)) != null ? helper : helpers.helperMissing, typeof helper === "function" ? helper.call(depth0 != null ? depth0 : container.nullContext || {}, {
        "name": "submitIcon",
        "hash": {},
        "data": data
      }) : helper));
    },
    "7": function _(container, depth0, helpers, partials, data) {
      return "magnifying_glass";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression,
          alias5 = container.lambda;
      return ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.title : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + "<div class=\"yxt-SearchBar\">\n  <div class=\"yxt-SearchBar-container\">\n    <form class=\"yxt-SearchBar-form\">\n      <label class=\"yxt-SearchBar-label\" for=\"query\">" + alias4((helper = (helper = helpers.labelText || (depth0 != null ? depth0.labelText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "labelText",
        "hash": {},
        "data": data
      }) : helper)) + "</label>\n      <input class=\"js-yext-query yxt-SearchBar-input\"\n             type=\"text\"\n             name=\"query\"\n             value=\"" + alias4((helper = (helper = helpers.query || (depth0 != null ? depth0.query : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "query",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n             " + ((stack1 = helpers["if"].call(alias1, (stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.placeholderText : stack1, {
        "name": "if",
        "hash": {},
        "fn": container.program(3, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "") + ">\n      <button type=\"button\"\n              class=\"js-yxt-SearchBar-clear yxt-SearchBar-clear yxt-SearchBar--hidden\"\n              data-eventtype=\"SEARCH_CLEAR_BUTTON\"\n              data-eventoptions=\"" + alias4((helper = (helper = helpers.eventOptions || (depth0 != null ? depth0.eventOptions : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "eventOptions",
        "hash": {},
        "data": data
      }) : helper)) + "\"\n              data-component=\"IconComponent\"\n              data-opts='{ \"iconName\": \"close\" }'\n              data-prop=\"icon\"\n      >\n        <span class=\"yxt-SearchBar-clearButtonText sr-only\">\n          " + alias4((helper = (helper = helpers.clearText || (depth0 != null ? depth0.clearText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "clearText",
        "hash": {},
        "data": data
      }) : helper)) + "\n        </span>\n      </button>\n      <button type=\"submit\" class=\"js-yext-submit yxt-SearchBar-button\">\n        <div class=\"yxt-SearchBar-buttonImage\"\n             data-component=\"IconComponent\"\n             data-opts='{\n                \"iconName\": \"" + ((stack1 = helpers["if"].call(alias1, depth0 != null ? depth0.submitIcon : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(5, data, 0),
        "inverse": container.program(7, data, 0),
        "data": data
      })) != null ? stack1 : "") + "\",\n                \"customIcon\": \"" + alias4(alias5((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.customIcon : stack1, depth0)) + "\",\n                \"iconUrl\": \"" + alias4(alias5((stack1 = depth0 != null ? depth0._config : depth0) != null ? stack1.customIconUrl : stack1, depth0)) + "\"\n              }'\n             data-prop=\"icon\"\n        ></div>\n        <span class=\"yxt-SearchBar-buttonText sr-only\">\n          " + alias4((helper = (helper = helpers.submitText || (depth0 != null ? depth0.submitText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "submitText",
        "hash": {},
        "data": data
      }) : helper)) + "\n        </span>\n      </button>\n    </form>\n    <div class=\"yxt-SearchBar-autocomplete yxt-AutoComplete-wrapper js-yxt-AutoComplete-wrapper\"></div>\n  </div>\n</div>\n";
    },
    "useData": true
  });
  Handlebars.registerPartial("search/search", context["search/search"]);
  context["search/spellcheck"] = Handlebars.template({
    "1": function _(container, depth0, helpers, partials, data) {
      var stack1,
          helper,
          alias1 = depth0 != null ? depth0 : container.nullContext || {},
          alias2 = helpers.helperMissing,
          alias3 = "function",
          alias4 = container.escapeExpression;
      return "  <div class=\"yxt-SpellCheck\">\n    <div class=\"yxt-SpellCheck-container\">\n      <span class=\"yxt-SpellCheck-helpText\">" + alias4((helper = (helper = helpers.helpText || (depth0 != null ? depth0.helpText : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "helpText",
        "hash": {},
        "data": data
      }) : helper)) + "</span> \n      <a href=\"" + alias4((helper = (helper = helpers.correctedQueryUrl || (depth0 != null ? depth0.correctedQueryUrl : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "correctedQueryUrl",
        "hash": {},
        "data": data
      }) : helper)) + "\">" + ((stack1 = (helper = (helper = helpers.correctedQueryDisplay || (depth0 != null ? depth0.correctedQueryDisplay : depth0)) != null ? helper : alias2, _typeof(helper) === alias3 ? helper.call(alias1, {
        "name": "correctedQueryDisplay",
        "hash": {},
        "data": data
      }) : helper)) != null ? stack1 : "") + "</a>\n    </div>\n  </div>\n";
    },
    "compiler": [7, ">= 4.0.0"],
    "main": function main(container, depth0, helpers, partials, data) {
      var stack1;
      return (stack1 = helpers["if"].call(depth0 != null ? depth0 : container.nullContext || {}, depth0 != null ? depth0.shouldShow : depth0, {
        "name": "if",
        "hash": {},
        "fn": container.program(1, data, 0),
        "inverse": container.noop,
        "data": data
      })) != null ? stack1 : "";
    },
    "useData": true
  });
  Handlebars.registerPartial("search/spellcheck", context["search/spellcheck"]);

  var autoinit = function () {
    if (window.ANSWERS) {
      ANSWERS.templates.register(context);
    }
  }();

  exports.default = context;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
